From 417c19274d31ec7fe01983924f7868ba8f5c9091 Mon Sep 17 00:00:00 2001
From: Felicitas Pojtinger <felicitas@pojtinger.com>
Date: Wed, 08 Oct 2025 21:40:16 -0700
Subject: [PATCH] Gen: Re-run script

Signed-off-by: Felicitas Pojtinger <felicitas@pojtinger.com>
---
diff --git a/v4/adw/adw-action-row.go b/v4/adw/adw-action-row.go
index 18b9b6d92b1c027b4c3ff19688aed41e975f3c85..feb27c6a34f840a8760d6a996a029138802f1df5 100644
--- a/v4/adw/adw-action-row.go
+++ b/v4/adw/adw-action-row.go
@@ -27,9 +27,9 @@ func (x *ActionRowClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackActivate sets the callback function.
+// OverrideActivate sets the callback function.
 // Activates the row to trigger its main action.
-func (x *ActionRowClass) SetCallbackActivate(cb func(*ActionRow)) {
+func (x *ActionRowClass) OverrideActivate(cb func(*ActionRow)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -39,9 +39,9 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
+// GetActivate gets the callback function.
 // Activates the row to trigger its main action.
-func (x *ActionRowClass) GetCallbackActivate() func(*ActionRow) {
+func (x *ActionRowClass) GetActivate() func(*ActionRow) {
 	if x.xActivate == 0 {
 		return nil
 	}
diff --git a/v4/adw/adw-alert-dialog.go b/v4/adw/adw-alert-dialog.go
index 16227a5239c8d965fd3e9276808a45862d492bf1..97dcf56965d97eed6dcca7af5a69ccb9e40a79e8 100644
--- a/v4/adw/adw-alert-dialog.go
+++ b/v4/adw/adw-alert-dialog.go
@@ -28,8 +28,8 @@ func (x *AlertDialogClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackResponse sets the callback function.
-func (x *AlertDialogClass) SetCallbackResponse(cb func(*AlertDialog, string)) {
+// OverrideResponse sets the callback function.
+func (x *AlertDialogClass) OverrideResponse(cb func(*AlertDialog, string)) {
 	if cb == nil {
 		x.xResponse = 0
 	} else {
@@ -39,8 +39,8 @@ 		})
 	}
 }
 
-// GetCallbackResponse gets the callback function.
-func (x *AlertDialogClass) GetCallbackResponse() func(*AlertDialog, string) {
+// GetResponse gets the callback function.
+func (x *AlertDialogClass) GetResponse() func(*AlertDialog, string) {
 	if x.xResponse == 0 {
 		return nil
 	}
diff --git a/v4/adw/adw-dialog.go b/v4/adw/adw-dialog.go
index 6bd4e233434e1c9da57bc07c73b7dd07f38d811c..454a8093fef891bafd4db7200ac467cffd956063 100644
--- a/v4/adw/adw-dialog.go
+++ b/v4/adw/adw-dialog.go
@@ -29,8 +29,8 @@ func (x *DialogClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackCloseAttempt sets the callback function.
-func (x *DialogClass) SetCallbackCloseAttempt(cb func(*Dialog)) {
+// OverrideCloseAttempt sets the callback function.
+func (x *DialogClass) OverrideCloseAttempt(cb func(*Dialog)) {
 	if cb == nil {
 		x.xCloseAttempt = 0
 	} else {
@@ -40,8 +40,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseAttempt gets the callback function.
-func (x *DialogClass) GetCallbackCloseAttempt() func(*Dialog) {
+// GetCloseAttempt gets the callback function.
+func (x *DialogClass) GetCloseAttempt() func(*Dialog) {
 	if x.xCloseAttempt == 0 {
 		return nil
 	}
@@ -52,8 +52,8 @@ 		rawCallback(DialogVar.GoPointer())
 	}
 }
 
-// SetCallbackClosed sets the callback function.
-func (x *DialogClass) SetCallbackClosed(cb func(*Dialog)) {
+// OverrideClosed sets the callback function.
+func (x *DialogClass) OverrideClosed(cb func(*Dialog)) {
 	if cb == nil {
 		x.xClosed = 0
 	} else {
@@ -63,8 +63,8 @@ 		})
 	}
 }
 
-// GetCallbackClosed gets the callback function.
-func (x *DialogClass) GetCallbackClosed() func(*Dialog) {
+// GetClosed gets the callback function.
+func (x *DialogClass) GetClosed() func(*Dialog) {
 	if x.xClosed == 0 {
 		return nil
 	}
diff --git a/v4/adw/adw-message-dialog.go b/v4/adw/adw-message-dialog.go
index 17e32d0c20388095501ffa3f34b862d477ba8c1e..34d8d7c55168b130c28463242b9def867b583984 100644
--- a/v4/adw/adw-message-dialog.go
+++ b/v4/adw/adw-message-dialog.go
@@ -30,8 +30,8 @@ func (x *MessageDialogClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackResponse sets the callback function.
-func (x *MessageDialogClass) SetCallbackResponse(cb func(*MessageDialog, string)) {
+// OverrideResponse sets the callback function.
+func (x *MessageDialogClass) OverrideResponse(cb func(*MessageDialog, string)) {
 	if cb == nil {
 		x.xResponse = 0
 	} else {
@@ -41,8 +41,8 @@ 		})
 	}
 }
 
-// GetCallbackResponse gets the callback function.
-func (x *MessageDialogClass) GetCallbackResponse() func(*MessageDialog, string) {
+// GetResponse gets the callback function.
+func (x *MessageDialogClass) GetResponse() func(*MessageDialog, string) {
 	if x.xResponse == 0 {
 		return nil
 	}
diff --git a/v4/adw/adw-navigation-view.go b/v4/adw/adw-navigation-view.go
index 58e07c2ffe22103f4283a18c1d2344aa15ba9c4b..18e5e261f2c88138379f9607cc019ac5279977d1 100644
--- a/v4/adw/adw-navigation-view.go
+++ b/v4/adw/adw-navigation-view.go
@@ -35,8 +35,8 @@ func (x *NavigationPageClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackShowing sets the callback function.
-func (x *NavigationPageClass) SetCallbackShowing(cb func(*NavigationPage)) {
+// OverrideShowing sets the callback function.
+func (x *NavigationPageClass) OverrideShowing(cb func(*NavigationPage)) {
 	if cb == nil {
 		x.xShowing = 0
 	} else {
@@ -46,8 +46,8 @@ 		})
 	}
 }
 
-// GetCallbackShowing gets the callback function.
-func (x *NavigationPageClass) GetCallbackShowing() func(*NavigationPage) {
+// GetShowing gets the callback function.
+func (x *NavigationPageClass) GetShowing() func(*NavigationPage) {
 	if x.xShowing == 0 {
 		return nil
 	}
@@ -58,8 +58,8 @@ 		rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackShown sets the callback function.
-func (x *NavigationPageClass) SetCallbackShown(cb func(*NavigationPage)) {
+// OverrideShown sets the callback function.
+func (x *NavigationPageClass) OverrideShown(cb func(*NavigationPage)) {
 	if cb == nil {
 		x.xShown = 0
 	} else {
@@ -69,8 +69,8 @@ 		})
 	}
 }
 
-// GetCallbackShown gets the callback function.
-func (x *NavigationPageClass) GetCallbackShown() func(*NavigationPage) {
+// GetShown gets the callback function.
+func (x *NavigationPageClass) GetShown() func(*NavigationPage) {
 	if x.xShown == 0 {
 		return nil
 	}
@@ -81,8 +81,8 @@ 		rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackHiding sets the callback function.
-func (x *NavigationPageClass) SetCallbackHiding(cb func(*NavigationPage)) {
+// OverrideHiding sets the callback function.
+func (x *NavigationPageClass) OverrideHiding(cb func(*NavigationPage)) {
 	if cb == nil {
 		x.xHiding = 0
 	} else {
@@ -92,8 +92,8 @@ 		})
 	}
 }
 
-// GetCallbackHiding gets the callback function.
-func (x *NavigationPageClass) GetCallbackHiding() func(*NavigationPage) {
+// GetHiding gets the callback function.
+func (x *NavigationPageClass) GetHiding() func(*NavigationPage) {
 	if x.xHiding == 0 {
 		return nil
 	}
@@ -104,8 +104,8 @@ 		rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackHidden sets the callback function.
-func (x *NavigationPageClass) SetCallbackHidden(cb func(*NavigationPage)) {
+// OverrideHidden sets the callback function.
+func (x *NavigationPageClass) OverrideHidden(cb func(*NavigationPage)) {
 	if cb == nil {
 		x.xHidden = 0
 	} else {
@@ -115,8 +115,8 @@ 		})
 	}
 }
 
-// GetCallbackHidden gets the callback function.
-func (x *NavigationPageClass) GetCallbackHidden() func(*NavigationPage) {
+// GetHidden gets the callback function.
+func (x *NavigationPageClass) GetHidden() func(*NavigationPage) {
 	if x.xHidden == 0 {
 		return nil
 	}
diff --git a/v4/adw/adw-swipeable.go b/v4/adw/adw-swipeable.go
index 14ec87cc818a9ec05b197c25eff3ecd813f12957..e041d83b577036fab6d837fe3bfb2491fae6f286 100644
--- a/v4/adw/adw-swipeable.go
+++ b/v4/adw/adw-swipeable.go
@@ -34,9 +34,9 @@ func (x *SwipeableInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetDistance sets the callback function.
+// OverrideGetDistance sets the callback function.
 // Gets the swipe distance.
-func (x *SwipeableInterface) SetCallbackGetDistance(cb func(Swipeable) float64) {
+func (x *SwipeableInterface) OverrideGetDistance(cb func(Swipeable) float64) {
 	if cb == nil {
 		x.xGetDistance = 0
 	} else {
@@ -46,9 +46,9 @@ 		})
 	}
 }
 
-// GetCallbackGetDistance gets the callback function.
+// GetGetDistance gets the callback function.
 // Gets the swipe distance.
-func (x *SwipeableInterface) GetCallbackGetDistance() func(Swipeable) float64 {
+func (x *SwipeableInterface) GetGetDistance() func(Swipeable) float64 {
 	if x.xGetDistance == 0 {
 		return nil
 	}
@@ -59,9 +59,9 @@ 		return rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackGetSnapPoints sets the callback function.
+// OverrideGetSnapPoints sets the callback function.
 // Gets the snap points.
-func (x *SwipeableInterface) SetCallbackGetSnapPoints(cb func(Swipeable, int) uintptr) {
+func (x *SwipeableInterface) OverrideGetSnapPoints(cb func(Swipeable, int) uintptr) {
 	if cb == nil {
 		x.xGetSnapPoints = 0
 	} else {
@@ -71,9 +71,9 @@ 		})
 	}
 }
 
-// GetCallbackGetSnapPoints gets the callback function.
+// GetGetSnapPoints gets the callback function.
 // Gets the snap points.
-func (x *SwipeableInterface) GetCallbackGetSnapPoints() func(Swipeable, int) uintptr {
+func (x *SwipeableInterface) GetGetSnapPoints() func(Swipeable, int) uintptr {
 	if x.xGetSnapPoints == 0 {
 		return nil
 	}
@@ -84,9 +84,9 @@ 		return rawCallback(SelfVar.GoPointer(), NSnapPointsVar)
 	}
 }
 
-// SetCallbackGetProgress sets the callback function.
+// OverrideGetProgress sets the callback function.
 // Gets the current progress.
-func (x *SwipeableInterface) SetCallbackGetProgress(cb func(Swipeable) float64) {
+func (x *SwipeableInterface) OverrideGetProgress(cb func(Swipeable) float64) {
 	if cb == nil {
 		x.xGetProgress = 0
 	} else {
@@ -96,9 +96,9 @@ 		})
 	}
 }
 
-// GetCallbackGetProgress gets the callback function.
+// GetGetProgress gets the callback function.
 // Gets the current progress.
-func (x *SwipeableInterface) GetCallbackGetProgress() func(Swipeable) float64 {
+func (x *SwipeableInterface) GetGetProgress() func(Swipeable) float64 {
 	if x.xGetProgress == 0 {
 		return nil
 	}
@@ -109,9 +109,9 @@ 		return rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackGetCancelProgress sets the callback function.
+// OverrideGetCancelProgress sets the callback function.
 // Gets the cancel progress.
-func (x *SwipeableInterface) SetCallbackGetCancelProgress(cb func(Swipeable) float64) {
+func (x *SwipeableInterface) OverrideGetCancelProgress(cb func(Swipeable) float64) {
 	if cb == nil {
 		x.xGetCancelProgress = 0
 	} else {
@@ -121,9 +121,9 @@ 		})
 	}
 }
 
-// GetCallbackGetCancelProgress gets the callback function.
+// GetGetCancelProgress gets the callback function.
 // Gets the cancel progress.
-func (x *SwipeableInterface) GetCallbackGetCancelProgress() func(Swipeable) float64 {
+func (x *SwipeableInterface) GetGetCancelProgress() func(Swipeable) float64 {
 	if x.xGetCancelProgress == 0 {
 		return nil
 	}
@@ -134,9 +134,9 @@ 		return rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackGetSwipeArea sets the callback function.
+// OverrideGetSwipeArea sets the callback function.
 // Gets the swipeable rectangle.
-func (x *SwipeableInterface) SetCallbackGetSwipeArea(cb func(Swipeable, NavigationDirection, bool, *gdk.Rectangle)) {
+func (x *SwipeableInterface) OverrideGetSwipeArea(cb func(Swipeable, NavigationDirection, bool, *gdk.Rectangle)) {
 	if cb == nil {
 		x.xGetSwipeArea = 0
 	} else {
@@ -146,9 +146,9 @@ 		})
 	}
 }
 
-// GetCallbackGetSwipeArea gets the callback function.
+// GetGetSwipeArea gets the callback function.
 // Gets the swipeable rectangle.
-func (x *SwipeableInterface) GetCallbackGetSwipeArea() func(Swipeable, NavigationDirection, bool, *gdk.Rectangle) {
+func (x *SwipeableInterface) GetGetSwipeArea() func(Swipeable, NavigationDirection, bool, *gdk.Rectangle) {
 	if x.xGetSwipeArea == 0 {
 		return nil
 	}
diff --git a/v4/gdk/gdkcontentprovider.go b/v4/gdk/gdkcontentprovider.go
index 1083eb8bc77633644e66e31adb06e48bd783f542..b45db22773edf68a860b5d8f151d6d7f025d3434 100644
--- a/v4/gdk/gdkcontentprovider.go
+++ b/v4/gdk/gdkcontentprovider.go
@@ -42,8 +42,8 @@ func (x *ContentProviderClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackContentChanged sets the callback function.
-func (x *ContentProviderClass) SetCallbackContentChanged(cb func(*ContentProvider)) {
+// OverrideContentChanged sets the callback function.
+func (x *ContentProviderClass) OverrideContentChanged(cb func(*ContentProvider)) {
 	if cb == nil {
 		x.xContentChanged = 0
 	} else {
@@ -53,8 +53,8 @@ 		})
 	}
 }
 
-// GetCallbackContentChanged gets the callback function.
-func (x *ContentProviderClass) GetCallbackContentChanged() func(*ContentProvider) {
+// GetContentChanged gets the callback function.
+func (x *ContentProviderClass) GetContentChanged() func(*ContentProvider) {
 	if x.xContentChanged == 0 {
 		return nil
 	}
@@ -65,8 +65,8 @@ 		rawCallback(ProviderVar.GoPointer())
 	}
 }
 
-// SetCallbackAttachClipboard sets the callback function.
-func (x *ContentProviderClass) SetCallbackAttachClipboard(cb func(*ContentProvider, *Clipboard)) {
+// OverrideAttachClipboard sets the callback function.
+func (x *ContentProviderClass) OverrideAttachClipboard(cb func(*ContentProvider, *Clipboard)) {
 	if cb == nil {
 		x.xAttachClipboard = 0
 	} else {
@@ -76,8 +76,8 @@ 		})
 	}
 }
 
-// GetCallbackAttachClipboard gets the callback function.
-func (x *ContentProviderClass) GetCallbackAttachClipboard() func(*ContentProvider, *Clipboard) {
+// GetAttachClipboard gets the callback function.
+func (x *ContentProviderClass) GetAttachClipboard() func(*ContentProvider, *Clipboard) {
 	if x.xAttachClipboard == 0 {
 		return nil
 	}
@@ -88,8 +88,8 @@ 		rawCallback(ProviderVar.GoPointer(), ClipboardVar.GoPointer())
 	}
 }
 
-// SetCallbackDetachClipboard sets the callback function.
-func (x *ContentProviderClass) SetCallbackDetachClipboard(cb func(*ContentProvider, *Clipboard)) {
+// OverrideDetachClipboard sets the callback function.
+func (x *ContentProviderClass) OverrideDetachClipboard(cb func(*ContentProvider, *Clipboard)) {
 	if cb == nil {
 		x.xDetachClipboard = 0
 	} else {
@@ -99,8 +99,8 @@ 		})
 	}
 }
 
-// GetCallbackDetachClipboard gets the callback function.
-func (x *ContentProviderClass) GetCallbackDetachClipboard() func(*ContentProvider, *Clipboard) {
+// GetDetachClipboard gets the callback function.
+func (x *ContentProviderClass) GetDetachClipboard() func(*ContentProvider, *Clipboard) {
 	if x.xDetachClipboard == 0 {
 		return nil
 	}
@@ -111,8 +111,8 @@ 		rawCallback(ProviderVar.GoPointer(), ClipboardVar.GoPointer())
 	}
 }
 
-// SetCallbackRefFormats sets the callback function.
-func (x *ContentProviderClass) SetCallbackRefFormats(cb func(*ContentProvider) *ContentFormats) {
+// OverrideRefFormats sets the callback function.
+func (x *ContentProviderClass) OverrideRefFormats(cb func(*ContentProvider) *ContentFormats) {
 	if cb == nil {
 		x.xRefFormats = 0
 	} else {
@@ -122,8 +122,8 @@ 		})
 	}
 }
 
-// GetCallbackRefFormats gets the callback function.
-func (x *ContentProviderClass) GetCallbackRefFormats() func(*ContentProvider) *ContentFormats {
+// GetRefFormats gets the callback function.
+func (x *ContentProviderClass) GetRefFormats() func(*ContentProvider) *ContentFormats {
 	if x.xRefFormats == 0 {
 		return nil
 	}
@@ -134,8 +134,8 @@ 		return rawCallback(ProviderVar.GoPointer())
 	}
 }
 
-// SetCallbackRefStorableFormats sets the callback function.
-func (x *ContentProviderClass) SetCallbackRefStorableFormats(cb func(*ContentProvider) *ContentFormats) {
+// OverrideRefStorableFormats sets the callback function.
+func (x *ContentProviderClass) OverrideRefStorableFormats(cb func(*ContentProvider) *ContentFormats) {
 	if cb == nil {
 		x.xRefStorableFormats = 0
 	} else {
@@ -145,8 +145,8 @@ 		})
 	}
 }
 
-// GetCallbackRefStorableFormats gets the callback function.
-func (x *ContentProviderClass) GetCallbackRefStorableFormats() func(*ContentProvider) *ContentFormats {
+// GetRefStorableFormats gets the callback function.
+func (x *ContentProviderClass) GetRefStorableFormats() func(*ContentProvider) *ContentFormats {
 	if x.xRefStorableFormats == 0 {
 		return nil
 	}
@@ -157,8 +157,8 @@ 		return rawCallback(ProviderVar.GoPointer())
 	}
 }
 
-// SetCallbackWriteMimeTypeAsync sets the callback function.
-func (x *ContentProviderClass) SetCallbackWriteMimeTypeAsync(cb func(*ContentProvider, string, *gio.OutputStream, int, *gio.Cancellable, *gio.AsyncReadyCallback, uintptr)) {
+// OverrideWriteMimeTypeAsync sets the callback function.
+func (x *ContentProviderClass) OverrideWriteMimeTypeAsync(cb func(*ContentProvider, string, *gio.OutputStream, int, *gio.Cancellable, *gio.AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xWriteMimeTypeAsync = 0
 	} else {
@@ -168,8 +168,8 @@ 		})
 	}
 }
 
-// GetCallbackWriteMimeTypeAsync gets the callback function.
-func (x *ContentProviderClass) GetCallbackWriteMimeTypeAsync() func(*ContentProvider, string, *gio.OutputStream, int, *gio.Cancellable, *gio.AsyncReadyCallback, uintptr) {
+// GetWriteMimeTypeAsync gets the callback function.
+func (x *ContentProviderClass) GetWriteMimeTypeAsync() func(*ContentProvider, string, *gio.OutputStream, int, *gio.Cancellable, *gio.AsyncReadyCallback, uintptr) {
 	if x.xWriteMimeTypeAsync == 0 {
 		return nil
 	}
@@ -180,8 +180,8 @@ 		rawCallback(ProviderVar.GoPointer(), MimeTypeVar, StreamVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackWriteMimeTypeFinish sets the callback function.
-func (x *ContentProviderClass) SetCallbackWriteMimeTypeFinish(cb func(*ContentProvider, gio.AsyncResult) bool) {
+// OverrideWriteMimeTypeFinish sets the callback function.
+func (x *ContentProviderClass) OverrideWriteMimeTypeFinish(cb func(*ContentProvider, gio.AsyncResult) bool) {
 	if cb == nil {
 		x.xWriteMimeTypeFinish = 0
 	} else {
@@ -191,8 +191,8 @@ 		})
 	}
 }
 
-// GetCallbackWriteMimeTypeFinish gets the callback function.
-func (x *ContentProviderClass) GetCallbackWriteMimeTypeFinish() func(*ContentProvider, gio.AsyncResult) bool {
+// GetWriteMimeTypeFinish gets the callback function.
+func (x *ContentProviderClass) GetWriteMimeTypeFinish() func(*ContentProvider, gio.AsyncResult) bool {
 	if x.xWriteMimeTypeFinish == 0 {
 		return nil
 	}
@@ -203,8 +203,8 @@ 		return rawCallback(ProviderVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGetValue sets the callback function.
-func (x *ContentProviderClass) SetCallbackGetValue(cb func(*ContentProvider, *gobject.Value) bool) {
+// OverrideGetValue sets the callback function.
+func (x *ContentProviderClass) OverrideGetValue(cb func(*ContentProvider, *gobject.Value) bool) {
 	if cb == nil {
 		x.xGetValue = 0
 	} else {
@@ -214,8 +214,8 @@ 		})
 	}
 }
 
-// GetCallbackGetValue gets the callback function.
-func (x *ContentProviderClass) GetCallbackGetValue() func(*ContentProvider, *gobject.Value) bool {
+// GetGetValue gets the callback function.
+func (x *ContentProviderClass) GetGetValue() func(*ContentProvider, *gobject.Value) bool {
 	if x.xGetValue == 0 {
 		return nil
 	}
diff --git a/v4/gdk/gdkpaintable.go b/v4/gdk/gdkpaintable.go
index bc83674240f586b3b1f988a8c4eb7e70d36749b3..fbf1ecafc5acde4c8fa5f282bec245b0cc5f6257 100644
--- a/v4/gdk/gdkpaintable.go
+++ b/v4/gdk/gdkpaintable.go
@@ -41,8 +41,8 @@ func (x *PaintableInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackSnapshot sets the callback function.
-func (x *PaintableInterface) SetCallbackSnapshot(cb func(Paintable, *Snapshot, float64, float64)) {
+// OverrideSnapshot sets the callback function.
+func (x *PaintableInterface) OverrideSnapshot(cb func(Paintable, *Snapshot, float64, float64)) {
 	if cb == nil {
 		x.xSnapshot = 0
 	} else {
@@ -52,8 +52,8 @@ 		})
 	}
 }
 
-// GetCallbackSnapshot gets the callback function.
-func (x *PaintableInterface) GetCallbackSnapshot() func(Paintable, *Snapshot, float64, float64) {
+// GetSnapshot gets the callback function.
+func (x *PaintableInterface) GetSnapshot() func(Paintable, *Snapshot, float64, float64) {
 	if x.xSnapshot == 0 {
 		return nil
 	}
@@ -64,8 +64,8 @@ 		rawCallback(PaintableVar.GoPointer(), SnapshotVar.GoPointer(), WidthVar, HeightVar)
 	}
 }
 
-// SetCallbackGetCurrentImage sets the callback function.
-func (x *PaintableInterface) SetCallbackGetCurrentImage(cb func(Paintable) *PaintableBase) {
+// OverrideGetCurrentImage sets the callback function.
+func (x *PaintableInterface) OverrideGetCurrentImage(cb func(Paintable) *PaintableBase) {
 	if cb == nil {
 		x.xGetCurrentImage = 0
 	} else {
@@ -79,8 +79,8 @@ 		})
 	}
 }
 
-// GetCallbackGetCurrentImage gets the callback function.
-func (x *PaintableInterface) GetCallbackGetCurrentImage() func(Paintable) *PaintableBase {
+// GetGetCurrentImage gets the callback function.
+func (x *PaintableInterface) GetGetCurrentImage() func(Paintable) *PaintableBase {
 	if x.xGetCurrentImage == 0 {
 		return nil
 	}
@@ -97,8 +97,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetFlags sets the callback function.
-func (x *PaintableInterface) SetCallbackGetFlags(cb func(Paintable) PaintableFlags) {
+// OverrideGetFlags sets the callback function.
+func (x *PaintableInterface) OverrideGetFlags(cb func(Paintable) PaintableFlags) {
 	if cb == nil {
 		x.xGetFlags = 0
 	} else {
@@ -108,8 +108,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFlags gets the callback function.
-func (x *PaintableInterface) GetCallbackGetFlags() func(Paintable) PaintableFlags {
+// GetGetFlags gets the callback function.
+func (x *PaintableInterface) GetGetFlags() func(Paintable) PaintableFlags {
 	if x.xGetFlags == 0 {
 		return nil
 	}
@@ -120,8 +120,8 @@ 		return rawCallback(PaintableVar.GoPointer())
 	}
 }
 
-// SetCallbackGetIntrinsicWidth sets the callback function.
-func (x *PaintableInterface) SetCallbackGetIntrinsicWidth(cb func(Paintable) int) {
+// OverrideGetIntrinsicWidth sets the callback function.
+func (x *PaintableInterface) OverrideGetIntrinsicWidth(cb func(Paintable) int) {
 	if cb == nil {
 		x.xGetIntrinsicWidth = 0
 	} else {
@@ -131,8 +131,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIntrinsicWidth gets the callback function.
-func (x *PaintableInterface) GetCallbackGetIntrinsicWidth() func(Paintable) int {
+// GetGetIntrinsicWidth gets the callback function.
+func (x *PaintableInterface) GetGetIntrinsicWidth() func(Paintable) int {
 	if x.xGetIntrinsicWidth == 0 {
 		return nil
 	}
@@ -143,8 +143,8 @@ 		return rawCallback(PaintableVar.GoPointer())
 	}
 }
 
-// SetCallbackGetIntrinsicHeight sets the callback function.
-func (x *PaintableInterface) SetCallbackGetIntrinsicHeight(cb func(Paintable) int) {
+// OverrideGetIntrinsicHeight sets the callback function.
+func (x *PaintableInterface) OverrideGetIntrinsicHeight(cb func(Paintable) int) {
 	if cb == nil {
 		x.xGetIntrinsicHeight = 0
 	} else {
@@ -154,8 +154,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIntrinsicHeight gets the callback function.
-func (x *PaintableInterface) GetCallbackGetIntrinsicHeight() func(Paintable) int {
+// GetGetIntrinsicHeight gets the callback function.
+func (x *PaintableInterface) GetGetIntrinsicHeight() func(Paintable) int {
 	if x.xGetIntrinsicHeight == 0 {
 		return nil
 	}
@@ -166,8 +166,8 @@ 		return rawCallback(PaintableVar.GoPointer())
 	}
 }
 
-// SetCallbackGetIntrinsicAspectRatio sets the callback function.
-func (x *PaintableInterface) SetCallbackGetIntrinsicAspectRatio(cb func(Paintable) float64) {
+// OverrideGetIntrinsicAspectRatio sets the callback function.
+func (x *PaintableInterface) OverrideGetIntrinsicAspectRatio(cb func(Paintable) float64) {
 	if cb == nil {
 		x.xGetIntrinsicAspectRatio = 0
 	} else {
@@ -177,8 +177,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIntrinsicAspectRatio gets the callback function.
-func (x *PaintableInterface) GetCallbackGetIntrinsicAspectRatio() func(Paintable) float64 {
+// GetGetIntrinsicAspectRatio gets the callback function.
+func (x *PaintableInterface) GetGetIntrinsicAspectRatio() func(Paintable) float64 {
 	if x.xGetIntrinsicAspectRatio == 0 {
 		return nil
 	}
diff --git a/v4/gdkpixbuf/gdk-pixbuf-animation.go b/v4/gdkpixbuf/gdk-pixbuf-animation.go
index e17acda2d5ede7e5c2ea7cbea1102847721e9151..a6230b839879f0183ac17f367da6aee8838f6f14 100644
--- a/v4/gdkpixbuf/gdk-pixbuf-animation.go
+++ b/v4/gdkpixbuf/gdk-pixbuf-animation.go
@@ -34,8 +34,8 @@ func (x *PixbufAnimationClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackIsStaticImage sets the callback function.
-func (x *PixbufAnimationClass) SetCallbackIsStaticImage(cb func(*PixbufAnimation) bool) {
+// OverrideIsStaticImage sets the callback function.
+func (x *PixbufAnimationClass) OverrideIsStaticImage(cb func(*PixbufAnimation) bool) {
 	if cb == nil {
 		x.xIsStaticImage = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackIsStaticImage gets the callback function.
-func (x *PixbufAnimationClass) GetCallbackIsStaticImage() func(*PixbufAnimation) bool {
+// GetIsStaticImage gets the callback function.
+func (x *PixbufAnimationClass) GetIsStaticImage() func(*PixbufAnimation) bool {
 	if x.xIsStaticImage == 0 {
 		return nil
 	}
@@ -57,8 +57,8 @@ 		return rawCallback(AnimationVar.GoPointer())
 	}
 }
 
-// SetCallbackGetStaticImage sets the callback function.
-func (x *PixbufAnimationClass) SetCallbackGetStaticImage(cb func(*PixbufAnimation) *Pixbuf) {
+// OverrideGetStaticImage sets the callback function.
+func (x *PixbufAnimationClass) OverrideGetStaticImage(cb func(*PixbufAnimation) *Pixbuf) {
 	if cb == nil {
 		x.xGetStaticImage = 0
 	} else {
@@ -72,8 +72,8 @@ 		})
 	}
 }
 
-// GetCallbackGetStaticImage gets the callback function.
-func (x *PixbufAnimationClass) GetCallbackGetStaticImage() func(*PixbufAnimation) *Pixbuf {
+// GetGetStaticImage gets the callback function.
+func (x *PixbufAnimationClass) GetGetStaticImage() func(*PixbufAnimation) *Pixbuf {
 	if x.xGetStaticImage == 0 {
 		return nil
 	}
@@ -90,8 +90,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetSize sets the callback function.
-func (x *PixbufAnimationClass) SetCallbackGetSize(cb func(*PixbufAnimation, int, int)) {
+// OverrideGetSize sets the callback function.
+func (x *PixbufAnimationClass) OverrideGetSize(cb func(*PixbufAnimation, int, int)) {
 	if cb == nil {
 		x.xGetSize = 0
 	} else {
@@ -101,8 +101,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSize gets the callback function.
-func (x *PixbufAnimationClass) GetCallbackGetSize() func(*PixbufAnimation, int, int) {
+// GetGetSize gets the callback function.
+func (x *PixbufAnimationClass) GetGetSize() func(*PixbufAnimation, int, int) {
 	if x.xGetSize == 0 {
 		return nil
 	}
@@ -113,8 +113,8 @@ 		rawCallback(AnimationVar.GoPointer(), WidthVar, HeightVar)
 	}
 }
 
-// SetCallbackGetIter sets the callback function.
-func (x *PixbufAnimationClass) SetCallbackGetIter(cb func(*PixbufAnimation, *glib.TimeVal) *PixbufAnimationIter) {
+// OverrideGetIter sets the callback function.
+func (x *PixbufAnimationClass) OverrideGetIter(cb func(*PixbufAnimation, *glib.TimeVal) *PixbufAnimationIter) {
 	if cb == nil {
 		x.xGetIter = 0
 	} else {
@@ -128,8 +128,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIter gets the callback function.
-func (x *PixbufAnimationClass) GetCallbackGetIter() func(*PixbufAnimation, *glib.TimeVal) *PixbufAnimationIter {
+// GetGetIter gets the callback function.
+func (x *PixbufAnimationClass) GetGetIter() func(*PixbufAnimation, *glib.TimeVal) *PixbufAnimationIter {
 	if x.xGetIter == 0 {
 		return nil
 	}
@@ -167,8 +167,8 @@ func (x *PixbufAnimationIterClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetDelayTime sets the callback function.
-func (x *PixbufAnimationIterClass) SetCallbackGetDelayTime(cb func(*PixbufAnimationIter) int) {
+// OverrideGetDelayTime sets the callback function.
+func (x *PixbufAnimationIterClass) OverrideGetDelayTime(cb func(*PixbufAnimationIter) int) {
 	if cb == nil {
 		x.xGetDelayTime = 0
 	} else {
@@ -178,8 +178,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDelayTime gets the callback function.
-func (x *PixbufAnimationIterClass) GetCallbackGetDelayTime() func(*PixbufAnimationIter) int {
+// GetGetDelayTime gets the callback function.
+func (x *PixbufAnimationIterClass) GetGetDelayTime() func(*PixbufAnimationIter) int {
 	if x.xGetDelayTime == 0 {
 		return nil
 	}
@@ -190,8 +190,8 @@ 		return rawCallback(IterVar.GoPointer())
 	}
 }
 
-// SetCallbackGetPixbuf sets the callback function.
-func (x *PixbufAnimationIterClass) SetCallbackGetPixbuf(cb func(*PixbufAnimationIter) *Pixbuf) {
+// OverrideGetPixbuf sets the callback function.
+func (x *PixbufAnimationIterClass) OverrideGetPixbuf(cb func(*PixbufAnimationIter) *Pixbuf) {
 	if cb == nil {
 		x.xGetPixbuf = 0
 	} else {
@@ -205,8 +205,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPixbuf gets the callback function.
-func (x *PixbufAnimationIterClass) GetCallbackGetPixbuf() func(*PixbufAnimationIter) *Pixbuf {
+// GetGetPixbuf gets the callback function.
+func (x *PixbufAnimationIterClass) GetGetPixbuf() func(*PixbufAnimationIter) *Pixbuf {
 	if x.xGetPixbuf == 0 {
 		return nil
 	}
@@ -223,8 +223,8 @@ 		return ret
 	}
 }
 
-// SetCallbackOnCurrentlyLoadingFrame sets the callback function.
-func (x *PixbufAnimationIterClass) SetCallbackOnCurrentlyLoadingFrame(cb func(*PixbufAnimationIter) bool) {
+// OverrideOnCurrentlyLoadingFrame sets the callback function.
+func (x *PixbufAnimationIterClass) OverrideOnCurrentlyLoadingFrame(cb func(*PixbufAnimationIter) bool) {
 	if cb == nil {
 		x.xOnCurrentlyLoadingFrame = 0
 	} else {
@@ -234,8 +234,8 @@ 		})
 	}
 }
 
-// GetCallbackOnCurrentlyLoadingFrame gets the callback function.
-func (x *PixbufAnimationIterClass) GetCallbackOnCurrentlyLoadingFrame() func(*PixbufAnimationIter) bool {
+// GetOnCurrentlyLoadingFrame gets the callback function.
+func (x *PixbufAnimationIterClass) GetOnCurrentlyLoadingFrame() func(*PixbufAnimationIter) bool {
 	if x.xOnCurrentlyLoadingFrame == 0 {
 		return nil
 	}
@@ -246,8 +246,8 @@ 		return rawCallback(IterVar.GoPointer())
 	}
 }
 
-// SetCallbackAdvance sets the callback function.
-func (x *PixbufAnimationIterClass) SetCallbackAdvance(cb func(*PixbufAnimationIter, *glib.TimeVal) bool) {
+// OverrideAdvance sets the callback function.
+func (x *PixbufAnimationIterClass) OverrideAdvance(cb func(*PixbufAnimationIter, *glib.TimeVal) bool) {
 	if cb == nil {
 		x.xAdvance = 0
 	} else {
@@ -257,8 +257,8 @@ 		})
 	}
 }
 
-// GetCallbackAdvance gets the callback function.
-func (x *PixbufAnimationIterClass) GetCallbackAdvance() func(*PixbufAnimationIter, *glib.TimeVal) bool {
+// GetAdvance gets the callback function.
+func (x *PixbufAnimationIterClass) GetAdvance() func(*PixbufAnimationIter, *glib.TimeVal) bool {
 	if x.xAdvance == 0 {
 		return nil
 	}
diff --git a/v4/gdkpixbuf/gdk-pixbuf-io.go b/v4/gdkpixbuf/gdk-pixbuf-io.go
index 912fe528ddd8afd355c2dad3427670d9852057c9..cdf811f75897f5a41dfe0033f90c672842b07b0b 100644
--- a/v4/gdkpixbuf/gdk-pixbuf-io.go
+++ b/v4/gdkpixbuf/gdk-pixbuf-io.go
@@ -352,8 +352,8 @@ func (x *PixbufModule) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackReserved1 sets the callback function.
-func (x *PixbufModule) SetCallbackReserved1(cb func()) {
+// OverrideReserved1 sets the callback function.
+func (x *PixbufModule) OverrideReserved1(cb func()) {
 	if cb == nil {
 		x.xReserved1 = 0
 	} else {
@@ -363,8 +363,8 @@ 		})
 	}
 }
 
-// GetCallbackReserved1 gets the callback function.
-func (x *PixbufModule) GetCallbackReserved1() func() {
+// GetReserved1 gets the callback function.
+func (x *PixbufModule) GetReserved1() func() {
 	if x.xReserved1 == 0 {
 		return nil
 	}
@@ -375,8 +375,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackReserved2 sets the callback function.
-func (x *PixbufModule) SetCallbackReserved2(cb func()) {
+// OverrideReserved2 sets the callback function.
+func (x *PixbufModule) OverrideReserved2(cb func()) {
 	if cb == nil {
 		x.xReserved2 = 0
 	} else {
@@ -386,8 +386,8 @@ 		})
 	}
 }
 
-// GetCallbackReserved2 gets the callback function.
-func (x *PixbufModule) GetCallbackReserved2() func() {
+// GetReserved2 gets the callback function.
+func (x *PixbufModule) GetReserved2() func() {
 	if x.xReserved2 == 0 {
 		return nil
 	}
@@ -398,8 +398,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackReserved3 sets the callback function.
-func (x *PixbufModule) SetCallbackReserved3(cb func()) {
+// OverrideReserved3 sets the callback function.
+func (x *PixbufModule) OverrideReserved3(cb func()) {
 	if cb == nil {
 		x.xReserved3 = 0
 	} else {
@@ -409,8 +409,8 @@ 		})
 	}
 }
 
-// GetCallbackReserved3 gets the callback function.
-func (x *PixbufModule) GetCallbackReserved3() func() {
+// GetReserved3 gets the callback function.
+func (x *PixbufModule) GetReserved3() func() {
 	if x.xReserved3 == 0 {
 		return nil
 	}
@@ -421,8 +421,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackReserved4 sets the callback function.
-func (x *PixbufModule) SetCallbackReserved4(cb func()) {
+// OverrideReserved4 sets the callback function.
+func (x *PixbufModule) OverrideReserved4(cb func()) {
 	if cb == nil {
 		x.xReserved4 = 0
 	} else {
@@ -432,8 +432,8 @@ 		})
 	}
 }
 
-// GetCallbackReserved4 gets the callback function.
-func (x *PixbufModule) GetCallbackReserved4() func() {
+// GetReserved4 gets the callback function.
+func (x *PixbufModule) GetReserved4() func() {
 	if x.xReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gdkpixbuf/gdk-pixbuf-loader.go b/v4/gdkpixbuf/gdk-pixbuf-loader.go
index 9e4069bfa02e9cee09c29a490e77332ca1cf4e8c..d1a50ad2e4555a43dd5030d15de0d71a54a8adc8 100644
--- a/v4/gdkpixbuf/gdk-pixbuf-loader.go
+++ b/v4/gdkpixbuf/gdk-pixbuf-loader.go
@@ -30,8 +30,8 @@ func (x *PixbufLoaderClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackSizePrepared sets the callback function.
-func (x *PixbufLoaderClass) SetCallbackSizePrepared(cb func(*PixbufLoader, int, int)) {
+// OverrideSizePrepared sets the callback function.
+func (x *PixbufLoaderClass) OverrideSizePrepared(cb func(*PixbufLoader, int, int)) {
 	if cb == nil {
 		x.xSizePrepared = 0
 	} else {
@@ -41,8 +41,8 @@ 		})
 	}
 }
 
-// GetCallbackSizePrepared gets the callback function.
-func (x *PixbufLoaderClass) GetCallbackSizePrepared() func(*PixbufLoader, int, int) {
+// GetSizePrepared gets the callback function.
+func (x *PixbufLoaderClass) GetSizePrepared() func(*PixbufLoader, int, int) {
 	if x.xSizePrepared == 0 {
 		return nil
 	}
@@ -53,8 +53,8 @@ 		rawCallback(LoaderVar.GoPointer(), WidthVar, HeightVar)
 	}
 }
 
-// SetCallbackAreaPrepared sets the callback function.
-func (x *PixbufLoaderClass) SetCallbackAreaPrepared(cb func(*PixbufLoader)) {
+// OverrideAreaPrepared sets the callback function.
+func (x *PixbufLoaderClass) OverrideAreaPrepared(cb func(*PixbufLoader)) {
 	if cb == nil {
 		x.xAreaPrepared = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackAreaPrepared gets the callback function.
-func (x *PixbufLoaderClass) GetCallbackAreaPrepared() func(*PixbufLoader) {
+// GetAreaPrepared gets the callback function.
+func (x *PixbufLoaderClass) GetAreaPrepared() func(*PixbufLoader) {
 	if x.xAreaPrepared == 0 {
 		return nil
 	}
@@ -76,8 +76,8 @@ 		rawCallback(LoaderVar.GoPointer())
 	}
 }
 
-// SetCallbackAreaUpdated sets the callback function.
-func (x *PixbufLoaderClass) SetCallbackAreaUpdated(cb func(*PixbufLoader, int, int, int, int)) {
+// OverrideAreaUpdated sets the callback function.
+func (x *PixbufLoaderClass) OverrideAreaUpdated(cb func(*PixbufLoader, int, int, int, int)) {
 	if cb == nil {
 		x.xAreaUpdated = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackAreaUpdated gets the callback function.
-func (x *PixbufLoaderClass) GetCallbackAreaUpdated() func(*PixbufLoader, int, int, int, int) {
+// GetAreaUpdated gets the callback function.
+func (x *PixbufLoaderClass) GetAreaUpdated() func(*PixbufLoader, int, int, int, int) {
 	if x.xAreaUpdated == 0 {
 		return nil
 	}
@@ -99,8 +99,8 @@ 		rawCallback(LoaderVar.GoPointer(), XVar, YVar, WidthVar, HeightVar)
 	}
 }
 
-// SetCallbackClosed sets the callback function.
-func (x *PixbufLoaderClass) SetCallbackClosed(cb func(*PixbufLoader)) {
+// OverrideClosed sets the callback function.
+func (x *PixbufLoaderClass) OverrideClosed(cb func(*PixbufLoader)) {
 	if cb == nil {
 		x.xClosed = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackClosed gets the callback function.
-func (x *PixbufLoaderClass) GetCallbackClosed() func(*PixbufLoader) {
+// GetClosed gets the callback function.
+func (x *PixbufLoaderClass) GetClosed() func(*PixbufLoader) {
 	if x.xClosed == 0 {
 		return nil
 	}
diff --git a/v4/gio/gaction.go b/v4/gio/gaction.go
index 717398303f3724d4400ce9b1c83750ec9ccf5c31..69f0e430324ed648592ffd49c53911ecab975cf2 100644
--- a/v4/gio/gaction.go
+++ b/v4/gio/gaction.go
@@ -38,8 +38,8 @@ func (x *ActionInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetName sets the callback function.
-func (x *ActionInterface) SetCallbackGetName(cb func(Action) string) {
+// OverrideGetName sets the callback function.
+func (x *ActionInterface) OverrideGetName(cb func(Action) string) {
 	if cb == nil {
 		x.xGetName = 0
 	} else {
@@ -49,8 +49,8 @@ 		})
 	}
 }
 
-// GetCallbackGetName gets the callback function.
-func (x *ActionInterface) GetCallbackGetName() func(Action) string {
+// GetGetName gets the callback function.
+func (x *ActionInterface) GetGetName() func(Action) string {
 	if x.xGetName == 0 {
 		return nil
 	}
@@ -61,8 +61,8 @@ 		return rawCallback(ActionVar.GoPointer())
 	}
 }
 
-// SetCallbackGetParameterType sets the callback function.
-func (x *ActionInterface) SetCallbackGetParameterType(cb func(Action) *glib.VariantType) {
+// OverrideGetParameterType sets the callback function.
+func (x *ActionInterface) OverrideGetParameterType(cb func(Action) *glib.VariantType) {
 	if cb == nil {
 		x.xGetParameterType = 0
 	} else {
@@ -72,8 +72,8 @@ 		})
 	}
 }
 
-// GetCallbackGetParameterType gets the callback function.
-func (x *ActionInterface) GetCallbackGetParameterType() func(Action) *glib.VariantType {
+// GetGetParameterType gets the callback function.
+func (x *ActionInterface) GetGetParameterType() func(Action) *glib.VariantType {
 	if x.xGetParameterType == 0 {
 		return nil
 	}
@@ -84,8 +84,8 @@ 		return rawCallback(ActionVar.GoPointer())
 	}
 }
 
-// SetCallbackGetStateType sets the callback function.
-func (x *ActionInterface) SetCallbackGetStateType(cb func(Action) *glib.VariantType) {
+// OverrideGetStateType sets the callback function.
+func (x *ActionInterface) OverrideGetStateType(cb func(Action) *glib.VariantType) {
 	if cb == nil {
 		x.xGetStateType = 0
 	} else {
@@ -95,8 +95,8 @@ 		})
 	}
 }
 
-// GetCallbackGetStateType gets the callback function.
-func (x *ActionInterface) GetCallbackGetStateType() func(Action) *glib.VariantType {
+// GetGetStateType gets the callback function.
+func (x *ActionInterface) GetGetStateType() func(Action) *glib.VariantType {
 	if x.xGetStateType == 0 {
 		return nil
 	}
@@ -107,8 +107,8 @@ 		return rawCallback(ActionVar.GoPointer())
 	}
 }
 
-// SetCallbackGetStateHint sets the callback function.
-func (x *ActionInterface) SetCallbackGetStateHint(cb func(Action) *glib.Variant) {
+// OverrideGetStateHint sets the callback function.
+func (x *ActionInterface) OverrideGetStateHint(cb func(Action) *glib.Variant) {
 	if cb == nil {
 		x.xGetStateHint = 0
 	} else {
@@ -118,8 +118,8 @@ 		})
 	}
 }
 
-// GetCallbackGetStateHint gets the callback function.
-func (x *ActionInterface) GetCallbackGetStateHint() func(Action) *glib.Variant {
+// GetGetStateHint gets the callback function.
+func (x *ActionInterface) GetGetStateHint() func(Action) *glib.Variant {
 	if x.xGetStateHint == 0 {
 		return nil
 	}
@@ -130,8 +130,8 @@ 		return rawCallback(ActionVar.GoPointer())
 	}
 }
 
-// SetCallbackGetEnabled sets the callback function.
-func (x *ActionInterface) SetCallbackGetEnabled(cb func(Action) bool) {
+// OverrideGetEnabled sets the callback function.
+func (x *ActionInterface) OverrideGetEnabled(cb func(Action) bool) {
 	if cb == nil {
 		x.xGetEnabled = 0
 	} else {
@@ -141,8 +141,8 @@ 		})
 	}
 }
 
-// GetCallbackGetEnabled gets the callback function.
-func (x *ActionInterface) GetCallbackGetEnabled() func(Action) bool {
+// GetGetEnabled gets the callback function.
+func (x *ActionInterface) GetGetEnabled() func(Action) bool {
 	if x.xGetEnabled == 0 {
 		return nil
 	}
@@ -153,8 +153,8 @@ 		return rawCallback(ActionVar.GoPointer())
 	}
 }
 
-// SetCallbackGetState sets the callback function.
-func (x *ActionInterface) SetCallbackGetState(cb func(Action) *glib.Variant) {
+// OverrideGetState sets the callback function.
+func (x *ActionInterface) OverrideGetState(cb func(Action) *glib.Variant) {
 	if cb == nil {
 		x.xGetState = 0
 	} else {
@@ -164,8 +164,8 @@ 		})
 	}
 }
 
-// GetCallbackGetState gets the callback function.
-func (x *ActionInterface) GetCallbackGetState() func(Action) *glib.Variant {
+// GetGetState gets the callback function.
+func (x *ActionInterface) GetGetState() func(Action) *glib.Variant {
 	if x.xGetState == 0 {
 		return nil
 	}
@@ -176,8 +176,8 @@ 		return rawCallback(ActionVar.GoPointer())
 	}
 }
 
-// SetCallbackChangeState sets the callback function.
-func (x *ActionInterface) SetCallbackChangeState(cb func(Action, *glib.Variant)) {
+// OverrideChangeState sets the callback function.
+func (x *ActionInterface) OverrideChangeState(cb func(Action, *glib.Variant)) {
 	if cb == nil {
 		x.xChangeState = 0
 	} else {
@@ -187,8 +187,8 @@ 		})
 	}
 }
 
-// GetCallbackChangeState gets the callback function.
-func (x *ActionInterface) GetCallbackChangeState() func(Action, *glib.Variant) {
+// GetChangeState gets the callback function.
+func (x *ActionInterface) GetChangeState() func(Action, *glib.Variant) {
 	if x.xChangeState == 0 {
 		return nil
 	}
@@ -199,8 +199,8 @@ 		rawCallback(ActionVar.GoPointer(), ValueVar)
 	}
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *ActionInterface) SetCallbackActivate(cb func(Action, *glib.Variant)) {
+// OverrideActivate sets the callback function.
+func (x *ActionInterface) OverrideActivate(cb func(Action, *glib.Variant)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -210,8 +210,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *ActionInterface) GetCallbackActivate() func(Action, *glib.Variant) {
+// GetActivate gets the callback function.
+func (x *ActionInterface) GetActivate() func(Action, *glib.Variant) {
 	if x.xActivate == 0 {
 		return nil
 	}
diff --git a/v4/gio/gactiongroup.go b/v4/gio/gactiongroup.go
index 243399ae1c44181a98c0bdae905956c8a16ee36e..f24b67118fc52ef57f95fa00e466546be6709994 100644
--- a/v4/gio/gactiongroup.go
+++ b/v4/gio/gactiongroup.go
@@ -50,8 +50,8 @@ func (x *ActionGroupInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackHasAction sets the callback function.
-func (x *ActionGroupInterface) SetCallbackHasAction(cb func(ActionGroup, string) bool) {
+// OverrideHasAction sets the callback function.
+func (x *ActionGroupInterface) OverrideHasAction(cb func(ActionGroup, string) bool) {
 	if cb == nil {
 		x.xHasAction = 0
 	} else {
@@ -61,8 +61,8 @@ 		})
 	}
 }
 
-// GetCallbackHasAction gets the callback function.
-func (x *ActionGroupInterface) GetCallbackHasAction() func(ActionGroup, string) bool {
+// GetHasAction gets the callback function.
+func (x *ActionGroupInterface) GetHasAction() func(ActionGroup, string) bool {
 	if x.xHasAction == 0 {
 		return nil
 	}
@@ -73,8 +73,8 @@ 		return rawCallback(ActionGroupVar.GoPointer(), ActionNameVar)
 	}
 }
 
-// SetCallbackListActions sets the callback function.
-func (x *ActionGroupInterface) SetCallbackListActions(cb func(ActionGroup) []string) {
+// OverrideListActions sets the callback function.
+func (x *ActionGroupInterface) OverrideListActions(cb func(ActionGroup) []string) {
 	if cb == nil {
 		x.xListActions = 0
 	} else {
@@ -84,8 +84,8 @@ 		})
 	}
 }
 
-// GetCallbackListActions gets the callback function.
-func (x *ActionGroupInterface) GetCallbackListActions() func(ActionGroup) []string {
+// GetListActions gets the callback function.
+func (x *ActionGroupInterface) GetListActions() func(ActionGroup) []string {
 	if x.xListActions == 0 {
 		return nil
 	}
@@ -96,8 +96,8 @@ 		return rawCallback(ActionGroupVar.GoPointer())
 	}
 }
 
-// SetCallbackGetActionEnabled sets the callback function.
-func (x *ActionGroupInterface) SetCallbackGetActionEnabled(cb func(ActionGroup, string) bool) {
+// OverrideGetActionEnabled sets the callback function.
+func (x *ActionGroupInterface) OverrideGetActionEnabled(cb func(ActionGroup, string) bool) {
 	if cb == nil {
 		x.xGetActionEnabled = 0
 	} else {
@@ -107,8 +107,8 @@ 		})
 	}
 }
 
-// GetCallbackGetActionEnabled gets the callback function.
-func (x *ActionGroupInterface) GetCallbackGetActionEnabled() func(ActionGroup, string) bool {
+// GetGetActionEnabled gets the callback function.
+func (x *ActionGroupInterface) GetGetActionEnabled() func(ActionGroup, string) bool {
 	if x.xGetActionEnabled == 0 {
 		return nil
 	}
@@ -119,8 +119,8 @@ 		return rawCallback(ActionGroupVar.GoPointer(), ActionNameVar)
 	}
 }
 
-// SetCallbackGetActionParameterType sets the callback function.
-func (x *ActionGroupInterface) SetCallbackGetActionParameterType(cb func(ActionGroup, string) *glib.VariantType) {
+// OverrideGetActionParameterType sets the callback function.
+func (x *ActionGroupInterface) OverrideGetActionParameterType(cb func(ActionGroup, string) *glib.VariantType) {
 	if cb == nil {
 		x.xGetActionParameterType = 0
 	} else {
@@ -130,8 +130,8 @@ 		})
 	}
 }
 
-// GetCallbackGetActionParameterType gets the callback function.
-func (x *ActionGroupInterface) GetCallbackGetActionParameterType() func(ActionGroup, string) *glib.VariantType {
+// GetGetActionParameterType gets the callback function.
+func (x *ActionGroupInterface) GetGetActionParameterType() func(ActionGroup, string) *glib.VariantType {
 	if x.xGetActionParameterType == 0 {
 		return nil
 	}
@@ -142,8 +142,8 @@ 		return rawCallback(ActionGroupVar.GoPointer(), ActionNameVar)
 	}
 }
 
-// SetCallbackGetActionStateType sets the callback function.
-func (x *ActionGroupInterface) SetCallbackGetActionStateType(cb func(ActionGroup, string) *glib.VariantType) {
+// OverrideGetActionStateType sets the callback function.
+func (x *ActionGroupInterface) OverrideGetActionStateType(cb func(ActionGroup, string) *glib.VariantType) {
 	if cb == nil {
 		x.xGetActionStateType = 0
 	} else {
@@ -153,8 +153,8 @@ 		})
 	}
 }
 
-// GetCallbackGetActionStateType gets the callback function.
-func (x *ActionGroupInterface) GetCallbackGetActionStateType() func(ActionGroup, string) *glib.VariantType {
+// GetGetActionStateType gets the callback function.
+func (x *ActionGroupInterface) GetGetActionStateType() func(ActionGroup, string) *glib.VariantType {
 	if x.xGetActionStateType == 0 {
 		return nil
 	}
@@ -165,8 +165,8 @@ 		return rawCallback(ActionGroupVar.GoPointer(), ActionNameVar)
 	}
 }
 
-// SetCallbackGetActionStateHint sets the callback function.
-func (x *ActionGroupInterface) SetCallbackGetActionStateHint(cb func(ActionGroup, string) *glib.Variant) {
+// OverrideGetActionStateHint sets the callback function.
+func (x *ActionGroupInterface) OverrideGetActionStateHint(cb func(ActionGroup, string) *glib.Variant) {
 	if cb == nil {
 		x.xGetActionStateHint = 0
 	} else {
@@ -176,8 +176,8 @@ 		})
 	}
 }
 
-// GetCallbackGetActionStateHint gets the callback function.
-func (x *ActionGroupInterface) GetCallbackGetActionStateHint() func(ActionGroup, string) *glib.Variant {
+// GetGetActionStateHint gets the callback function.
+func (x *ActionGroupInterface) GetGetActionStateHint() func(ActionGroup, string) *glib.Variant {
 	if x.xGetActionStateHint == 0 {
 		return nil
 	}
@@ -188,8 +188,8 @@ 		return rawCallback(ActionGroupVar.GoPointer(), ActionNameVar)
 	}
 }
 
-// SetCallbackGetActionState sets the callback function.
-func (x *ActionGroupInterface) SetCallbackGetActionState(cb func(ActionGroup, string) *glib.Variant) {
+// OverrideGetActionState sets the callback function.
+func (x *ActionGroupInterface) OverrideGetActionState(cb func(ActionGroup, string) *glib.Variant) {
 	if cb == nil {
 		x.xGetActionState = 0
 	} else {
@@ -199,8 +199,8 @@ 		})
 	}
 }
 
-// GetCallbackGetActionState gets the callback function.
-func (x *ActionGroupInterface) GetCallbackGetActionState() func(ActionGroup, string) *glib.Variant {
+// GetGetActionState gets the callback function.
+func (x *ActionGroupInterface) GetGetActionState() func(ActionGroup, string) *glib.Variant {
 	if x.xGetActionState == 0 {
 		return nil
 	}
@@ -211,8 +211,8 @@ 		return rawCallback(ActionGroupVar.GoPointer(), ActionNameVar)
 	}
 }
 
-// SetCallbackChangeActionState sets the callback function.
-func (x *ActionGroupInterface) SetCallbackChangeActionState(cb func(ActionGroup, string, *glib.Variant)) {
+// OverrideChangeActionState sets the callback function.
+func (x *ActionGroupInterface) OverrideChangeActionState(cb func(ActionGroup, string, *glib.Variant)) {
 	if cb == nil {
 		x.xChangeActionState = 0
 	} else {
@@ -222,8 +222,8 @@ 		})
 	}
 }
 
-// GetCallbackChangeActionState gets the callback function.
-func (x *ActionGroupInterface) GetCallbackChangeActionState() func(ActionGroup, string, *glib.Variant) {
+// GetChangeActionState gets the callback function.
+func (x *ActionGroupInterface) GetChangeActionState() func(ActionGroup, string, *glib.Variant) {
 	if x.xChangeActionState == 0 {
 		return nil
 	}
@@ -234,8 +234,8 @@ 		rawCallback(ActionGroupVar.GoPointer(), ActionNameVar, ValueVar)
 	}
 }
 
-// SetCallbackActivateAction sets the callback function.
-func (x *ActionGroupInterface) SetCallbackActivateAction(cb func(ActionGroup, string, *glib.Variant)) {
+// OverrideActivateAction sets the callback function.
+func (x *ActionGroupInterface) OverrideActivateAction(cb func(ActionGroup, string, *glib.Variant)) {
 	if cb == nil {
 		x.xActivateAction = 0
 	} else {
@@ -245,8 +245,8 @@ 		})
 	}
 }
 
-// GetCallbackActivateAction gets the callback function.
-func (x *ActionGroupInterface) GetCallbackActivateAction() func(ActionGroup, string, *glib.Variant) {
+// GetActivateAction gets the callback function.
+func (x *ActionGroupInterface) GetActivateAction() func(ActionGroup, string, *glib.Variant) {
 	if x.xActivateAction == 0 {
 		return nil
 	}
@@ -257,8 +257,8 @@ 		rawCallback(ActionGroupVar.GoPointer(), ActionNameVar, ParameterVar)
 	}
 }
 
-// SetCallbackActionAdded sets the callback function.
-func (x *ActionGroupInterface) SetCallbackActionAdded(cb func(ActionGroup, string)) {
+// OverrideActionAdded sets the callback function.
+func (x *ActionGroupInterface) OverrideActionAdded(cb func(ActionGroup, string)) {
 	if cb == nil {
 		x.xActionAdded = 0
 	} else {
@@ -268,8 +268,8 @@ 		})
 	}
 }
 
-// GetCallbackActionAdded gets the callback function.
-func (x *ActionGroupInterface) GetCallbackActionAdded() func(ActionGroup, string) {
+// GetActionAdded gets the callback function.
+func (x *ActionGroupInterface) GetActionAdded() func(ActionGroup, string) {
 	if x.xActionAdded == 0 {
 		return nil
 	}
@@ -280,8 +280,8 @@ 		rawCallback(ActionGroupVar.GoPointer(), ActionNameVar)
 	}
 }
 
-// SetCallbackActionRemoved sets the callback function.
-func (x *ActionGroupInterface) SetCallbackActionRemoved(cb func(ActionGroup, string)) {
+// OverrideActionRemoved sets the callback function.
+func (x *ActionGroupInterface) OverrideActionRemoved(cb func(ActionGroup, string)) {
 	if cb == nil {
 		x.xActionRemoved = 0
 	} else {
@@ -291,8 +291,8 @@ 		})
 	}
 }
 
-// GetCallbackActionRemoved gets the callback function.
-func (x *ActionGroupInterface) GetCallbackActionRemoved() func(ActionGroup, string) {
+// GetActionRemoved gets the callback function.
+func (x *ActionGroupInterface) GetActionRemoved() func(ActionGroup, string) {
 	if x.xActionRemoved == 0 {
 		return nil
 	}
@@ -303,8 +303,8 @@ 		rawCallback(ActionGroupVar.GoPointer(), ActionNameVar)
 	}
 }
 
-// SetCallbackActionEnabledChanged sets the callback function.
-func (x *ActionGroupInterface) SetCallbackActionEnabledChanged(cb func(ActionGroup, string, bool)) {
+// OverrideActionEnabledChanged sets the callback function.
+func (x *ActionGroupInterface) OverrideActionEnabledChanged(cb func(ActionGroup, string, bool)) {
 	if cb == nil {
 		x.xActionEnabledChanged = 0
 	} else {
@@ -314,8 +314,8 @@ 		})
 	}
 }
 
-// GetCallbackActionEnabledChanged gets the callback function.
-func (x *ActionGroupInterface) GetCallbackActionEnabledChanged() func(ActionGroup, string, bool) {
+// GetActionEnabledChanged gets the callback function.
+func (x *ActionGroupInterface) GetActionEnabledChanged() func(ActionGroup, string, bool) {
 	if x.xActionEnabledChanged == 0 {
 		return nil
 	}
@@ -326,8 +326,8 @@ 		rawCallback(ActionGroupVar.GoPointer(), ActionNameVar, EnabledVar)
 	}
 }
 
-// SetCallbackActionStateChanged sets the callback function.
-func (x *ActionGroupInterface) SetCallbackActionStateChanged(cb func(ActionGroup, string, *glib.Variant)) {
+// OverrideActionStateChanged sets the callback function.
+func (x *ActionGroupInterface) OverrideActionStateChanged(cb func(ActionGroup, string, *glib.Variant)) {
 	if cb == nil {
 		x.xActionStateChanged = 0
 	} else {
@@ -337,8 +337,8 @@ 		})
 	}
 }
 
-// GetCallbackActionStateChanged gets the callback function.
-func (x *ActionGroupInterface) GetCallbackActionStateChanged() func(ActionGroup, string, *glib.Variant) {
+// GetActionStateChanged gets the callback function.
+func (x *ActionGroupInterface) GetActionStateChanged() func(ActionGroup, string, *glib.Variant) {
 	if x.xActionStateChanged == 0 {
 		return nil
 	}
@@ -349,8 +349,8 @@ 		rawCallback(ActionGroupVar.GoPointer(), ActionNameVar, StateVar)
 	}
 }
 
-// SetCallbackQueryAction sets the callback function.
-func (x *ActionGroupInterface) SetCallbackQueryAction(cb func(ActionGroup, string, bool, **glib.VariantType, **glib.VariantType, **glib.Variant, **glib.Variant) bool) {
+// OverrideQueryAction sets the callback function.
+func (x *ActionGroupInterface) OverrideQueryAction(cb func(ActionGroup, string, bool, **glib.VariantType, **glib.VariantType, **glib.Variant, **glib.Variant) bool) {
 	if cb == nil {
 		x.xQueryAction = 0
 	} else {
@@ -360,8 +360,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryAction gets the callback function.
-func (x *ActionGroupInterface) GetCallbackQueryAction() func(ActionGroup, string, bool, **glib.VariantType, **glib.VariantType, **glib.Variant, **glib.Variant) bool {
+// GetQueryAction gets the callback function.
+func (x *ActionGroupInterface) GetQueryAction() func(ActionGroup, string, bool, **glib.VariantType, **glib.VariantType, **glib.Variant, **glib.Variant) bool {
 	if x.xQueryAction == 0 {
 		return nil
 	}
diff --git a/v4/gio/gactionmap.go b/v4/gio/gactionmap.go
index 3ec872aa6e0295fc09a038bef2c12e17b1033a73..ebd8bc6ab0cfcebece979159f3ea589cb8440ddb 100644
--- a/v4/gio/gactionmap.go
+++ b/v4/gio/gactionmap.go
@@ -42,8 +42,8 @@ func (x *ActionEntry) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *ActionEntry) SetCallbackActivate(cb func(*SimpleAction, *glib.Variant, uintptr)) {
+// OverrideActivate sets the callback function.
+func (x *ActionEntry) OverrideActivate(cb func(*SimpleAction, *glib.Variant, uintptr)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -53,8 +53,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *ActionEntry) GetCallbackActivate() func(*SimpleAction, *glib.Variant, uintptr) {
+// GetActivate gets the callback function.
+func (x *ActionEntry) GetActivate() func(*SimpleAction, *glib.Variant, uintptr) {
 	if x.xActivate == 0 {
 		return nil
 	}
@@ -65,8 +65,8 @@ 		rawCallback(ActionVar.GoPointer(), ParameterVar, UserDataVar)
 	}
 }
 
-// SetCallbackChangeState sets the callback function.
-func (x *ActionEntry) SetCallbackChangeState(cb func(*SimpleAction, *glib.Variant, uintptr)) {
+// OverrideChangeState sets the callback function.
+func (x *ActionEntry) OverrideChangeState(cb func(*SimpleAction, *glib.Variant, uintptr)) {
 	if cb == nil {
 		x.xChangeState = 0
 	} else {
@@ -76,8 +76,8 @@ 		})
 	}
 }
 
-// GetCallbackChangeState gets the callback function.
-func (x *ActionEntry) GetCallbackChangeState() func(*SimpleAction, *glib.Variant, uintptr) {
+// GetChangeState gets the callback function.
+func (x *ActionEntry) GetChangeState() func(*SimpleAction, *glib.Variant, uintptr) {
 	if x.xChangeState == 0 {
 		return nil
 	}
@@ -105,8 +105,8 @@ func (x *ActionMapInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackLookupAction sets the callback function.
-func (x *ActionMapInterface) SetCallbackLookupAction(cb func(ActionMap, string) *ActionBase) {
+// OverrideLookupAction sets the callback function.
+func (x *ActionMapInterface) OverrideLookupAction(cb func(ActionMap, string) *ActionBase) {
 	if cb == nil {
 		x.xLookupAction = 0
 	} else {
@@ -120,8 +120,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupAction gets the callback function.
-func (x *ActionMapInterface) GetCallbackLookupAction() func(ActionMap, string) *ActionBase {
+// GetLookupAction gets the callback function.
+func (x *ActionMapInterface) GetLookupAction() func(ActionMap, string) *ActionBase {
 	if x.xLookupAction == 0 {
 		return nil
 	}
@@ -138,8 +138,8 @@ 		return ret
 	}
 }
 
-// SetCallbackAddAction sets the callback function.
-func (x *ActionMapInterface) SetCallbackAddAction(cb func(ActionMap, Action)) {
+// OverrideAddAction sets the callback function.
+func (x *ActionMapInterface) OverrideAddAction(cb func(ActionMap, Action)) {
 	if cb == nil {
 		x.xAddAction = 0
 	} else {
@@ -149,8 +149,8 @@ 		})
 	}
 }
 
-// GetCallbackAddAction gets the callback function.
-func (x *ActionMapInterface) GetCallbackAddAction() func(ActionMap, Action) {
+// GetAddAction gets the callback function.
+func (x *ActionMapInterface) GetAddAction() func(ActionMap, Action) {
 	if x.xAddAction == 0 {
 		return nil
 	}
@@ -161,8 +161,8 @@ 		rawCallback(ActionMapVar.GoPointer(), ActionVar.GoPointer())
 	}
 }
 
-// SetCallbackRemoveAction sets the callback function.
-func (x *ActionMapInterface) SetCallbackRemoveAction(cb func(ActionMap, string)) {
+// OverrideRemoveAction sets the callback function.
+func (x *ActionMapInterface) OverrideRemoveAction(cb func(ActionMap, string)) {
 	if cb == nil {
 		x.xRemoveAction = 0
 	} else {
@@ -172,8 +172,8 @@ 		})
 	}
 }
 
-// GetCallbackRemoveAction gets the callback function.
-func (x *ActionMapInterface) GetCallbackRemoveAction() func(ActionMap, string) {
+// GetRemoveAction gets the callback function.
+func (x *ActionMapInterface) GetRemoveAction() func(ActionMap, string) {
 	if x.xRemoveAction == 0 {
 		return nil
 	}
diff --git a/v4/gio/gappinfo.go b/v4/gio/gappinfo.go
index 96824d73a59ce4111524a3b5a07966a0a80ae952..9891b2c74259769c1b185e6aeebb566d52ca28d2 100644
--- a/v4/gio/gappinfo.go
+++ b/v4/gio/gappinfo.go
@@ -73,8 +73,8 @@ func (x *AppInfoIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackDup sets the callback function.
-func (x *AppInfoIface) SetCallbackDup(cb func(AppInfo) *AppInfoBase) {
+// OverrideDup sets the callback function.
+func (x *AppInfoIface) OverrideDup(cb func(AppInfo) *AppInfoBase) {
 	if cb == nil {
 		x.xDup = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackDup gets the callback function.
-func (x *AppInfoIface) GetCallbackDup() func(AppInfo) *AppInfoBase {
+// GetDup gets the callback function.
+func (x *AppInfoIface) GetDup() func(AppInfo) *AppInfoBase {
 	if x.xDup == 0 {
 		return nil
 	}
@@ -106,8 +106,8 @@ 		return ret
 	}
 }
 
-// SetCallbackEqual sets the callback function.
-func (x *AppInfoIface) SetCallbackEqual(cb func(AppInfo, AppInfo) bool) {
+// OverrideEqual sets the callback function.
+func (x *AppInfoIface) OverrideEqual(cb func(AppInfo, AppInfo) bool) {
 	if cb == nil {
 		x.xEqual = 0
 	} else {
@@ -117,8 +117,8 @@ 		})
 	}
 }
 
-// GetCallbackEqual gets the callback function.
-func (x *AppInfoIface) GetCallbackEqual() func(AppInfo, AppInfo) bool {
+// GetEqual gets the callback function.
+func (x *AppInfoIface) GetEqual() func(AppInfo, AppInfo) bool {
 	if x.xEqual == 0 {
 		return nil
 	}
@@ -129,8 +129,8 @@ 		return rawCallback(Appinfo1Var.GoPointer(), Appinfo2Var.GoPointer())
 	}
 }
 
-// SetCallbackGetId sets the callback function.
-func (x *AppInfoIface) SetCallbackGetId(cb func(AppInfo) string) {
+// OverrideGetId sets the callback function.
+func (x *AppInfoIface) OverrideGetId(cb func(AppInfo) string) {
 	if cb == nil {
 		x.xGetId = 0
 	} else {
@@ -140,8 +140,8 @@ 		})
 	}
 }
 
-// GetCallbackGetId gets the callback function.
-func (x *AppInfoIface) GetCallbackGetId() func(AppInfo) string {
+// GetGetId gets the callback function.
+func (x *AppInfoIface) GetGetId() func(AppInfo) string {
 	if x.xGetId == 0 {
 		return nil
 	}
@@ -152,8 +152,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackGetName sets the callback function.
-func (x *AppInfoIface) SetCallbackGetName(cb func(AppInfo) string) {
+// OverrideGetName sets the callback function.
+func (x *AppInfoIface) OverrideGetName(cb func(AppInfo) string) {
 	if cb == nil {
 		x.xGetName = 0
 	} else {
@@ -163,8 +163,8 @@ 		})
 	}
 }
 
-// GetCallbackGetName gets the callback function.
-func (x *AppInfoIface) GetCallbackGetName() func(AppInfo) string {
+// GetGetName gets the callback function.
+func (x *AppInfoIface) GetGetName() func(AppInfo) string {
 	if x.xGetName == 0 {
 		return nil
 	}
@@ -175,8 +175,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackGetDescription sets the callback function.
-func (x *AppInfoIface) SetCallbackGetDescription(cb func(AppInfo) string) {
+// OverrideGetDescription sets the callback function.
+func (x *AppInfoIface) OverrideGetDescription(cb func(AppInfo) string) {
 	if cb == nil {
 		x.xGetDescription = 0
 	} else {
@@ -186,8 +186,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDescription gets the callback function.
-func (x *AppInfoIface) GetCallbackGetDescription() func(AppInfo) string {
+// GetGetDescription gets the callback function.
+func (x *AppInfoIface) GetGetDescription() func(AppInfo) string {
 	if x.xGetDescription == 0 {
 		return nil
 	}
@@ -198,8 +198,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackGetExecutable sets the callback function.
-func (x *AppInfoIface) SetCallbackGetExecutable(cb func(AppInfo) string) {
+// OverrideGetExecutable sets the callback function.
+func (x *AppInfoIface) OverrideGetExecutable(cb func(AppInfo) string) {
 	if cb == nil {
 		x.xGetExecutable = 0
 	} else {
@@ -209,8 +209,8 @@ 		})
 	}
 }
 
-// GetCallbackGetExecutable gets the callback function.
-func (x *AppInfoIface) GetCallbackGetExecutable() func(AppInfo) string {
+// GetGetExecutable gets the callback function.
+func (x *AppInfoIface) GetGetExecutable() func(AppInfo) string {
 	if x.xGetExecutable == 0 {
 		return nil
 	}
@@ -221,8 +221,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackGetIcon sets the callback function.
-func (x *AppInfoIface) SetCallbackGetIcon(cb func(AppInfo) *IconBase) {
+// OverrideGetIcon sets the callback function.
+func (x *AppInfoIface) OverrideGetIcon(cb func(AppInfo) *IconBase) {
 	if cb == nil {
 		x.xGetIcon = 0
 	} else {
@@ -236,8 +236,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIcon gets the callback function.
-func (x *AppInfoIface) GetCallbackGetIcon() func(AppInfo) *IconBase {
+// GetGetIcon gets the callback function.
+func (x *AppInfoIface) GetGetIcon() func(AppInfo) *IconBase {
 	if x.xGetIcon == 0 {
 		return nil
 	}
@@ -254,8 +254,8 @@ 		return ret
 	}
 }
 
-// SetCallbackLaunch sets the callback function.
-func (x *AppInfoIface) SetCallbackLaunch(cb func(AppInfo, *glib.List, *AppLaunchContext) bool) {
+// OverrideLaunch sets the callback function.
+func (x *AppInfoIface) OverrideLaunch(cb func(AppInfo, *glib.List, *AppLaunchContext) bool) {
 	if cb == nil {
 		x.xLaunch = 0
 	} else {
@@ -265,8 +265,8 @@ 		})
 	}
 }
 
-// GetCallbackLaunch gets the callback function.
-func (x *AppInfoIface) GetCallbackLaunch() func(AppInfo, *glib.List, *AppLaunchContext) bool {
+// GetLaunch gets the callback function.
+func (x *AppInfoIface) GetLaunch() func(AppInfo, *glib.List, *AppLaunchContext) bool {
 	if x.xLaunch == 0 {
 		return nil
 	}
@@ -277,8 +277,8 @@ 		return rawCallback(AppinfoVar.GoPointer(), FilesVar, ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackSupportsUris sets the callback function.
-func (x *AppInfoIface) SetCallbackSupportsUris(cb func(AppInfo) bool) {
+// OverrideSupportsUris sets the callback function.
+func (x *AppInfoIface) OverrideSupportsUris(cb func(AppInfo) bool) {
 	if cb == nil {
 		x.xSupportsUris = 0
 	} else {
@@ -288,8 +288,8 @@ 		})
 	}
 }
 
-// GetCallbackSupportsUris gets the callback function.
-func (x *AppInfoIface) GetCallbackSupportsUris() func(AppInfo) bool {
+// GetSupportsUris gets the callback function.
+func (x *AppInfoIface) GetSupportsUris() func(AppInfo) bool {
 	if x.xSupportsUris == 0 {
 		return nil
 	}
@@ -300,8 +300,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackSupportsFiles sets the callback function.
-func (x *AppInfoIface) SetCallbackSupportsFiles(cb func(AppInfo) bool) {
+// OverrideSupportsFiles sets the callback function.
+func (x *AppInfoIface) OverrideSupportsFiles(cb func(AppInfo) bool) {
 	if cb == nil {
 		x.xSupportsFiles = 0
 	} else {
@@ -311,8 +311,8 @@ 		})
 	}
 }
 
-// GetCallbackSupportsFiles gets the callback function.
-func (x *AppInfoIface) GetCallbackSupportsFiles() func(AppInfo) bool {
+// GetSupportsFiles gets the callback function.
+func (x *AppInfoIface) GetSupportsFiles() func(AppInfo) bool {
 	if x.xSupportsFiles == 0 {
 		return nil
 	}
@@ -323,8 +323,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackLaunchUris sets the callback function.
-func (x *AppInfoIface) SetCallbackLaunchUris(cb func(AppInfo, *glib.List, *AppLaunchContext) bool) {
+// OverrideLaunchUris sets the callback function.
+func (x *AppInfoIface) OverrideLaunchUris(cb func(AppInfo, *glib.List, *AppLaunchContext) bool) {
 	if cb == nil {
 		x.xLaunchUris = 0
 	} else {
@@ -334,8 +334,8 @@ 		})
 	}
 }
 
-// GetCallbackLaunchUris gets the callback function.
-func (x *AppInfoIface) GetCallbackLaunchUris() func(AppInfo, *glib.List, *AppLaunchContext) bool {
+// GetLaunchUris gets the callback function.
+func (x *AppInfoIface) GetLaunchUris() func(AppInfo, *glib.List, *AppLaunchContext) bool {
 	if x.xLaunchUris == 0 {
 		return nil
 	}
@@ -346,8 +346,8 @@ 		return rawCallback(AppinfoVar.GoPointer(), UrisVar, ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackShouldShow sets the callback function.
-func (x *AppInfoIface) SetCallbackShouldShow(cb func(AppInfo) bool) {
+// OverrideShouldShow sets the callback function.
+func (x *AppInfoIface) OverrideShouldShow(cb func(AppInfo) bool) {
 	if cb == nil {
 		x.xShouldShow = 0
 	} else {
@@ -357,8 +357,8 @@ 		})
 	}
 }
 
-// GetCallbackShouldShow gets the callback function.
-func (x *AppInfoIface) GetCallbackShouldShow() func(AppInfo) bool {
+// GetShouldShow gets the callback function.
+func (x *AppInfoIface) GetShouldShow() func(AppInfo) bool {
 	if x.xShouldShow == 0 {
 		return nil
 	}
@@ -369,8 +369,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackSetAsDefaultForType sets the callback function.
-func (x *AppInfoIface) SetCallbackSetAsDefaultForType(cb func(AppInfo, string) bool) {
+// OverrideSetAsDefaultForType sets the callback function.
+func (x *AppInfoIface) OverrideSetAsDefaultForType(cb func(AppInfo, string) bool) {
 	if cb == nil {
 		x.xSetAsDefaultForType = 0
 	} else {
@@ -380,8 +380,8 @@ 		})
 	}
 }
 
-// GetCallbackSetAsDefaultForType gets the callback function.
-func (x *AppInfoIface) GetCallbackSetAsDefaultForType() func(AppInfo, string) bool {
+// GetSetAsDefaultForType gets the callback function.
+func (x *AppInfoIface) GetSetAsDefaultForType() func(AppInfo, string) bool {
 	if x.xSetAsDefaultForType == 0 {
 		return nil
 	}
@@ -392,8 +392,8 @@ 		return rawCallback(AppinfoVar.GoPointer(), ContentTypeVar)
 	}
 }
 
-// SetCallbackSetAsDefaultForExtension sets the callback function.
-func (x *AppInfoIface) SetCallbackSetAsDefaultForExtension(cb func(AppInfo, string) bool) {
+// OverrideSetAsDefaultForExtension sets the callback function.
+func (x *AppInfoIface) OverrideSetAsDefaultForExtension(cb func(AppInfo, string) bool) {
 	if cb == nil {
 		x.xSetAsDefaultForExtension = 0
 	} else {
@@ -403,8 +403,8 @@ 		})
 	}
 }
 
-// GetCallbackSetAsDefaultForExtension gets the callback function.
-func (x *AppInfoIface) GetCallbackSetAsDefaultForExtension() func(AppInfo, string) bool {
+// GetSetAsDefaultForExtension gets the callback function.
+func (x *AppInfoIface) GetSetAsDefaultForExtension() func(AppInfo, string) bool {
 	if x.xSetAsDefaultForExtension == 0 {
 		return nil
 	}
@@ -415,8 +415,8 @@ 		return rawCallback(AppinfoVar.GoPointer(), ExtensionVar)
 	}
 }
 
-// SetCallbackAddSupportsType sets the callback function.
-func (x *AppInfoIface) SetCallbackAddSupportsType(cb func(AppInfo, string) bool) {
+// OverrideAddSupportsType sets the callback function.
+func (x *AppInfoIface) OverrideAddSupportsType(cb func(AppInfo, string) bool) {
 	if cb == nil {
 		x.xAddSupportsType = 0
 	} else {
@@ -426,8 +426,8 @@ 		})
 	}
 }
 
-// GetCallbackAddSupportsType gets the callback function.
-func (x *AppInfoIface) GetCallbackAddSupportsType() func(AppInfo, string) bool {
+// GetAddSupportsType gets the callback function.
+func (x *AppInfoIface) GetAddSupportsType() func(AppInfo, string) bool {
 	if x.xAddSupportsType == 0 {
 		return nil
 	}
@@ -438,8 +438,8 @@ 		return rawCallback(AppinfoVar.GoPointer(), ContentTypeVar)
 	}
 }
 
-// SetCallbackCanRemoveSupportsType sets the callback function.
-func (x *AppInfoIface) SetCallbackCanRemoveSupportsType(cb func(AppInfo) bool) {
+// OverrideCanRemoveSupportsType sets the callback function.
+func (x *AppInfoIface) OverrideCanRemoveSupportsType(cb func(AppInfo) bool) {
 	if cb == nil {
 		x.xCanRemoveSupportsType = 0
 	} else {
@@ -449,8 +449,8 @@ 		})
 	}
 }
 
-// GetCallbackCanRemoveSupportsType gets the callback function.
-func (x *AppInfoIface) GetCallbackCanRemoveSupportsType() func(AppInfo) bool {
+// GetCanRemoveSupportsType gets the callback function.
+func (x *AppInfoIface) GetCanRemoveSupportsType() func(AppInfo) bool {
 	if x.xCanRemoveSupportsType == 0 {
 		return nil
 	}
@@ -461,8 +461,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackRemoveSupportsType sets the callback function.
-func (x *AppInfoIface) SetCallbackRemoveSupportsType(cb func(AppInfo, string) bool) {
+// OverrideRemoveSupportsType sets the callback function.
+func (x *AppInfoIface) OverrideRemoveSupportsType(cb func(AppInfo, string) bool) {
 	if cb == nil {
 		x.xRemoveSupportsType = 0
 	} else {
@@ -472,8 +472,8 @@ 		})
 	}
 }
 
-// GetCallbackRemoveSupportsType gets the callback function.
-func (x *AppInfoIface) GetCallbackRemoveSupportsType() func(AppInfo, string) bool {
+// GetRemoveSupportsType gets the callback function.
+func (x *AppInfoIface) GetRemoveSupportsType() func(AppInfo, string) bool {
 	if x.xRemoveSupportsType == 0 {
 		return nil
 	}
@@ -484,8 +484,8 @@ 		return rawCallback(AppinfoVar.GoPointer(), ContentTypeVar)
 	}
 }
 
-// SetCallbackCanDelete sets the callback function.
-func (x *AppInfoIface) SetCallbackCanDelete(cb func(AppInfo) bool) {
+// OverrideCanDelete sets the callback function.
+func (x *AppInfoIface) OverrideCanDelete(cb func(AppInfo) bool) {
 	if cb == nil {
 		x.xCanDelete = 0
 	} else {
@@ -495,8 +495,8 @@ 		})
 	}
 }
 
-// GetCallbackCanDelete gets the callback function.
-func (x *AppInfoIface) GetCallbackCanDelete() func(AppInfo) bool {
+// GetCanDelete gets the callback function.
+func (x *AppInfoIface) GetCanDelete() func(AppInfo) bool {
 	if x.xCanDelete == 0 {
 		return nil
 	}
@@ -507,8 +507,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackDoDelete sets the callback function.
-func (x *AppInfoIface) SetCallbackDoDelete(cb func(AppInfo) bool) {
+// OverrideDoDelete sets the callback function.
+func (x *AppInfoIface) OverrideDoDelete(cb func(AppInfo) bool) {
 	if cb == nil {
 		x.xDoDelete = 0
 	} else {
@@ -518,8 +518,8 @@ 		})
 	}
 }
 
-// GetCallbackDoDelete gets the callback function.
-func (x *AppInfoIface) GetCallbackDoDelete() func(AppInfo) bool {
+// GetDoDelete gets the callback function.
+func (x *AppInfoIface) GetDoDelete() func(AppInfo) bool {
 	if x.xDoDelete == 0 {
 		return nil
 	}
@@ -530,8 +530,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackGetCommandline sets the callback function.
-func (x *AppInfoIface) SetCallbackGetCommandline(cb func(AppInfo) string) {
+// OverrideGetCommandline sets the callback function.
+func (x *AppInfoIface) OverrideGetCommandline(cb func(AppInfo) string) {
 	if cb == nil {
 		x.xGetCommandline = 0
 	} else {
@@ -541,8 +541,8 @@ 		})
 	}
 }
 
-// GetCallbackGetCommandline gets the callback function.
-func (x *AppInfoIface) GetCallbackGetCommandline() func(AppInfo) string {
+// GetGetCommandline gets the callback function.
+func (x *AppInfoIface) GetGetCommandline() func(AppInfo) string {
 	if x.xGetCommandline == 0 {
 		return nil
 	}
@@ -553,8 +553,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackGetDisplayName sets the callback function.
-func (x *AppInfoIface) SetCallbackGetDisplayName(cb func(AppInfo) string) {
+// OverrideGetDisplayName sets the callback function.
+func (x *AppInfoIface) OverrideGetDisplayName(cb func(AppInfo) string) {
 	if cb == nil {
 		x.xGetDisplayName = 0
 	} else {
@@ -564,8 +564,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDisplayName gets the callback function.
-func (x *AppInfoIface) GetCallbackGetDisplayName() func(AppInfo) string {
+// GetGetDisplayName gets the callback function.
+func (x *AppInfoIface) GetGetDisplayName() func(AppInfo) string {
 	if x.xGetDisplayName == 0 {
 		return nil
 	}
@@ -576,8 +576,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackSetAsLastUsedForType sets the callback function.
-func (x *AppInfoIface) SetCallbackSetAsLastUsedForType(cb func(AppInfo, string) bool) {
+// OverrideSetAsLastUsedForType sets the callback function.
+func (x *AppInfoIface) OverrideSetAsLastUsedForType(cb func(AppInfo, string) bool) {
 	if cb == nil {
 		x.xSetAsLastUsedForType = 0
 	} else {
@@ -587,8 +587,8 @@ 		})
 	}
 }
 
-// GetCallbackSetAsLastUsedForType gets the callback function.
-func (x *AppInfoIface) GetCallbackSetAsLastUsedForType() func(AppInfo, string) bool {
+// GetSetAsLastUsedForType gets the callback function.
+func (x *AppInfoIface) GetSetAsLastUsedForType() func(AppInfo, string) bool {
 	if x.xSetAsLastUsedForType == 0 {
 		return nil
 	}
@@ -599,8 +599,8 @@ 		return rawCallback(AppinfoVar.GoPointer(), ContentTypeVar)
 	}
 }
 
-// SetCallbackGetSupportedTypes sets the callback function.
-func (x *AppInfoIface) SetCallbackGetSupportedTypes(cb func(AppInfo) []string) {
+// OverrideGetSupportedTypes sets the callback function.
+func (x *AppInfoIface) OverrideGetSupportedTypes(cb func(AppInfo) []string) {
 	if cb == nil {
 		x.xGetSupportedTypes = 0
 	} else {
@@ -610,8 +610,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSupportedTypes gets the callback function.
-func (x *AppInfoIface) GetCallbackGetSupportedTypes() func(AppInfo) []string {
+// GetGetSupportedTypes gets the callback function.
+func (x *AppInfoIface) GetGetSupportedTypes() func(AppInfo) []string {
 	if x.xGetSupportedTypes == 0 {
 		return nil
 	}
@@ -622,8 +622,8 @@ 		return rawCallback(AppinfoVar.GoPointer())
 	}
 }
 
-// SetCallbackLaunchUrisAsync sets the callback function.
-func (x *AppInfoIface) SetCallbackLaunchUrisAsync(cb func(AppInfo, *glib.List, *AppLaunchContext, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLaunchUrisAsync sets the callback function.
+func (x *AppInfoIface) OverrideLaunchUrisAsync(cb func(AppInfo, *glib.List, *AppLaunchContext, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLaunchUrisAsync = 0
 	} else {
@@ -633,8 +633,8 @@ 		})
 	}
 }
 
-// GetCallbackLaunchUrisAsync gets the callback function.
-func (x *AppInfoIface) GetCallbackLaunchUrisAsync() func(AppInfo, *glib.List, *AppLaunchContext, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLaunchUrisAsync gets the callback function.
+func (x *AppInfoIface) GetLaunchUrisAsync() func(AppInfo, *glib.List, *AppLaunchContext, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLaunchUrisAsync == 0 {
 		return nil
 	}
@@ -645,8 +645,8 @@ 		rawCallback(AppinfoVar.GoPointer(), UrisVar, ContextVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLaunchUrisFinish sets the callback function.
-func (x *AppInfoIface) SetCallbackLaunchUrisFinish(cb func(AppInfo, AsyncResult) bool) {
+// OverrideLaunchUrisFinish sets the callback function.
+func (x *AppInfoIface) OverrideLaunchUrisFinish(cb func(AppInfo, AsyncResult) bool) {
 	if cb == nil {
 		x.xLaunchUrisFinish = 0
 	} else {
@@ -656,8 +656,8 @@ 		})
 	}
 }
 
-// GetCallbackLaunchUrisFinish gets the callback function.
-func (x *AppInfoIface) GetCallbackLaunchUrisFinish() func(AppInfo, AsyncResult) bool {
+// GetLaunchUrisFinish gets the callback function.
+func (x *AppInfoIface) GetLaunchUrisFinish() func(AppInfo, AsyncResult) bool {
 	if x.xLaunchUrisFinish == 0 {
 		return nil
 	}
@@ -694,8 +694,8 @@ func (x *AppLaunchContextClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetDisplay sets the callback function.
-func (x *AppLaunchContextClass) SetCallbackGetDisplay(cb func(*AppLaunchContext, AppInfo, *glib.List) string) {
+// OverrideGetDisplay sets the callback function.
+func (x *AppLaunchContextClass) OverrideGetDisplay(cb func(*AppLaunchContext, AppInfo, *glib.List) string) {
 	if cb == nil {
 		x.xGetDisplay = 0
 	} else {
@@ -705,8 +705,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDisplay gets the callback function.
-func (x *AppLaunchContextClass) GetCallbackGetDisplay() func(*AppLaunchContext, AppInfo, *glib.List) string {
+// GetGetDisplay gets the callback function.
+func (x *AppLaunchContextClass) GetGetDisplay() func(*AppLaunchContext, AppInfo, *glib.List) string {
 	if x.xGetDisplay == 0 {
 		return nil
 	}
@@ -717,8 +717,8 @@ 		return rawCallback(ContextVar.GoPointer(), InfoVar.GoPointer(), FilesVar)
 	}
 }
 
-// SetCallbackGetStartupNotifyId sets the callback function.
-func (x *AppLaunchContextClass) SetCallbackGetStartupNotifyId(cb func(*AppLaunchContext, AppInfo, *glib.List) string) {
+// OverrideGetStartupNotifyId sets the callback function.
+func (x *AppLaunchContextClass) OverrideGetStartupNotifyId(cb func(*AppLaunchContext, AppInfo, *glib.List) string) {
 	if cb == nil {
 		x.xGetStartupNotifyId = 0
 	} else {
@@ -728,8 +728,8 @@ 		})
 	}
 }
 
-// GetCallbackGetStartupNotifyId gets the callback function.
-func (x *AppLaunchContextClass) GetCallbackGetStartupNotifyId() func(*AppLaunchContext, AppInfo, *glib.List) string {
+// GetGetStartupNotifyId gets the callback function.
+func (x *AppLaunchContextClass) GetGetStartupNotifyId() func(*AppLaunchContext, AppInfo, *glib.List) string {
 	if x.xGetStartupNotifyId == 0 {
 		return nil
 	}
@@ -740,8 +740,8 @@ 		return rawCallback(ContextVar.GoPointer(), InfoVar.GoPointer(), FilesVar)
 	}
 }
 
-// SetCallbackLaunchFailed sets the callback function.
-func (x *AppLaunchContextClass) SetCallbackLaunchFailed(cb func(*AppLaunchContext, string)) {
+// OverrideLaunchFailed sets the callback function.
+func (x *AppLaunchContextClass) OverrideLaunchFailed(cb func(*AppLaunchContext, string)) {
 	if cb == nil {
 		x.xLaunchFailed = 0
 	} else {
@@ -751,8 +751,8 @@ 		})
 	}
 }
 
-// GetCallbackLaunchFailed gets the callback function.
-func (x *AppLaunchContextClass) GetCallbackLaunchFailed() func(*AppLaunchContext, string) {
+// GetLaunchFailed gets the callback function.
+func (x *AppLaunchContextClass) GetLaunchFailed() func(*AppLaunchContext, string) {
 	if x.xLaunchFailed == 0 {
 		return nil
 	}
@@ -763,8 +763,8 @@ 		rawCallback(ContextVar.GoPointer(), StartupNotifyIdVar)
 	}
 }
 
-// SetCallbackLaunched sets the callback function.
-func (x *AppLaunchContextClass) SetCallbackLaunched(cb func(*AppLaunchContext, AppInfo, *glib.Variant)) {
+// OverrideLaunched sets the callback function.
+func (x *AppLaunchContextClass) OverrideLaunched(cb func(*AppLaunchContext, AppInfo, *glib.Variant)) {
 	if cb == nil {
 		x.xLaunched = 0
 	} else {
@@ -774,8 +774,8 @@ 		})
 	}
 }
 
-// GetCallbackLaunched gets the callback function.
-func (x *AppLaunchContextClass) GetCallbackLaunched() func(*AppLaunchContext, AppInfo, *glib.Variant) {
+// GetLaunched gets the callback function.
+func (x *AppLaunchContextClass) GetLaunched() func(*AppLaunchContext, AppInfo, *glib.Variant) {
 	if x.xLaunched == 0 {
 		return nil
 	}
@@ -786,8 +786,8 @@ 		rawCallback(ContextVar.GoPointer(), InfoVar.GoPointer(), PlatformDataVar)
 	}
 }
 
-// SetCallbackLaunchStarted sets the callback function.
-func (x *AppLaunchContextClass) SetCallbackLaunchStarted(cb func(*AppLaunchContext, AppInfo, *glib.Variant)) {
+// OverrideLaunchStarted sets the callback function.
+func (x *AppLaunchContextClass) OverrideLaunchStarted(cb func(*AppLaunchContext, AppInfo, *glib.Variant)) {
 	if cb == nil {
 		x.xLaunchStarted = 0
 	} else {
@@ -797,8 +797,8 @@ 		})
 	}
 }
 
-// GetCallbackLaunchStarted gets the callback function.
-func (x *AppLaunchContextClass) GetCallbackLaunchStarted() func(*AppLaunchContext, AppInfo, *glib.Variant) {
+// GetLaunchStarted gets the callback function.
+func (x *AppLaunchContextClass) GetLaunchStarted() func(*AppLaunchContext, AppInfo, *glib.Variant) {
 	if x.xLaunchStarted == 0 {
 		return nil
 	}
@@ -809,8 +809,8 @@ 		rawCallback(ContextVar.GoPointer(), InfoVar.GoPointer(), PlatformDataVar)
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *AppLaunchContextClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *AppLaunchContextClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -820,8 +820,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *AppLaunchContextClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *AppLaunchContextClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -832,8 +832,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *AppLaunchContextClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *AppLaunchContextClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -843,8 +843,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *AppLaunchContextClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *AppLaunchContextClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -855,8 +855,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *AppLaunchContextClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *AppLaunchContextClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -866,8 +866,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *AppLaunchContextClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *AppLaunchContextClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gapplication.go b/v4/gio/gapplication.go
index 9df60335bb3acf019338873b7c4f792b52498e58..e1acfad254ab2082bfaa364b300c8dc52dc576a0 100644
--- a/v4/gio/gapplication.go
+++ b/v4/gio/gapplication.go
@@ -55,8 +55,8 @@ func (x *ApplicationClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackStartup sets the callback function.
-func (x *ApplicationClass) SetCallbackStartup(cb func(*Application)) {
+// OverrideStartup sets the callback function.
+func (x *ApplicationClass) OverrideStartup(cb func(*Application)) {
 	if cb == nil {
 		x.xStartup = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackStartup gets the callback function.
-func (x *ApplicationClass) GetCallbackStartup() func(*Application) {
+// GetStartup gets the callback function.
+func (x *ApplicationClass) GetStartup() func(*Application) {
 	if x.xStartup == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		rawCallback(ApplicationVar.GoPointer())
 	}
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *ApplicationClass) SetCallbackActivate(cb func(*Application)) {
+// OverrideActivate sets the callback function.
+func (x *ApplicationClass) OverrideActivate(cb func(*Application)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -89,8 +89,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *ApplicationClass) GetCallbackActivate() func(*Application) {
+// GetActivate gets the callback function.
+func (x *ApplicationClass) GetActivate() func(*Application) {
 	if x.xActivate == 0 {
 		return nil
 	}
@@ -101,8 +101,8 @@ 		rawCallback(ApplicationVar.GoPointer())
 	}
 }
 
-// SetCallbackOpen sets the callback function.
-func (x *ApplicationClass) SetCallbackOpen(cb func(*Application, uintptr, int, string)) {
+// OverrideOpen sets the callback function.
+func (x *ApplicationClass) OverrideOpen(cb func(*Application, uintptr, int, string)) {
 	if cb == nil {
 		x.xOpen = 0
 	} else {
@@ -112,8 +112,8 @@ 		})
 	}
 }
 
-// GetCallbackOpen gets the callback function.
-func (x *ApplicationClass) GetCallbackOpen() func(*Application, uintptr, int, string) {
+// GetOpen gets the callback function.
+func (x *ApplicationClass) GetOpen() func(*Application, uintptr, int, string) {
 	if x.xOpen == 0 {
 		return nil
 	}
@@ -124,8 +124,8 @@ 		rawCallback(ApplicationVar.GoPointer(), FilesVar, NFilesVar, HintVar)
 	}
 }
 
-// SetCallbackCommandLine sets the callback function.
-func (x *ApplicationClass) SetCallbackCommandLine(cb func(*Application, *ApplicationCommandLine) int) {
+// OverrideCommandLine sets the callback function.
+func (x *ApplicationClass) OverrideCommandLine(cb func(*Application, *ApplicationCommandLine) int) {
 	if cb == nil {
 		x.xCommandLine = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackCommandLine gets the callback function.
-func (x *ApplicationClass) GetCallbackCommandLine() func(*Application, *ApplicationCommandLine) int {
+// GetCommandLine gets the callback function.
+func (x *ApplicationClass) GetCommandLine() func(*Application, *ApplicationCommandLine) int {
 	if x.xCommandLine == 0 {
 		return nil
 	}
@@ -147,8 +147,8 @@ 		return rawCallback(ApplicationVar.GoPointer(), CommandLineVar.GoPointer())
 	}
 }
 
-// SetCallbackLocalCommandLine sets the callback function.
-func (x *ApplicationClass) SetCallbackLocalCommandLine(cb func(*Application, []string, int) bool) {
+// OverrideLocalCommandLine sets the callback function.
+func (x *ApplicationClass) OverrideLocalCommandLine(cb func(*Application, []string, int) bool) {
 	if cb == nil {
 		x.xLocalCommandLine = 0
 	} else {
@@ -158,8 +158,8 @@ 		})
 	}
 }
 
-// GetCallbackLocalCommandLine gets the callback function.
-func (x *ApplicationClass) GetCallbackLocalCommandLine() func(*Application, []string, int) bool {
+// GetLocalCommandLine gets the callback function.
+func (x *ApplicationClass) GetLocalCommandLine() func(*Application, []string, int) bool {
 	if x.xLocalCommandLine == 0 {
 		return nil
 	}
@@ -170,8 +170,8 @@ 		return rawCallback(ApplicationVar.GoPointer(), ArgumentsVar, ExitStatusVar)
 	}
 }
 
-// SetCallbackBeforeEmit sets the callback function.
-func (x *ApplicationClass) SetCallbackBeforeEmit(cb func(*Application, *glib.Variant)) {
+// OverrideBeforeEmit sets the callback function.
+func (x *ApplicationClass) OverrideBeforeEmit(cb func(*Application, *glib.Variant)) {
 	if cb == nil {
 		x.xBeforeEmit = 0
 	} else {
@@ -181,8 +181,8 @@ 		})
 	}
 }
 
-// GetCallbackBeforeEmit gets the callback function.
-func (x *ApplicationClass) GetCallbackBeforeEmit() func(*Application, *glib.Variant) {
+// GetBeforeEmit gets the callback function.
+func (x *ApplicationClass) GetBeforeEmit() func(*Application, *glib.Variant) {
 	if x.xBeforeEmit == 0 {
 		return nil
 	}
@@ -193,8 +193,8 @@ 		rawCallback(ApplicationVar.GoPointer(), PlatformDataVar)
 	}
 }
 
-// SetCallbackAfterEmit sets the callback function.
-func (x *ApplicationClass) SetCallbackAfterEmit(cb func(*Application, *glib.Variant)) {
+// OverrideAfterEmit sets the callback function.
+func (x *ApplicationClass) OverrideAfterEmit(cb func(*Application, *glib.Variant)) {
 	if cb == nil {
 		x.xAfterEmit = 0
 	} else {
@@ -204,8 +204,8 @@ 		})
 	}
 }
 
-// GetCallbackAfterEmit gets the callback function.
-func (x *ApplicationClass) GetCallbackAfterEmit() func(*Application, *glib.Variant) {
+// GetAfterEmit gets the callback function.
+func (x *ApplicationClass) GetAfterEmit() func(*Application, *glib.Variant) {
 	if x.xAfterEmit == 0 {
 		return nil
 	}
@@ -216,8 +216,8 @@ 		rawCallback(ApplicationVar.GoPointer(), PlatformDataVar)
 	}
 }
 
-// SetCallbackAddPlatformData sets the callback function.
-func (x *ApplicationClass) SetCallbackAddPlatformData(cb func(*Application, *glib.VariantBuilder)) {
+// OverrideAddPlatformData sets the callback function.
+func (x *ApplicationClass) OverrideAddPlatformData(cb func(*Application, *glib.VariantBuilder)) {
 	if cb == nil {
 		x.xAddPlatformData = 0
 	} else {
@@ -227,8 +227,8 @@ 		})
 	}
 }
 
-// GetCallbackAddPlatformData gets the callback function.
-func (x *ApplicationClass) GetCallbackAddPlatformData() func(*Application, *glib.VariantBuilder) {
+// GetAddPlatformData gets the callback function.
+func (x *ApplicationClass) GetAddPlatformData() func(*Application, *glib.VariantBuilder) {
 	if x.xAddPlatformData == 0 {
 		return nil
 	}
@@ -239,8 +239,8 @@ 		rawCallback(ApplicationVar.GoPointer(), BuilderVar)
 	}
 }
 
-// SetCallbackQuitMainloop sets the callback function.
-func (x *ApplicationClass) SetCallbackQuitMainloop(cb func(*Application)) {
+// OverrideQuitMainloop sets the callback function.
+func (x *ApplicationClass) OverrideQuitMainloop(cb func(*Application)) {
 	if cb == nil {
 		x.xQuitMainloop = 0
 	} else {
@@ -250,8 +250,8 @@ 		})
 	}
 }
 
-// GetCallbackQuitMainloop gets the callback function.
-func (x *ApplicationClass) GetCallbackQuitMainloop() func(*Application) {
+// GetQuitMainloop gets the callback function.
+func (x *ApplicationClass) GetQuitMainloop() func(*Application) {
 	if x.xQuitMainloop == 0 {
 		return nil
 	}
@@ -262,8 +262,8 @@ 		rawCallback(ApplicationVar.GoPointer())
 	}
 }
 
-// SetCallbackRunMainloop sets the callback function.
-func (x *ApplicationClass) SetCallbackRunMainloop(cb func(*Application)) {
+// OverrideRunMainloop sets the callback function.
+func (x *ApplicationClass) OverrideRunMainloop(cb func(*Application)) {
 	if cb == nil {
 		x.xRunMainloop = 0
 	} else {
@@ -273,8 +273,8 @@ 		})
 	}
 }
 
-// GetCallbackRunMainloop gets the callback function.
-func (x *ApplicationClass) GetCallbackRunMainloop() func(*Application) {
+// GetRunMainloop gets the callback function.
+func (x *ApplicationClass) GetRunMainloop() func(*Application) {
 	if x.xRunMainloop == 0 {
 		return nil
 	}
@@ -285,8 +285,8 @@ 		rawCallback(ApplicationVar.GoPointer())
 	}
 }
 
-// SetCallbackShutdown sets the callback function.
-func (x *ApplicationClass) SetCallbackShutdown(cb func(*Application)) {
+// OverrideShutdown sets the callback function.
+func (x *ApplicationClass) OverrideShutdown(cb func(*Application)) {
 	if cb == nil {
 		x.xShutdown = 0
 	} else {
@@ -296,8 +296,8 @@ 		})
 	}
 }
 
-// GetCallbackShutdown gets the callback function.
-func (x *ApplicationClass) GetCallbackShutdown() func(*Application) {
+// GetShutdown gets the callback function.
+func (x *ApplicationClass) GetShutdown() func(*Application) {
 	if x.xShutdown == 0 {
 		return nil
 	}
@@ -308,8 +308,8 @@ 		rawCallback(ApplicationVar.GoPointer())
 	}
 }
 
-// SetCallbackDbusRegister sets the callback function.
-func (x *ApplicationClass) SetCallbackDbusRegister(cb func(*Application, *DBusConnection, string) bool) {
+// OverrideDbusRegister sets the callback function.
+func (x *ApplicationClass) OverrideDbusRegister(cb func(*Application, *DBusConnection, string) bool) {
 	if cb == nil {
 		x.xDbusRegister = 0
 	} else {
@@ -319,8 +319,8 @@ 		})
 	}
 }
 
-// GetCallbackDbusRegister gets the callback function.
-func (x *ApplicationClass) GetCallbackDbusRegister() func(*Application, *DBusConnection, string) bool {
+// GetDbusRegister gets the callback function.
+func (x *ApplicationClass) GetDbusRegister() func(*Application, *DBusConnection, string) bool {
 	if x.xDbusRegister == 0 {
 		return nil
 	}
@@ -331,8 +331,8 @@ 		return rawCallback(ApplicationVar.GoPointer(), ConnectionVar.GoPointer(), ObjectPathVar)
 	}
 }
 
-// SetCallbackDbusUnregister sets the callback function.
-func (x *ApplicationClass) SetCallbackDbusUnregister(cb func(*Application, *DBusConnection, string)) {
+// OverrideDbusUnregister sets the callback function.
+func (x *ApplicationClass) OverrideDbusUnregister(cb func(*Application, *DBusConnection, string)) {
 	if cb == nil {
 		x.xDbusUnregister = 0
 	} else {
@@ -342,8 +342,8 @@ 		})
 	}
 }
 
-// GetCallbackDbusUnregister gets the callback function.
-func (x *ApplicationClass) GetCallbackDbusUnregister() func(*Application, *DBusConnection, string) {
+// GetDbusUnregister gets the callback function.
+func (x *ApplicationClass) GetDbusUnregister() func(*Application, *DBusConnection, string) {
 	if x.xDbusUnregister == 0 {
 		return nil
 	}
@@ -354,8 +354,8 @@ 		rawCallback(ApplicationVar.GoPointer(), ConnectionVar.GoPointer(), ObjectPathVar)
 	}
 }
 
-// SetCallbackHandleLocalOptions sets the callback function.
-func (x *ApplicationClass) SetCallbackHandleLocalOptions(cb func(*Application, *glib.VariantDict) int) {
+// OverrideHandleLocalOptions sets the callback function.
+func (x *ApplicationClass) OverrideHandleLocalOptions(cb func(*Application, *glib.VariantDict) int) {
 	if cb == nil {
 		x.xHandleLocalOptions = 0
 	} else {
@@ -365,8 +365,8 @@ 		})
 	}
 }
 
-// GetCallbackHandleLocalOptions gets the callback function.
-func (x *ApplicationClass) GetCallbackHandleLocalOptions() func(*Application, *glib.VariantDict) int {
+// GetHandleLocalOptions gets the callback function.
+func (x *ApplicationClass) GetHandleLocalOptions() func(*Application, *glib.VariantDict) int {
 	if x.xHandleLocalOptions == 0 {
 		return nil
 	}
@@ -377,8 +377,8 @@ 		return rawCallback(ApplicationVar.GoPointer(), OptionsVar)
 	}
 }
 
-// SetCallbackNameLost sets the callback function.
-func (x *ApplicationClass) SetCallbackNameLost(cb func(*Application) bool) {
+// OverrideNameLost sets the callback function.
+func (x *ApplicationClass) OverrideNameLost(cb func(*Application) bool) {
 	if cb == nil {
 		x.xNameLost = 0
 	} else {
@@ -388,8 +388,8 @@ 		})
 	}
 }
 
-// GetCallbackNameLost gets the callback function.
-func (x *ApplicationClass) GetCallbackNameLost() func(*Application) bool {
+// GetNameLost gets the callback function.
+func (x *ApplicationClass) GetNameLost() func(*Application) bool {
 	if x.xNameLost == 0 {
 		return nil
 	}
diff --git a/v4/gio/gapplicationcommandline.go b/v4/gio/gapplicationcommandline.go
index d65cefe316109db9bf288fbdd57e05db9f4b742f..1159b7b49e0328a54b9fd516e3acea2e60ba75fe 100644
--- a/v4/gio/gapplicationcommandline.go
+++ b/v4/gio/gapplicationcommandline.go
@@ -32,8 +32,8 @@ func (x *ApplicationCommandLineClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackPrintLiteral sets the callback function.
-func (x *ApplicationCommandLineClass) SetCallbackPrintLiteral(cb func(*ApplicationCommandLine, string)) {
+// OverridePrintLiteral sets the callback function.
+func (x *ApplicationCommandLineClass) OverridePrintLiteral(cb func(*ApplicationCommandLine, string)) {
 	if cb == nil {
 		x.xPrintLiteral = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackPrintLiteral gets the callback function.
-func (x *ApplicationCommandLineClass) GetCallbackPrintLiteral() func(*ApplicationCommandLine, string) {
+// GetPrintLiteral gets the callback function.
+func (x *ApplicationCommandLineClass) GetPrintLiteral() func(*ApplicationCommandLine, string) {
 	if x.xPrintLiteral == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		rawCallback(CmdlineVar.GoPointer(), MessageVar)
 	}
 }
 
-// SetCallbackPrinterrLiteral sets the callback function.
-func (x *ApplicationCommandLineClass) SetCallbackPrinterrLiteral(cb func(*ApplicationCommandLine, string)) {
+// OverridePrinterrLiteral sets the callback function.
+func (x *ApplicationCommandLineClass) OverridePrinterrLiteral(cb func(*ApplicationCommandLine, string)) {
 	if cb == nil {
 		x.xPrinterrLiteral = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackPrinterrLiteral gets the callback function.
-func (x *ApplicationCommandLineClass) GetCallbackPrinterrLiteral() func(*ApplicationCommandLine, string) {
+// GetPrinterrLiteral gets the callback function.
+func (x *ApplicationCommandLineClass) GetPrinterrLiteral() func(*ApplicationCommandLine, string) {
 	if x.xPrinterrLiteral == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		rawCallback(CmdlineVar.GoPointer(), MessageVar)
 	}
 }
 
-// SetCallbackGetStdin sets the callback function.
-func (x *ApplicationCommandLineClass) SetCallbackGetStdin(cb func(*ApplicationCommandLine) *InputStream) {
+// OverrideGetStdin sets the callback function.
+func (x *ApplicationCommandLineClass) OverrideGetStdin(cb func(*ApplicationCommandLine) *InputStream) {
 	if cb == nil {
 		x.xGetStdin = 0
 	} else {
@@ -93,8 +93,8 @@ 		})
 	}
 }
 
-// GetCallbackGetStdin gets the callback function.
-func (x *ApplicationCommandLineClass) GetCallbackGetStdin() func(*ApplicationCommandLine) *InputStream {
+// GetGetStdin gets the callback function.
+func (x *ApplicationCommandLineClass) GetGetStdin() func(*ApplicationCommandLine) *InputStream {
 	if x.xGetStdin == 0 {
 		return nil
 	}
diff --git a/v4/gio/gasyncinitable.go b/v4/gio/gasyncinitable.go
index 2a667af404b7d716695b87265dfc29f0d2c31573..2584f1afb3ad01138043170c53201d34fb7fc5f9 100644
--- a/v4/gio/gasyncinitable.go
+++ b/v4/gio/gasyncinitable.go
@@ -28,8 +28,8 @@ func (x *AsyncInitableIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackInitAsync sets the callback function.
-func (x *AsyncInitableIface) SetCallbackInitAsync(cb func(AsyncInitable, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideInitAsync sets the callback function.
+func (x *AsyncInitableIface) OverrideInitAsync(cb func(AsyncInitable, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xInitAsync = 0
 	} else {
@@ -39,8 +39,8 @@ 		})
 	}
 }
 
-// GetCallbackInitAsync gets the callback function.
-func (x *AsyncInitableIface) GetCallbackInitAsync() func(AsyncInitable, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetInitAsync gets the callback function.
+func (x *AsyncInitableIface) GetInitAsync() func(AsyncInitable, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xInitAsync == 0 {
 		return nil
 	}
@@ -51,8 +51,8 @@ 		rawCallback(InitableVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackInitFinish sets the callback function.
-func (x *AsyncInitableIface) SetCallbackInitFinish(cb func(AsyncInitable, AsyncResult) bool) {
+// OverrideInitFinish sets the callback function.
+func (x *AsyncInitableIface) OverrideInitFinish(cb func(AsyncInitable, AsyncResult) bool) {
 	if cb == nil {
 		x.xInitFinish = 0
 	} else {
@@ -62,8 +62,8 @@ 		})
 	}
 }
 
-// GetCallbackInitFinish gets the callback function.
-func (x *AsyncInitableIface) GetCallbackInitFinish() func(AsyncInitable, AsyncResult) bool {
+// GetInitFinish gets the callback function.
+func (x *AsyncInitableIface) GetInitFinish() func(AsyncInitable, AsyncResult) bool {
 	if x.xInitFinish == 0 {
 		return nil
 	}
diff --git a/v4/gio/gasyncresult.go b/v4/gio/gasyncresult.go
index 44a6f5bbfe5ef2ebde172c5d4575a463272ac7fd..79b034a12802f732ade45ee88dda269dff7d12c6 100644
--- a/v4/gio/gasyncresult.go
+++ b/v4/gio/gasyncresult.go
@@ -29,8 +29,8 @@ func (x *AsyncResultIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetUserData sets the callback function.
-func (x *AsyncResultIface) SetCallbackGetUserData(cb func(AsyncResult) uintptr) {
+// OverrideGetUserData sets the callback function.
+func (x *AsyncResultIface) OverrideGetUserData(cb func(AsyncResult) uintptr) {
 	if cb == nil {
 		x.xGetUserData = 0
 	} else {
@@ -40,8 +40,8 @@ 		})
 	}
 }
 
-// GetCallbackGetUserData gets the callback function.
-func (x *AsyncResultIface) GetCallbackGetUserData() func(AsyncResult) uintptr {
+// GetGetUserData gets the callback function.
+func (x *AsyncResultIface) GetGetUserData() func(AsyncResult) uintptr {
 	if x.xGetUserData == 0 {
 		return nil
 	}
@@ -52,8 +52,8 @@ 		return rawCallback(ResVar.GoPointer())
 	}
 }
 
-// SetCallbackGetSourceObject sets the callback function.
-func (x *AsyncResultIface) SetCallbackGetSourceObject(cb func(AsyncResult) *gobject.Object) {
+// OverrideGetSourceObject sets the callback function.
+func (x *AsyncResultIface) OverrideGetSourceObject(cb func(AsyncResult) *gobject.Object) {
 	if cb == nil {
 		x.xGetSourceObject = 0
 	} else {
@@ -67,8 +67,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSourceObject gets the callback function.
-func (x *AsyncResultIface) GetCallbackGetSourceObject() func(AsyncResult) *gobject.Object {
+// GetGetSourceObject gets the callback function.
+func (x *AsyncResultIface) GetGetSourceObject() func(AsyncResult) *gobject.Object {
 	if x.xGetSourceObject == 0 {
 		return nil
 	}
@@ -85,8 +85,8 @@ 		return ret
 	}
 }
 
-// SetCallbackIsTagged sets the callback function.
-func (x *AsyncResultIface) SetCallbackIsTagged(cb func(AsyncResult, uintptr) bool) {
+// OverrideIsTagged sets the callback function.
+func (x *AsyncResultIface) OverrideIsTagged(cb func(AsyncResult, uintptr) bool) {
 	if cb == nil {
 		x.xIsTagged = 0
 	} else {
@@ -96,8 +96,8 @@ 		})
 	}
 }
 
-// GetCallbackIsTagged gets the callback function.
-func (x *AsyncResultIface) GetCallbackIsTagged() func(AsyncResult, uintptr) bool {
+// GetIsTagged gets the callback function.
+func (x *AsyncResultIface) GetIsTagged() func(AsyncResult, uintptr) bool {
 	if x.xIsTagged == 0 {
 		return nil
 	}
diff --git a/v4/gio/gbufferedinputstream.go b/v4/gio/gbufferedinputstream.go
index 1b140fce66dcb72aeaf848c519447ab3901abfa7..0cb834d3a040e4cfd9603eb9b539e3bdf45c5aee 100644
--- a/v4/gio/gbufferedinputstream.go
+++ b/v4/gio/gbufferedinputstream.go
@@ -37,8 +37,8 @@ func (x *BufferedInputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackFill sets the callback function.
-func (x *BufferedInputStreamClass) SetCallbackFill(cb func(*BufferedInputStream, int, *Cancellable) int) {
+// OverrideFill sets the callback function.
+func (x *BufferedInputStreamClass) OverrideFill(cb func(*BufferedInputStream, int, *Cancellable) int) {
 	if cb == nil {
 		x.xFill = 0
 	} else {
@@ -48,8 +48,8 @@ 		})
 	}
 }
 
-// GetCallbackFill gets the callback function.
-func (x *BufferedInputStreamClass) GetCallbackFill() func(*BufferedInputStream, int, *Cancellable) int {
+// GetFill gets the callback function.
+func (x *BufferedInputStreamClass) GetFill() func(*BufferedInputStream, int, *Cancellable) int {
 	if x.xFill == 0 {
 		return nil
 	}
@@ -60,8 +60,8 @@ 		return rawCallback(StreamVar.GoPointer(), CountVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackFillAsync sets the callback function.
-func (x *BufferedInputStreamClass) SetCallbackFillAsync(cb func(*BufferedInputStream, int, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideFillAsync sets the callback function.
+func (x *BufferedInputStreamClass) OverrideFillAsync(cb func(*BufferedInputStream, int, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xFillAsync = 0
 	} else {
@@ -71,8 +71,8 @@ 		})
 	}
 }
 
-// GetCallbackFillAsync gets the callback function.
-func (x *BufferedInputStreamClass) GetCallbackFillAsync() func(*BufferedInputStream, int, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetFillAsync gets the callback function.
+func (x *BufferedInputStreamClass) GetFillAsync() func(*BufferedInputStream, int, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xFillAsync == 0 {
 		return nil
 	}
@@ -83,8 +83,8 @@ 		rawCallback(StreamVar.GoPointer(), CountVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackFillFinish sets the callback function.
-func (x *BufferedInputStreamClass) SetCallbackFillFinish(cb func(*BufferedInputStream, AsyncResult) int) {
+// OverrideFillFinish sets the callback function.
+func (x *BufferedInputStreamClass) OverrideFillFinish(cb func(*BufferedInputStream, AsyncResult) int) {
 	if cb == nil {
 		x.xFillFinish = 0
 	} else {
@@ -94,8 +94,8 @@ 		})
 	}
 }
 
-// GetCallbackFillFinish gets the callback function.
-func (x *BufferedInputStreamClass) GetCallbackFillFinish() func(*BufferedInputStream, AsyncResult) int {
+// GetFillFinish gets the callback function.
+func (x *BufferedInputStreamClass) GetFillFinish() func(*BufferedInputStream, AsyncResult) int {
 	if x.xFillFinish == 0 {
 		return nil
 	}
@@ -106,8 +106,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *BufferedInputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *BufferedInputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -117,8 +117,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *BufferedInputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *BufferedInputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -129,8 +129,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *BufferedInputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *BufferedInputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -140,8 +140,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *BufferedInputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *BufferedInputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -152,8 +152,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *BufferedInputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *BufferedInputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -163,8 +163,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *BufferedInputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *BufferedInputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -175,8 +175,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *BufferedInputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *BufferedInputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -186,8 +186,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *BufferedInputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *BufferedInputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -198,8 +198,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *BufferedInputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *BufferedInputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -209,8 +209,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *BufferedInputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *BufferedInputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gbufferedoutputstream.go b/v4/gio/gbufferedoutputstream.go
index 2f38503249ca04ae1846dad99e84d1c9c6599771..9a002e26101432136a426ce60cdcf521a86dfc62 100644
--- a/v4/gio/gbufferedoutputstream.go
+++ b/v4/gio/gbufferedoutputstream.go
@@ -25,8 +25,8 @@ func (x *BufferedOutputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *BufferedOutputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *BufferedOutputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -36,8 +36,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *BufferedOutputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *BufferedOutputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -48,8 +48,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *BufferedOutputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *BufferedOutputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -59,8 +59,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *BufferedOutputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *BufferedOutputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gcancellable.go b/v4/gio/gcancellable.go
index 1422594495636287bafacc3b23a4e2909c98bc46..123d762155422c261d046a72e031768de64f8328 100644
--- a/v4/gio/gcancellable.go
+++ b/v4/gio/gcancellable.go
@@ -34,8 +34,8 @@ func (x *CancellableClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackCancelled sets the callback function.
-func (x *CancellableClass) SetCallbackCancelled(cb func(*Cancellable)) {
+// OverrideCancelled sets the callback function.
+func (x *CancellableClass) OverrideCancelled(cb func(*Cancellable)) {
 	if cb == nil {
 		x.xCancelled = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackCancelled gets the callback function.
-func (x *CancellableClass) GetCallbackCancelled() func(*Cancellable) {
+// GetCancelled gets the callback function.
+func (x *CancellableClass) GetCancelled() func(*Cancellable) {
 	if x.xCancelled == 0 {
 		return nil
 	}
@@ -57,8 +57,8 @@ 		rawCallback(CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *CancellableClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *CancellableClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -68,8 +68,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *CancellableClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *CancellableClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -80,8 +80,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *CancellableClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *CancellableClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -91,8 +91,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *CancellableClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *CancellableClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -103,8 +103,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *CancellableClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *CancellableClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -114,8 +114,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *CancellableClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *CancellableClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -126,8 +126,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *CancellableClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *CancellableClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -137,8 +137,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *CancellableClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *CancellableClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -149,8 +149,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *CancellableClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *CancellableClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -160,8 +160,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *CancellableClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *CancellableClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gconverter.go b/v4/gio/gconverter.go
index 5cfaad9baad4d85bda16ef18fd04996c729d7028..6cf13cd095db92c8884fd91afc274f745afa0da4 100644
--- a/v4/gio/gconverter.go
+++ b/v4/gio/gconverter.go
@@ -28,8 +28,8 @@ func (x *ConverterIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackConvert sets the callback function.
-func (x *ConverterIface) SetCallbackConvert(cb func(Converter, []byte, uint, []byte, uint, ConverterFlags, uint, uint) ConverterResult) {
+// OverrideConvert sets the callback function.
+func (x *ConverterIface) OverrideConvert(cb func(Converter, []byte, uint, []byte, uint, ConverterFlags, uint, uint) ConverterResult) {
 	if cb == nil {
 		x.xConvert = 0
 	} else {
@@ -39,8 +39,8 @@ 		})
 	}
 }
 
-// GetCallbackConvert gets the callback function.
-func (x *ConverterIface) GetCallbackConvert() func(Converter, []byte, uint, []byte, uint, ConverterFlags, uint, uint) ConverterResult {
+// GetConvert gets the callback function.
+func (x *ConverterIface) GetConvert() func(Converter, []byte, uint, []byte, uint, ConverterFlags, uint, uint) ConverterResult {
 	if x.xConvert == 0 {
 		return nil
 	}
@@ -51,8 +51,8 @@ 		return rawCallback(ConverterVar.GoPointer(), InbufVar, InbufSizeVar, OutbufVar, OutbufSizeVar, FlagsVar, BytesReadVar, BytesWrittenVar)
 	}
 }
 
-// SetCallbackReset sets the callback function.
-func (x *ConverterIface) SetCallbackReset(cb func(Converter)) {
+// OverrideReset sets the callback function.
+func (x *ConverterIface) OverrideReset(cb func(Converter)) {
 	if cb == nil {
 		x.xReset = 0
 	} else {
@@ -62,8 +62,8 @@ 		})
 	}
 }
 
-// GetCallbackReset gets the callback function.
-func (x *ConverterIface) GetCallbackReset() func(Converter) {
+// GetReset gets the callback function.
+func (x *ConverterIface) GetReset() func(Converter) {
 	if x.xReset == 0 {
 		return nil
 	}
diff --git a/v4/gio/gconverterinputstream.go b/v4/gio/gconverterinputstream.go
index 5f183947316ab20908eca4b61c9f01c3478e9c18..e50838805091cf769efcc27e028c2a699d69da44 100644
--- a/v4/gio/gconverterinputstream.go
+++ b/v4/gio/gconverterinputstream.go
@@ -32,8 +32,8 @@ func (x *ConverterInputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *ConverterInputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *ConverterInputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *ConverterInputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *ConverterInputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *ConverterInputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *ConverterInputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *ConverterInputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *ConverterInputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *ConverterInputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *ConverterInputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -89,8 +89,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *ConverterInputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *ConverterInputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -101,8 +101,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *ConverterInputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *ConverterInputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -112,8 +112,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *ConverterInputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *ConverterInputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -124,8 +124,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *ConverterInputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *ConverterInputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *ConverterInputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *ConverterInputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gconverteroutputstream.go b/v4/gio/gconverteroutputstream.go
index bbb54cad5d003ee7bc8bec6b71e7393af60ced3f..730dcbfaa4c2215dd5e360f08d4f9bb1e410697e 100644
--- a/v4/gio/gconverteroutputstream.go
+++ b/v4/gio/gconverteroutputstream.go
@@ -32,8 +32,8 @@ func (x *ConverterOutputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *ConverterOutputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *ConverterOutputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *ConverterOutputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *ConverterOutputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *ConverterOutputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *ConverterOutputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *ConverterOutputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *ConverterOutputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *ConverterOutputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *ConverterOutputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -89,8 +89,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *ConverterOutputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *ConverterOutputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -101,8 +101,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *ConverterOutputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *ConverterOutputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -112,8 +112,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *ConverterOutputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *ConverterOutputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -124,8 +124,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *ConverterOutputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *ConverterOutputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *ConverterOutputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *ConverterOutputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdatagrambased.go b/v4/gio/gdatagrambased.go
index b62c2de2c48e91a091f0205b3e1e050e7e278c38..87d70b7f8b1ae7fa6b5cbda0ab88559c33f659f8 100644
--- a/v4/gio/gdatagrambased.go
+++ b/v4/gio/gdatagrambased.go
@@ -36,8 +36,8 @@ func (x *DatagramBasedInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackReceiveMessages sets the callback function.
-func (x *DatagramBasedInterface) SetCallbackReceiveMessages(cb func(DatagramBased, []InputMessage, uint, int, int64, *Cancellable) int) {
+// OverrideReceiveMessages sets the callback function.
+func (x *DatagramBasedInterface) OverrideReceiveMessages(cb func(DatagramBased, []InputMessage, uint, int, int64, *Cancellable) int) {
 	if cb == nil {
 		x.xReceiveMessages = 0
 	} else {
@@ -47,8 +47,8 @@ 		})
 	}
 }
 
-// GetCallbackReceiveMessages gets the callback function.
-func (x *DatagramBasedInterface) GetCallbackReceiveMessages() func(DatagramBased, []InputMessage, uint, int, int64, *Cancellable) int {
+// GetReceiveMessages gets the callback function.
+func (x *DatagramBasedInterface) GetReceiveMessages() func(DatagramBased, []InputMessage, uint, int, int64, *Cancellable) int {
 	if x.xReceiveMessages == 0 {
 		return nil
 	}
@@ -59,8 +59,8 @@ 		return rawCallback(DatagramBasedVar.GoPointer(), MessagesVar, NumMessagesVar, FlagsVar, TimeoutVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackSendMessages sets the callback function.
-func (x *DatagramBasedInterface) SetCallbackSendMessages(cb func(DatagramBased, []OutputMessage, uint, int, int64, *Cancellable) int) {
+// OverrideSendMessages sets the callback function.
+func (x *DatagramBasedInterface) OverrideSendMessages(cb func(DatagramBased, []OutputMessage, uint, int, int64, *Cancellable) int) {
 	if cb == nil {
 		x.xSendMessages = 0
 	} else {
@@ -70,8 +70,8 @@ 		})
 	}
 }
 
-// GetCallbackSendMessages gets the callback function.
-func (x *DatagramBasedInterface) GetCallbackSendMessages() func(DatagramBased, []OutputMessage, uint, int, int64, *Cancellable) int {
+// GetSendMessages gets the callback function.
+func (x *DatagramBasedInterface) GetSendMessages() func(DatagramBased, []OutputMessage, uint, int, int64, *Cancellable) int {
 	if x.xSendMessages == 0 {
 		return nil
 	}
@@ -82,8 +82,8 @@ 		return rawCallback(DatagramBasedVar.GoPointer(), MessagesVar, NumMessagesVar, FlagsVar, TimeoutVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackCreateSource sets the callback function.
-func (x *DatagramBasedInterface) SetCallbackCreateSource(cb func(DatagramBased, glib.IOCondition, *Cancellable) *glib.Source) {
+// OverrideCreateSource sets the callback function.
+func (x *DatagramBasedInterface) OverrideCreateSource(cb func(DatagramBased, glib.IOCondition, *Cancellable) *glib.Source) {
 	if cb == nil {
 		x.xCreateSource = 0
 	} else {
@@ -93,8 +93,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateSource gets the callback function.
-func (x *DatagramBasedInterface) GetCallbackCreateSource() func(DatagramBased, glib.IOCondition, *Cancellable) *glib.Source {
+// GetCreateSource gets the callback function.
+func (x *DatagramBasedInterface) GetCreateSource() func(DatagramBased, glib.IOCondition, *Cancellable) *glib.Source {
 	if x.xCreateSource == 0 {
 		return nil
 	}
@@ -105,8 +105,8 @@ 		return rawCallback(DatagramBasedVar.GoPointer(), ConditionVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackConditionCheck sets the callback function.
-func (x *DatagramBasedInterface) SetCallbackConditionCheck(cb func(DatagramBased, glib.IOCondition) glib.IOCondition) {
+// OverrideConditionCheck sets the callback function.
+func (x *DatagramBasedInterface) OverrideConditionCheck(cb func(DatagramBased, glib.IOCondition) glib.IOCondition) {
 	if cb == nil {
 		x.xConditionCheck = 0
 	} else {
@@ -116,8 +116,8 @@ 		})
 	}
 }
 
-// GetCallbackConditionCheck gets the callback function.
-func (x *DatagramBasedInterface) GetCallbackConditionCheck() func(DatagramBased, glib.IOCondition) glib.IOCondition {
+// GetConditionCheck gets the callback function.
+func (x *DatagramBasedInterface) GetConditionCheck() func(DatagramBased, glib.IOCondition) glib.IOCondition {
 	if x.xConditionCheck == 0 {
 		return nil
 	}
@@ -128,8 +128,8 @@ 		return rawCallback(DatagramBasedVar.GoPointer(), ConditionVar)
 	}
 }
 
-// SetCallbackConditionWait sets the callback function.
-func (x *DatagramBasedInterface) SetCallbackConditionWait(cb func(DatagramBased, glib.IOCondition, int64, *Cancellable) bool) {
+// OverrideConditionWait sets the callback function.
+func (x *DatagramBasedInterface) OverrideConditionWait(cb func(DatagramBased, glib.IOCondition, int64, *Cancellable) bool) {
 	if cb == nil {
 		x.xConditionWait = 0
 	} else {
@@ -139,8 +139,8 @@ 		})
 	}
 }
 
-// GetCallbackConditionWait gets the callback function.
-func (x *DatagramBasedInterface) GetCallbackConditionWait() func(DatagramBased, glib.IOCondition, int64, *Cancellable) bool {
+// GetConditionWait gets the callback function.
+func (x *DatagramBasedInterface) GetConditionWait() func(DatagramBased, glib.IOCondition, int64, *Cancellable) bool {
 	if x.xConditionWait == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdatainputstream.go b/v4/gio/gdatainputstream.go
index db43b41a12b4142e026562b120285a63aeb7fa42..338d94fd80030ca4869a480648e63e050440d4a3 100644
--- a/v4/gio/gdatainputstream.go
+++ b/v4/gio/gdatainputstream.go
@@ -31,8 +31,8 @@ func (x *DataInputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *DataInputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *DataInputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *DataInputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *DataInputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *DataInputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *DataInputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *DataInputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *DataInputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *DataInputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *DataInputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *DataInputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *DataInputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *DataInputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *DataInputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *DataInputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *DataInputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -123,8 +123,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *DataInputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *DataInputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -134,8 +134,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *DataInputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *DataInputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdataoutputstream.go b/v4/gio/gdataoutputstream.go
index 7325460f7aec343d158f73b93c0e13fd8729c22a..30959a72312e3e83c4f123a263dd900ebc3b01f6 100644
--- a/v4/gio/gdataoutputstream.go
+++ b/v4/gio/gdataoutputstream.go
@@ -31,8 +31,8 @@ func (x *DataOutputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *DataOutputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *DataOutputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *DataOutputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *DataOutputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *DataOutputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *DataOutputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *DataOutputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *DataOutputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *DataOutputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *DataOutputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *DataOutputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *DataOutputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *DataOutputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *DataOutputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *DataOutputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *DataOutputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -123,8 +123,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *DataOutputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *DataOutputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -134,8 +134,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *DataOutputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *DataOutputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdbusinterface.go b/v4/gio/gdbusinterface.go
index 9736ad26a374b79cce804072f6e07a837b8ca1bb..6f63593060ff209d316ba1d4f73560ecf3daebc3 100644
--- a/v4/gio/gdbusinterface.go
+++ b/v4/gio/gdbusinterface.go
@@ -30,8 +30,8 @@ func (x *DBusInterfaceIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetInfo sets the callback function.
-func (x *DBusInterfaceIface) SetCallbackGetInfo(cb func(DBusInterface) *DBusInterfaceInfo) {
+// OverrideGetInfo sets the callback function.
+func (x *DBusInterfaceIface) OverrideGetInfo(cb func(DBusInterface) *DBusInterfaceInfo) {
 	if cb == nil {
 		x.xGetInfo = 0
 	} else {
@@ -41,8 +41,8 @@ 		})
 	}
 }
 
-// GetCallbackGetInfo gets the callback function.
-func (x *DBusInterfaceIface) GetCallbackGetInfo() func(DBusInterface) *DBusInterfaceInfo {
+// GetGetInfo gets the callback function.
+func (x *DBusInterfaceIface) GetGetInfo() func(DBusInterface) *DBusInterfaceInfo {
 	if x.xGetInfo == 0 {
 		return nil
 	}
@@ -53,8 +53,8 @@ 		return rawCallback(InterfaceVar.GoPointer())
 	}
 }
 
-// SetCallbackGetObject sets the callback function.
-func (x *DBusInterfaceIface) SetCallbackGetObject(cb func(DBusInterface) *DBusObjectBase) {
+// OverrideGetObject sets the callback function.
+func (x *DBusInterfaceIface) OverrideGetObject(cb func(DBusInterface) *DBusObjectBase) {
 	if cb == nil {
 		x.xGetObject = 0
 	} else {
@@ -68,8 +68,8 @@ 		})
 	}
 }
 
-// GetCallbackGetObject gets the callback function.
-func (x *DBusInterfaceIface) GetCallbackGetObject() func(DBusInterface) *DBusObjectBase {
+// GetGetObject gets the callback function.
+func (x *DBusInterfaceIface) GetGetObject() func(DBusInterface) *DBusObjectBase {
 	if x.xGetObject == 0 {
 		return nil
 	}
@@ -86,8 +86,8 @@ 		return ret
 	}
 }
 
-// SetCallbackSetObject sets the callback function.
-func (x *DBusInterfaceIface) SetCallbackSetObject(cb func(DBusInterface, DBusObject)) {
+// OverrideSetObject sets the callback function.
+func (x *DBusInterfaceIface) OverrideSetObject(cb func(DBusInterface, DBusObject)) {
 	if cb == nil {
 		x.xSetObject = 0
 	} else {
@@ -97,8 +97,8 @@ 		})
 	}
 }
 
-// GetCallbackSetObject gets the callback function.
-func (x *DBusInterfaceIface) GetCallbackSetObject() func(DBusInterface, DBusObject) {
+// GetSetObject gets the callback function.
+func (x *DBusInterfaceIface) GetSetObject() func(DBusInterface, DBusObject) {
 	if x.xSetObject == 0 {
 		return nil
 	}
@@ -109,8 +109,8 @@ 		rawCallback(InterfaceVar.GoPointer(), ObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackDupObject sets the callback function.
-func (x *DBusInterfaceIface) SetCallbackDupObject(cb func(DBusInterface) *DBusObjectBase) {
+// OverrideDupObject sets the callback function.
+func (x *DBusInterfaceIface) OverrideDupObject(cb func(DBusInterface) *DBusObjectBase) {
 	if cb == nil {
 		x.xDupObject = 0
 	} else {
@@ -124,8 +124,8 @@ 		})
 	}
 }
 
-// GetCallbackDupObject gets the callback function.
-func (x *DBusInterfaceIface) GetCallbackDupObject() func(DBusInterface) *DBusObjectBase {
+// GetDupObject gets the callback function.
+func (x *DBusInterfaceIface) GetDupObject() func(DBusInterface) *DBusObjectBase {
 	if x.xDupObject == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdbusinterfaceskeleton.go b/v4/gio/gdbusinterfaceskeleton.go
index cb70ad21da46785aefe2619aa4d5b74af81a877c..0b46d4dab765551ee4bd8e837520438ec0dc406f 100644
--- a/v4/gio/gdbusinterfaceskeleton.go
+++ b/v4/gio/gdbusinterfaceskeleton.go
@@ -37,8 +37,8 @@ func (x *DBusInterfaceSkeletonClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetInfo sets the callback function.
-func (x *DBusInterfaceSkeletonClass) SetCallbackGetInfo(cb func(*DBusInterfaceSkeleton) *DBusInterfaceInfo) {
+// OverrideGetInfo sets the callback function.
+func (x *DBusInterfaceSkeletonClass) OverrideGetInfo(cb func(*DBusInterfaceSkeleton) *DBusInterfaceInfo) {
 	if cb == nil {
 		x.xGetInfo = 0
 	} else {
@@ -48,8 +48,8 @@ 		})
 	}
 }
 
-// GetCallbackGetInfo gets the callback function.
-func (x *DBusInterfaceSkeletonClass) GetCallbackGetInfo() func(*DBusInterfaceSkeleton) *DBusInterfaceInfo {
+// GetGetInfo gets the callback function.
+func (x *DBusInterfaceSkeletonClass) GetGetInfo() func(*DBusInterfaceSkeleton) *DBusInterfaceInfo {
 	if x.xGetInfo == 0 {
 		return nil
 	}
@@ -60,8 +60,8 @@ 		return rawCallback(InterfaceVar.GoPointer())
 	}
 }
 
-// SetCallbackGetVtable sets the callback function.
-func (x *DBusInterfaceSkeletonClass) SetCallbackGetVtable(cb func(*DBusInterfaceSkeleton) *DBusInterfaceVTable) {
+// OverrideGetVtable sets the callback function.
+func (x *DBusInterfaceSkeletonClass) OverrideGetVtable(cb func(*DBusInterfaceSkeleton) *DBusInterfaceVTable) {
 	if cb == nil {
 		x.xGetVtable = 0
 	} else {
@@ -71,8 +71,8 @@ 		})
 	}
 }
 
-// GetCallbackGetVtable gets the callback function.
-func (x *DBusInterfaceSkeletonClass) GetCallbackGetVtable() func(*DBusInterfaceSkeleton) *DBusInterfaceVTable {
+// GetGetVtable gets the callback function.
+func (x *DBusInterfaceSkeletonClass) GetGetVtable() func(*DBusInterfaceSkeleton) *DBusInterfaceVTable {
 	if x.xGetVtable == 0 {
 		return nil
 	}
@@ -83,8 +83,8 @@ 		return rawCallback(InterfaceVar.GoPointer())
 	}
 }
 
-// SetCallbackGetProperties sets the callback function.
-func (x *DBusInterfaceSkeletonClass) SetCallbackGetProperties(cb func(*DBusInterfaceSkeleton) *glib.Variant) {
+// OverrideGetProperties sets the callback function.
+func (x *DBusInterfaceSkeletonClass) OverrideGetProperties(cb func(*DBusInterfaceSkeleton) *glib.Variant) {
 	if cb == nil {
 		x.xGetProperties = 0
 	} else {
@@ -94,8 +94,8 @@ 		})
 	}
 }
 
-// GetCallbackGetProperties gets the callback function.
-func (x *DBusInterfaceSkeletonClass) GetCallbackGetProperties() func(*DBusInterfaceSkeleton) *glib.Variant {
+// GetGetProperties gets the callback function.
+func (x *DBusInterfaceSkeletonClass) GetGetProperties() func(*DBusInterfaceSkeleton) *glib.Variant {
 	if x.xGetProperties == 0 {
 		return nil
 	}
@@ -106,8 +106,8 @@ 		return rawCallback(InterfaceVar.GoPointer())
 	}
 }
 
-// SetCallbackFlush sets the callback function.
-func (x *DBusInterfaceSkeletonClass) SetCallbackFlush(cb func(*DBusInterfaceSkeleton)) {
+// OverrideFlush sets the callback function.
+func (x *DBusInterfaceSkeletonClass) OverrideFlush(cb func(*DBusInterfaceSkeleton)) {
 	if cb == nil {
 		x.xFlush = 0
 	} else {
@@ -117,8 +117,8 @@ 		})
 	}
 }
 
-// GetCallbackFlush gets the callback function.
-func (x *DBusInterfaceSkeletonClass) GetCallbackFlush() func(*DBusInterfaceSkeleton) {
+// GetFlush gets the callback function.
+func (x *DBusInterfaceSkeletonClass) GetFlush() func(*DBusInterfaceSkeleton) {
 	if x.xFlush == 0 {
 		return nil
 	}
@@ -129,8 +129,8 @@ 		rawCallback(InterfaceVar.GoPointer())
 	}
 }
 
-// SetCallbackGAuthorizeMethod sets the callback function.
-func (x *DBusInterfaceSkeletonClass) SetCallbackGAuthorizeMethod(cb func(*DBusInterfaceSkeleton, *DBusMethodInvocation) bool) {
+// OverrideGAuthorizeMethod sets the callback function.
+func (x *DBusInterfaceSkeletonClass) OverrideGAuthorizeMethod(cb func(*DBusInterfaceSkeleton, *DBusMethodInvocation) bool) {
 	if cb == nil {
 		x.xGAuthorizeMethod = 0
 	} else {
@@ -140,8 +140,8 @@ 		})
 	}
 }
 
-// GetCallbackGAuthorizeMethod gets the callback function.
-func (x *DBusInterfaceSkeletonClass) GetCallbackGAuthorizeMethod() func(*DBusInterfaceSkeleton, *DBusMethodInvocation) bool {
+// GetGAuthorizeMethod gets the callback function.
+func (x *DBusInterfaceSkeletonClass) GetGAuthorizeMethod() func(*DBusInterfaceSkeleton, *DBusMethodInvocation) bool {
 	if x.xGAuthorizeMethod == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdbusobject.go b/v4/gio/gdbusobject.go
index beb5750fd4b6f688288a280143774f0977983662..b1938befade37cea9192da36301c10798b087c42 100644
--- a/v4/gio/gdbusobject.go
+++ b/v4/gio/gdbusobject.go
@@ -32,8 +32,8 @@ func (x *DBusObjectIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetObjectPath sets the callback function.
-func (x *DBusObjectIface) SetCallbackGetObjectPath(cb func(DBusObject) string) {
+// OverrideGetObjectPath sets the callback function.
+func (x *DBusObjectIface) OverrideGetObjectPath(cb func(DBusObject) string) {
 	if cb == nil {
 		x.xGetObjectPath = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackGetObjectPath gets the callback function.
-func (x *DBusObjectIface) GetCallbackGetObjectPath() func(DBusObject) string {
+// GetGetObjectPath gets the callback function.
+func (x *DBusObjectIface) GetGetObjectPath() func(DBusObject) string {
 	if x.xGetObjectPath == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		return rawCallback(ObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackGetInterfaces sets the callback function.
-func (x *DBusObjectIface) SetCallbackGetInterfaces(cb func(DBusObject) *glib.List) {
+// OverrideGetInterfaces sets the callback function.
+func (x *DBusObjectIface) OverrideGetInterfaces(cb func(DBusObject) *glib.List) {
 	if cb == nil {
 		x.xGetInterfaces = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackGetInterfaces gets the callback function.
-func (x *DBusObjectIface) GetCallbackGetInterfaces() func(DBusObject) *glib.List {
+// GetGetInterfaces gets the callback function.
+func (x *DBusObjectIface) GetGetInterfaces() func(DBusObject) *glib.List {
 	if x.xGetInterfaces == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		return rawCallback(ObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackGetInterface sets the callback function.
-func (x *DBusObjectIface) SetCallbackGetInterface(cb func(DBusObject, string) *DBusInterfaceBase) {
+// OverrideGetInterface sets the callback function.
+func (x *DBusObjectIface) OverrideGetInterface(cb func(DBusObject, string) *DBusInterfaceBase) {
 	if cb == nil {
 		x.xGetInterface = 0
 	} else {
@@ -93,8 +93,8 @@ 		})
 	}
 }
 
-// GetCallbackGetInterface gets the callback function.
-func (x *DBusObjectIface) GetCallbackGetInterface() func(DBusObject, string) *DBusInterfaceBase {
+// GetGetInterface gets the callback function.
+func (x *DBusObjectIface) GetGetInterface() func(DBusObject, string) *DBusInterfaceBase {
 	if x.xGetInterface == 0 {
 		return nil
 	}
@@ -111,8 +111,8 @@ 		return ret
 	}
 }
 
-// SetCallbackInterfaceAdded sets the callback function.
-func (x *DBusObjectIface) SetCallbackInterfaceAdded(cb func(DBusObject, DBusInterface)) {
+// OverrideInterfaceAdded sets the callback function.
+func (x *DBusObjectIface) OverrideInterfaceAdded(cb func(DBusObject, DBusInterface)) {
 	if cb == nil {
 		x.xInterfaceAdded = 0
 	} else {
@@ -122,8 +122,8 @@ 		})
 	}
 }
 
-// GetCallbackInterfaceAdded gets the callback function.
-func (x *DBusObjectIface) GetCallbackInterfaceAdded() func(DBusObject, DBusInterface) {
+// GetInterfaceAdded gets the callback function.
+func (x *DBusObjectIface) GetInterfaceAdded() func(DBusObject, DBusInterface) {
 	if x.xInterfaceAdded == 0 {
 		return nil
 	}
@@ -134,8 +134,8 @@ 		rawCallback(ObjectVar.GoPointer(), InterfaceVar.GoPointer())
 	}
 }
 
-// SetCallbackInterfaceRemoved sets the callback function.
-func (x *DBusObjectIface) SetCallbackInterfaceRemoved(cb func(DBusObject, DBusInterface)) {
+// OverrideInterfaceRemoved sets the callback function.
+func (x *DBusObjectIface) OverrideInterfaceRemoved(cb func(DBusObject, DBusInterface)) {
 	if cb == nil {
 		x.xInterfaceRemoved = 0
 	} else {
@@ -145,8 +145,8 @@ 		})
 	}
 }
 
-// GetCallbackInterfaceRemoved gets the callback function.
-func (x *DBusObjectIface) GetCallbackInterfaceRemoved() func(DBusObject, DBusInterface) {
+// GetInterfaceRemoved gets the callback function.
+func (x *DBusObjectIface) GetInterfaceRemoved() func(DBusObject, DBusInterface) {
 	if x.xInterfaceRemoved == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdbusobjectmanager.go b/v4/gio/gdbusobjectmanager.go
index 730420c4faf7f674986579f5bf79083a49da80bf..970f8454bfd9cfb5decde24c74369e3a6159afd2 100644
--- a/v4/gio/gdbusobjectmanager.go
+++ b/v4/gio/gdbusobjectmanager.go
@@ -38,8 +38,8 @@ func (x *DBusObjectManagerIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetObjectPath sets the callback function.
-func (x *DBusObjectManagerIface) SetCallbackGetObjectPath(cb func(DBusObjectManager) string) {
+// OverrideGetObjectPath sets the callback function.
+func (x *DBusObjectManagerIface) OverrideGetObjectPath(cb func(DBusObjectManager) string) {
 	if cb == nil {
 		x.xGetObjectPath = 0
 	} else {
@@ -49,8 +49,8 @@ 		})
 	}
 }
 
-// GetCallbackGetObjectPath gets the callback function.
-func (x *DBusObjectManagerIface) GetCallbackGetObjectPath() func(DBusObjectManager) string {
+// GetGetObjectPath gets the callback function.
+func (x *DBusObjectManagerIface) GetGetObjectPath() func(DBusObjectManager) string {
 	if x.xGetObjectPath == 0 {
 		return nil
 	}
@@ -61,8 +61,8 @@ 		return rawCallback(ManagerVar.GoPointer())
 	}
 }
 
-// SetCallbackGetObjects sets the callback function.
-func (x *DBusObjectManagerIface) SetCallbackGetObjects(cb func(DBusObjectManager) *glib.List) {
+// OverrideGetObjects sets the callback function.
+func (x *DBusObjectManagerIface) OverrideGetObjects(cb func(DBusObjectManager) *glib.List) {
 	if cb == nil {
 		x.xGetObjects = 0
 	} else {
@@ -72,8 +72,8 @@ 		})
 	}
 }
 
-// GetCallbackGetObjects gets the callback function.
-func (x *DBusObjectManagerIface) GetCallbackGetObjects() func(DBusObjectManager) *glib.List {
+// GetGetObjects gets the callback function.
+func (x *DBusObjectManagerIface) GetGetObjects() func(DBusObjectManager) *glib.List {
 	if x.xGetObjects == 0 {
 		return nil
 	}
@@ -84,8 +84,8 @@ 		return rawCallback(ManagerVar.GoPointer())
 	}
 }
 
-// SetCallbackGetObject sets the callback function.
-func (x *DBusObjectManagerIface) SetCallbackGetObject(cb func(DBusObjectManager, string) *DBusObjectBase) {
+// OverrideGetObject sets the callback function.
+func (x *DBusObjectManagerIface) OverrideGetObject(cb func(DBusObjectManager, string) *DBusObjectBase) {
 	if cb == nil {
 		x.xGetObject = 0
 	} else {
@@ -99,8 +99,8 @@ 		})
 	}
 }
 
-// GetCallbackGetObject gets the callback function.
-func (x *DBusObjectManagerIface) GetCallbackGetObject() func(DBusObjectManager, string) *DBusObjectBase {
+// GetGetObject gets the callback function.
+func (x *DBusObjectManagerIface) GetGetObject() func(DBusObjectManager, string) *DBusObjectBase {
 	if x.xGetObject == 0 {
 		return nil
 	}
@@ -117,8 +117,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetInterface sets the callback function.
-func (x *DBusObjectManagerIface) SetCallbackGetInterface(cb func(DBusObjectManager, string, string) *DBusInterfaceBase) {
+// OverrideGetInterface sets the callback function.
+func (x *DBusObjectManagerIface) OverrideGetInterface(cb func(DBusObjectManager, string, string) *DBusInterfaceBase) {
 	if cb == nil {
 		x.xGetInterface = 0
 	} else {
@@ -132,8 +132,8 @@ 		})
 	}
 }
 
-// GetCallbackGetInterface gets the callback function.
-func (x *DBusObjectManagerIface) GetCallbackGetInterface() func(DBusObjectManager, string, string) *DBusInterfaceBase {
+// GetGetInterface gets the callback function.
+func (x *DBusObjectManagerIface) GetGetInterface() func(DBusObjectManager, string, string) *DBusInterfaceBase {
 	if x.xGetInterface == 0 {
 		return nil
 	}
@@ -150,8 +150,8 @@ 		return ret
 	}
 }
 
-// SetCallbackObjectAdded sets the callback function.
-func (x *DBusObjectManagerIface) SetCallbackObjectAdded(cb func(DBusObjectManager, DBusObject)) {
+// OverrideObjectAdded sets the callback function.
+func (x *DBusObjectManagerIface) OverrideObjectAdded(cb func(DBusObjectManager, DBusObject)) {
 	if cb == nil {
 		x.xObjectAdded = 0
 	} else {
@@ -161,8 +161,8 @@ 		})
 	}
 }
 
-// GetCallbackObjectAdded gets the callback function.
-func (x *DBusObjectManagerIface) GetCallbackObjectAdded() func(DBusObjectManager, DBusObject) {
+// GetObjectAdded gets the callback function.
+func (x *DBusObjectManagerIface) GetObjectAdded() func(DBusObjectManager, DBusObject) {
 	if x.xObjectAdded == 0 {
 		return nil
 	}
@@ -173,8 +173,8 @@ 		rawCallback(ManagerVar.GoPointer(), ObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackObjectRemoved sets the callback function.
-func (x *DBusObjectManagerIface) SetCallbackObjectRemoved(cb func(DBusObjectManager, DBusObject)) {
+// OverrideObjectRemoved sets the callback function.
+func (x *DBusObjectManagerIface) OverrideObjectRemoved(cb func(DBusObjectManager, DBusObject)) {
 	if cb == nil {
 		x.xObjectRemoved = 0
 	} else {
@@ -184,8 +184,8 @@ 		})
 	}
 }
 
-// GetCallbackObjectRemoved gets the callback function.
-func (x *DBusObjectManagerIface) GetCallbackObjectRemoved() func(DBusObjectManager, DBusObject) {
+// GetObjectRemoved gets the callback function.
+func (x *DBusObjectManagerIface) GetObjectRemoved() func(DBusObjectManager, DBusObject) {
 	if x.xObjectRemoved == 0 {
 		return nil
 	}
@@ -196,8 +196,8 @@ 		rawCallback(ManagerVar.GoPointer(), ObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackInterfaceAdded sets the callback function.
-func (x *DBusObjectManagerIface) SetCallbackInterfaceAdded(cb func(DBusObjectManager, DBusObject, DBusInterface)) {
+// OverrideInterfaceAdded sets the callback function.
+func (x *DBusObjectManagerIface) OverrideInterfaceAdded(cb func(DBusObjectManager, DBusObject, DBusInterface)) {
 	if cb == nil {
 		x.xInterfaceAdded = 0
 	} else {
@@ -207,8 +207,8 @@ 		})
 	}
 }
 
-// GetCallbackInterfaceAdded gets the callback function.
-func (x *DBusObjectManagerIface) GetCallbackInterfaceAdded() func(DBusObjectManager, DBusObject, DBusInterface) {
+// GetInterfaceAdded gets the callback function.
+func (x *DBusObjectManagerIface) GetInterfaceAdded() func(DBusObjectManager, DBusObject, DBusInterface) {
 	if x.xInterfaceAdded == 0 {
 		return nil
 	}
@@ -219,8 +219,8 @@ 		rawCallback(ManagerVar.GoPointer(), ObjectVar.GoPointer(), InterfaceVar.GoPointer())
 	}
 }
 
-// SetCallbackInterfaceRemoved sets the callback function.
-func (x *DBusObjectManagerIface) SetCallbackInterfaceRemoved(cb func(DBusObjectManager, DBusObject, DBusInterface)) {
+// OverrideInterfaceRemoved sets the callback function.
+func (x *DBusObjectManagerIface) OverrideInterfaceRemoved(cb func(DBusObjectManager, DBusObject, DBusInterface)) {
 	if cb == nil {
 		x.xInterfaceRemoved = 0
 	} else {
@@ -230,8 +230,8 @@ 		})
 	}
 }
 
-// GetCallbackInterfaceRemoved gets the callback function.
-func (x *DBusObjectManagerIface) GetCallbackInterfaceRemoved() func(DBusObjectManager, DBusObject, DBusInterface) {
+// GetInterfaceRemoved gets the callback function.
+func (x *DBusObjectManagerIface) GetInterfaceRemoved() func(DBusObjectManager, DBusObject, DBusInterface) {
 	if x.xInterfaceRemoved == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdbusobjectmanagerclient.go b/v4/gio/gdbusobjectmanagerclient.go
index 8bc7851f8802d8cae0f711b11195e30ebd7771d3..874c6676d38be3eae3ed874fa1da7f5e5b94c667 100644
--- a/v4/gio/gdbusobjectmanagerclient.go
+++ b/v4/gio/gdbusobjectmanagerclient.go
@@ -29,8 +29,8 @@ func (x *DBusObjectManagerClientClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackInterfaceProxySignal sets the callback function.
-func (x *DBusObjectManagerClientClass) SetCallbackInterfaceProxySignal(cb func(*DBusObjectManagerClient, *DBusObjectProxy, *DBusProxy, string, string, *glib.Variant)) {
+// OverrideInterfaceProxySignal sets the callback function.
+func (x *DBusObjectManagerClientClass) OverrideInterfaceProxySignal(cb func(*DBusObjectManagerClient, *DBusObjectProxy, *DBusProxy, string, string, *glib.Variant)) {
 	if cb == nil {
 		x.xInterfaceProxySignal = 0
 	} else {
@@ -40,8 +40,8 @@ 		})
 	}
 }
 
-// GetCallbackInterfaceProxySignal gets the callback function.
-func (x *DBusObjectManagerClientClass) GetCallbackInterfaceProxySignal() func(*DBusObjectManagerClient, *DBusObjectProxy, *DBusProxy, string, string, *glib.Variant) {
+// GetInterfaceProxySignal gets the callback function.
+func (x *DBusObjectManagerClientClass) GetInterfaceProxySignal() func(*DBusObjectManagerClient, *DBusObjectProxy, *DBusProxy, string, string, *glib.Variant) {
 	if x.xInterfaceProxySignal == 0 {
 		return nil
 	}
@@ -52,8 +52,8 @@ 		rawCallback(ManagerVar.GoPointer(), ObjectProxyVar.GoPointer(), InterfaceProxyVar.GoPointer(), SenderNameVar, SignalNameVar, ParametersVar)
 	}
 }
 
-// SetCallbackInterfaceProxyPropertiesChanged sets the callback function.
-func (x *DBusObjectManagerClientClass) SetCallbackInterfaceProxyPropertiesChanged(cb func(*DBusObjectManagerClient, *DBusObjectProxy, *DBusProxy, *glib.Variant, string)) {
+// OverrideInterfaceProxyPropertiesChanged sets the callback function.
+func (x *DBusObjectManagerClientClass) OverrideInterfaceProxyPropertiesChanged(cb func(*DBusObjectManagerClient, *DBusObjectProxy, *DBusProxy, *glib.Variant, string)) {
 	if cb == nil {
 		x.xInterfaceProxyPropertiesChanged = 0
 	} else {
@@ -63,8 +63,8 @@ 		})
 	}
 }
 
-// GetCallbackInterfaceProxyPropertiesChanged gets the callback function.
-func (x *DBusObjectManagerClientClass) GetCallbackInterfaceProxyPropertiesChanged() func(*DBusObjectManagerClient, *DBusObjectProxy, *DBusProxy, *glib.Variant, string) {
+// GetInterfaceProxyPropertiesChanged gets the callback function.
+func (x *DBusObjectManagerClientClass) GetInterfaceProxyPropertiesChanged() func(*DBusObjectManagerClient, *DBusObjectProxy, *DBusProxy, *glib.Variant, string) {
 	if x.xInterfaceProxyPropertiesChanged == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdbusobjectskeleton.go b/v4/gio/gdbusobjectskeleton.go
index c3e2d69c2635d151044653ae8ad2de1fac5c88a7..4c144951577860d1120bfee2ff38ab77cb3b7372 100644
--- a/v4/gio/gdbusobjectskeleton.go
+++ b/v4/gio/gdbusobjectskeleton.go
@@ -27,8 +27,8 @@ func (x *DBusObjectSkeletonClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackAuthorizeMethod sets the callback function.
-func (x *DBusObjectSkeletonClass) SetCallbackAuthorizeMethod(cb func(*DBusObjectSkeleton, *DBusInterfaceSkeleton, *DBusMethodInvocation) bool) {
+// OverrideAuthorizeMethod sets the callback function.
+func (x *DBusObjectSkeletonClass) OverrideAuthorizeMethod(cb func(*DBusObjectSkeleton, *DBusInterfaceSkeleton, *DBusMethodInvocation) bool) {
 	if cb == nil {
 		x.xAuthorizeMethod = 0
 	} else {
@@ -38,8 +38,8 @@ 		})
 	}
 }
 
-// GetCallbackAuthorizeMethod gets the callback function.
-func (x *DBusObjectSkeletonClass) GetCallbackAuthorizeMethod() func(*DBusObjectSkeleton, *DBusInterfaceSkeleton, *DBusMethodInvocation) bool {
+// GetAuthorizeMethod gets the callback function.
+func (x *DBusObjectSkeletonClass) GetAuthorizeMethod() func(*DBusObjectSkeleton, *DBusInterfaceSkeleton, *DBusMethodInvocation) bool {
 	if x.xAuthorizeMethod == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdbusproxy.go b/v4/gio/gdbusproxy.go
index 15fcf3519e05a9edb5f20ba46fd45437211ab129..ce8a185475584a140c610f22edd7f20b2b656819 100644
--- a/v4/gio/gdbusproxy.go
+++ b/v4/gio/gdbusproxy.go
@@ -29,8 +29,8 @@ func (x *DBusProxyClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGPropertiesChanged sets the callback function.
-func (x *DBusProxyClass) SetCallbackGPropertiesChanged(cb func(*DBusProxy, *glib.Variant, string)) {
+// OverrideGPropertiesChanged sets the callback function.
+func (x *DBusProxyClass) OverrideGPropertiesChanged(cb func(*DBusProxy, *glib.Variant, string)) {
 	if cb == nil {
 		x.xGPropertiesChanged = 0
 	} else {
@@ -40,8 +40,8 @@ 		})
 	}
 }
 
-// GetCallbackGPropertiesChanged gets the callback function.
-func (x *DBusProxyClass) GetCallbackGPropertiesChanged() func(*DBusProxy, *glib.Variant, string) {
+// GetGPropertiesChanged gets the callback function.
+func (x *DBusProxyClass) GetGPropertiesChanged() func(*DBusProxy, *glib.Variant, string) {
 	if x.xGPropertiesChanged == 0 {
 		return nil
 	}
@@ -52,8 +52,8 @@ 		rawCallback(ProxyVar.GoPointer(), ChangedPropertiesVar, InvalidatedPropertiesVar)
 	}
 }
 
-// SetCallbackGSignal sets the callback function.
-func (x *DBusProxyClass) SetCallbackGSignal(cb func(*DBusProxy, string, string, *glib.Variant)) {
+// OverrideGSignal sets the callback function.
+func (x *DBusProxyClass) OverrideGSignal(cb func(*DBusProxy, string, string, *glib.Variant)) {
 	if cb == nil {
 		x.xGSignal = 0
 	} else {
@@ -63,8 +63,8 @@ 		})
 	}
 }
 
-// GetCallbackGSignal gets the callback function.
-func (x *DBusProxyClass) GetCallbackGSignal() func(*DBusProxy, string, string, *glib.Variant) {
+// GetGSignal gets the callback function.
+func (x *DBusProxyClass) GetGSignal() func(*DBusProxy, string, string, *glib.Variant) {
 	if x.xGSignal == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdebugcontrollerdbus.go b/v4/gio/gdebugcontrollerdbus.go
index f536e6ed9f052345db1b506de86f835a4883657c..2ee6035572a7d56fca6f69c7c76afdfaed401ec0 100644
--- a/v4/gio/gdebugcontrollerdbus.go
+++ b/v4/gio/gdebugcontrollerdbus.go
@@ -27,8 +27,8 @@ func (x *DebugControllerDBusClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackAuthorize sets the callback function.
-func (x *DebugControllerDBusClass) SetCallbackAuthorize(cb func(*DebugControllerDBus, *DBusMethodInvocation) bool) {
+// OverrideAuthorize sets the callback function.
+func (x *DebugControllerDBusClass) OverrideAuthorize(cb func(*DebugControllerDBus, *DBusMethodInvocation) bool) {
 	if cb == nil {
 		x.xAuthorize = 0
 	} else {
@@ -38,8 +38,8 @@ 		})
 	}
 }
 
-// GetCallbackAuthorize gets the callback function.
-func (x *DebugControllerDBusClass) GetCallbackAuthorize() func(*DebugControllerDBus, *DBusMethodInvocation) bool {
+// GetAuthorize gets the callback function.
+func (x *DebugControllerDBusClass) GetAuthorize() func(*DebugControllerDBus, *DBusMethodInvocation) bool {
 	if x.xAuthorize == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdesktopappinfo.go b/v4/gio/gdesktopappinfo.go
index 12d03438c59f19202b9e581f5b5560a815403fdc..629f406bca374f2d2ca31c0db077082f4880292d 100644
--- a/v4/gio/gdesktopappinfo.go
+++ b/v4/gio/gdesktopappinfo.go
@@ -41,8 +41,8 @@ func (x *DesktopAppInfoLookupIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetDefaultForUriScheme sets the callback function.
-func (x *DesktopAppInfoLookupIface) SetCallbackGetDefaultForUriScheme(cb func(DesktopAppInfoLookup, string) *AppInfoBase) {
+// OverrideGetDefaultForUriScheme sets the callback function.
+func (x *DesktopAppInfoLookupIface) OverrideGetDefaultForUriScheme(cb func(DesktopAppInfoLookup, string) *AppInfoBase) {
 	if cb == nil {
 		x.xGetDefaultForUriScheme = 0
 	} else {
@@ -56,8 +56,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDefaultForUriScheme gets the callback function.
-func (x *DesktopAppInfoLookupIface) GetCallbackGetDefaultForUriScheme() func(DesktopAppInfoLookup, string) *AppInfoBase {
+// GetGetDefaultForUriScheme gets the callback function.
+func (x *DesktopAppInfoLookupIface) GetGetDefaultForUriScheme() func(DesktopAppInfoLookup, string) *AppInfoBase {
 	if x.xGetDefaultForUriScheme == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdrive.go b/v4/gio/gdrive.go
index 164a982c41b840e08dc4618b4beedbc81da3affc..65fcff63d3061b0808412da663470660749803cb 100644
--- a/v4/gio/gdrive.go
+++ b/v4/gio/gdrive.go
@@ -86,8 +86,8 @@ func (x *DriveIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *DriveIface) SetCallbackChanged(cb func(Drive)) {
+// OverrideChanged sets the callback function.
+func (x *DriveIface) OverrideChanged(cb func(Drive)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -97,8 +97,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *DriveIface) GetCallbackChanged() func(Drive) {
+// GetChanged gets the callback function.
+func (x *DriveIface) GetChanged() func(Drive) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -109,8 +109,8 @@ 		rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackDisconnected sets the callback function.
-func (x *DriveIface) SetCallbackDisconnected(cb func(Drive)) {
+// OverrideDisconnected sets the callback function.
+func (x *DriveIface) OverrideDisconnected(cb func(Drive)) {
 	if cb == nil {
 		x.xDisconnected = 0
 	} else {
@@ -120,8 +120,8 @@ 		})
 	}
 }
 
-// GetCallbackDisconnected gets the callback function.
-func (x *DriveIface) GetCallbackDisconnected() func(Drive) {
+// GetDisconnected gets the callback function.
+func (x *DriveIface) GetDisconnected() func(Drive) {
 	if x.xDisconnected == 0 {
 		return nil
 	}
@@ -132,8 +132,8 @@ 		rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackEjectButton sets the callback function.
-func (x *DriveIface) SetCallbackEjectButton(cb func(Drive)) {
+// OverrideEjectButton sets the callback function.
+func (x *DriveIface) OverrideEjectButton(cb func(Drive)) {
 	if cb == nil {
 		x.xEjectButton = 0
 	} else {
@@ -143,8 +143,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectButton gets the callback function.
-func (x *DriveIface) GetCallbackEjectButton() func(Drive) {
+// GetEjectButton gets the callback function.
+func (x *DriveIface) GetEjectButton() func(Drive) {
 	if x.xEjectButton == 0 {
 		return nil
 	}
@@ -155,8 +155,8 @@ 		rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackGetName sets the callback function.
-func (x *DriveIface) SetCallbackGetName(cb func(Drive) string) {
+// OverrideGetName sets the callback function.
+func (x *DriveIface) OverrideGetName(cb func(Drive) string) {
 	if cb == nil {
 		x.xGetName = 0
 	} else {
@@ -166,8 +166,8 @@ 		})
 	}
 }
 
-// GetCallbackGetName gets the callback function.
-func (x *DriveIface) GetCallbackGetName() func(Drive) string {
+// GetGetName gets the callback function.
+func (x *DriveIface) GetGetName() func(Drive) string {
 	if x.xGetName == 0 {
 		return nil
 	}
@@ -178,8 +178,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackGetIcon sets the callback function.
-func (x *DriveIface) SetCallbackGetIcon(cb func(Drive) *IconBase) {
+// OverrideGetIcon sets the callback function.
+func (x *DriveIface) OverrideGetIcon(cb func(Drive) *IconBase) {
 	if cb == nil {
 		x.xGetIcon = 0
 	} else {
@@ -193,8 +193,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIcon gets the callback function.
-func (x *DriveIface) GetCallbackGetIcon() func(Drive) *IconBase {
+// GetGetIcon gets the callback function.
+func (x *DriveIface) GetGetIcon() func(Drive) *IconBase {
 	if x.xGetIcon == 0 {
 		return nil
 	}
@@ -211,8 +211,8 @@ 		return ret
 	}
 }
 
-// SetCallbackHasVolumes sets the callback function.
-func (x *DriveIface) SetCallbackHasVolumes(cb func(Drive) bool) {
+// OverrideHasVolumes sets the callback function.
+func (x *DriveIface) OverrideHasVolumes(cb func(Drive) bool) {
 	if cb == nil {
 		x.xHasVolumes = 0
 	} else {
@@ -222,8 +222,8 @@ 		})
 	}
 }
 
-// GetCallbackHasVolumes gets the callback function.
-func (x *DriveIface) GetCallbackHasVolumes() func(Drive) bool {
+// GetHasVolumes gets the callback function.
+func (x *DriveIface) GetHasVolumes() func(Drive) bool {
 	if x.xHasVolumes == 0 {
 		return nil
 	}
@@ -234,8 +234,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackGetVolumes sets the callback function.
-func (x *DriveIface) SetCallbackGetVolumes(cb func(Drive) *glib.List) {
+// OverrideGetVolumes sets the callback function.
+func (x *DriveIface) OverrideGetVolumes(cb func(Drive) *glib.List) {
 	if cb == nil {
 		x.xGetVolumes = 0
 	} else {
@@ -245,8 +245,8 @@ 		})
 	}
 }
 
-// GetCallbackGetVolumes gets the callback function.
-func (x *DriveIface) GetCallbackGetVolumes() func(Drive) *glib.List {
+// GetGetVolumes gets the callback function.
+func (x *DriveIface) GetGetVolumes() func(Drive) *glib.List {
 	if x.xGetVolumes == 0 {
 		return nil
 	}
@@ -257,8 +257,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackIsMediaRemovable sets the callback function.
-func (x *DriveIface) SetCallbackIsMediaRemovable(cb func(Drive) bool) {
+// OverrideIsMediaRemovable sets the callback function.
+func (x *DriveIface) OverrideIsMediaRemovable(cb func(Drive) bool) {
 	if cb == nil {
 		x.xIsMediaRemovable = 0
 	} else {
@@ -268,8 +268,8 @@ 		})
 	}
 }
 
-// GetCallbackIsMediaRemovable gets the callback function.
-func (x *DriveIface) GetCallbackIsMediaRemovable() func(Drive) bool {
+// GetIsMediaRemovable gets the callback function.
+func (x *DriveIface) GetIsMediaRemovable() func(Drive) bool {
 	if x.xIsMediaRemovable == 0 {
 		return nil
 	}
@@ -280,8 +280,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackHasMedia sets the callback function.
-func (x *DriveIface) SetCallbackHasMedia(cb func(Drive) bool) {
+// OverrideHasMedia sets the callback function.
+func (x *DriveIface) OverrideHasMedia(cb func(Drive) bool) {
 	if cb == nil {
 		x.xHasMedia = 0
 	} else {
@@ -291,8 +291,8 @@ 		})
 	}
 }
 
-// GetCallbackHasMedia gets the callback function.
-func (x *DriveIface) GetCallbackHasMedia() func(Drive) bool {
+// GetHasMedia gets the callback function.
+func (x *DriveIface) GetHasMedia() func(Drive) bool {
 	if x.xHasMedia == 0 {
 		return nil
 	}
@@ -303,8 +303,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackIsMediaCheckAutomatic sets the callback function.
-func (x *DriveIface) SetCallbackIsMediaCheckAutomatic(cb func(Drive) bool) {
+// OverrideIsMediaCheckAutomatic sets the callback function.
+func (x *DriveIface) OverrideIsMediaCheckAutomatic(cb func(Drive) bool) {
 	if cb == nil {
 		x.xIsMediaCheckAutomatic = 0
 	} else {
@@ -314,8 +314,8 @@ 		})
 	}
 }
 
-// GetCallbackIsMediaCheckAutomatic gets the callback function.
-func (x *DriveIface) GetCallbackIsMediaCheckAutomatic() func(Drive) bool {
+// GetIsMediaCheckAutomatic gets the callback function.
+func (x *DriveIface) GetIsMediaCheckAutomatic() func(Drive) bool {
 	if x.xIsMediaCheckAutomatic == 0 {
 		return nil
 	}
@@ -326,8 +326,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackCanEject sets the callback function.
-func (x *DriveIface) SetCallbackCanEject(cb func(Drive) bool) {
+// OverrideCanEject sets the callback function.
+func (x *DriveIface) OverrideCanEject(cb func(Drive) bool) {
 	if cb == nil {
 		x.xCanEject = 0
 	} else {
@@ -337,8 +337,8 @@ 		})
 	}
 }
 
-// GetCallbackCanEject gets the callback function.
-func (x *DriveIface) GetCallbackCanEject() func(Drive) bool {
+// GetCanEject gets the callback function.
+func (x *DriveIface) GetCanEject() func(Drive) bool {
 	if x.xCanEject == 0 {
 		return nil
 	}
@@ -349,8 +349,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackCanPollForMedia sets the callback function.
-func (x *DriveIface) SetCallbackCanPollForMedia(cb func(Drive) bool) {
+// OverrideCanPollForMedia sets the callback function.
+func (x *DriveIface) OverrideCanPollForMedia(cb func(Drive) bool) {
 	if cb == nil {
 		x.xCanPollForMedia = 0
 	} else {
@@ -360,8 +360,8 @@ 		})
 	}
 }
 
-// GetCallbackCanPollForMedia gets the callback function.
-func (x *DriveIface) GetCallbackCanPollForMedia() func(Drive) bool {
+// GetCanPollForMedia gets the callback function.
+func (x *DriveIface) GetCanPollForMedia() func(Drive) bool {
 	if x.xCanPollForMedia == 0 {
 		return nil
 	}
@@ -372,8 +372,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackEject sets the callback function.
-func (x *DriveIface) SetCallbackEject(cb func(Drive, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideEject sets the callback function.
+func (x *DriveIface) OverrideEject(cb func(Drive, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xEject = 0
 	} else {
@@ -383,8 +383,8 @@ 		})
 	}
 }
 
-// GetCallbackEject gets the callback function.
-func (x *DriveIface) GetCallbackEject() func(Drive, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetEject gets the callback function.
+func (x *DriveIface) GetEject() func(Drive, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xEject == 0 {
 		return nil
 	}
@@ -395,8 +395,8 @@ 		rawCallback(DriveVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackEjectFinish sets the callback function.
-func (x *DriveIface) SetCallbackEjectFinish(cb func(Drive, AsyncResult) bool) {
+// OverrideEjectFinish sets the callback function.
+func (x *DriveIface) OverrideEjectFinish(cb func(Drive, AsyncResult) bool) {
 	if cb == nil {
 		x.xEjectFinish = 0
 	} else {
@@ -406,8 +406,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectFinish gets the callback function.
-func (x *DriveIface) GetCallbackEjectFinish() func(Drive, AsyncResult) bool {
+// GetEjectFinish gets the callback function.
+func (x *DriveIface) GetEjectFinish() func(Drive, AsyncResult) bool {
 	if x.xEjectFinish == 0 {
 		return nil
 	}
@@ -418,8 +418,8 @@ 		return rawCallback(DriveVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackPollForMedia sets the callback function.
-func (x *DriveIface) SetCallbackPollForMedia(cb func(Drive, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverridePollForMedia sets the callback function.
+func (x *DriveIface) OverridePollForMedia(cb func(Drive, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xPollForMedia = 0
 	} else {
@@ -429,8 +429,8 @@ 		})
 	}
 }
 
-// GetCallbackPollForMedia gets the callback function.
-func (x *DriveIface) GetCallbackPollForMedia() func(Drive, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetPollForMedia gets the callback function.
+func (x *DriveIface) GetPollForMedia() func(Drive, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xPollForMedia == 0 {
 		return nil
 	}
@@ -441,8 +441,8 @@ 		rawCallback(DriveVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackPollForMediaFinish sets the callback function.
-func (x *DriveIface) SetCallbackPollForMediaFinish(cb func(Drive, AsyncResult) bool) {
+// OverridePollForMediaFinish sets the callback function.
+func (x *DriveIface) OverridePollForMediaFinish(cb func(Drive, AsyncResult) bool) {
 	if cb == nil {
 		x.xPollForMediaFinish = 0
 	} else {
@@ -452,8 +452,8 @@ 		})
 	}
 }
 
-// GetCallbackPollForMediaFinish gets the callback function.
-func (x *DriveIface) GetCallbackPollForMediaFinish() func(Drive, AsyncResult) bool {
+// GetPollForMediaFinish gets the callback function.
+func (x *DriveIface) GetPollForMediaFinish() func(Drive, AsyncResult) bool {
 	if x.xPollForMediaFinish == 0 {
 		return nil
 	}
@@ -464,8 +464,8 @@ 		return rawCallback(DriveVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGetIdentifier sets the callback function.
-func (x *DriveIface) SetCallbackGetIdentifier(cb func(Drive, string) string) {
+// OverrideGetIdentifier sets the callback function.
+func (x *DriveIface) OverrideGetIdentifier(cb func(Drive, string) string) {
 	if cb == nil {
 		x.xGetIdentifier = 0
 	} else {
@@ -475,8 +475,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIdentifier gets the callback function.
-func (x *DriveIface) GetCallbackGetIdentifier() func(Drive, string) string {
+// GetGetIdentifier gets the callback function.
+func (x *DriveIface) GetGetIdentifier() func(Drive, string) string {
 	if x.xGetIdentifier == 0 {
 		return nil
 	}
@@ -487,8 +487,8 @@ 		return rawCallback(DriveVar.GoPointer(), KindVar)
 	}
 }
 
-// SetCallbackEnumerateIdentifiers sets the callback function.
-func (x *DriveIface) SetCallbackEnumerateIdentifiers(cb func(Drive) []string) {
+// OverrideEnumerateIdentifiers sets the callback function.
+func (x *DriveIface) OverrideEnumerateIdentifiers(cb func(Drive) []string) {
 	if cb == nil {
 		x.xEnumerateIdentifiers = 0
 	} else {
@@ -498,8 +498,8 @@ 		})
 	}
 }
 
-// GetCallbackEnumerateIdentifiers gets the callback function.
-func (x *DriveIface) GetCallbackEnumerateIdentifiers() func(Drive) []string {
+// GetEnumerateIdentifiers gets the callback function.
+func (x *DriveIface) GetEnumerateIdentifiers() func(Drive) []string {
 	if x.xEnumerateIdentifiers == 0 {
 		return nil
 	}
@@ -510,8 +510,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackGetStartStopType sets the callback function.
-func (x *DriveIface) SetCallbackGetStartStopType(cb func(Drive) DriveStartStopType) {
+// OverrideGetStartStopType sets the callback function.
+func (x *DriveIface) OverrideGetStartStopType(cb func(Drive) DriveStartStopType) {
 	if cb == nil {
 		x.xGetStartStopType = 0
 	} else {
@@ -521,8 +521,8 @@ 		})
 	}
 }
 
-// GetCallbackGetStartStopType gets the callback function.
-func (x *DriveIface) GetCallbackGetStartStopType() func(Drive) DriveStartStopType {
+// GetGetStartStopType gets the callback function.
+func (x *DriveIface) GetGetStartStopType() func(Drive) DriveStartStopType {
 	if x.xGetStartStopType == 0 {
 		return nil
 	}
@@ -533,8 +533,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackCanStart sets the callback function.
-func (x *DriveIface) SetCallbackCanStart(cb func(Drive) bool) {
+// OverrideCanStart sets the callback function.
+func (x *DriveIface) OverrideCanStart(cb func(Drive) bool) {
 	if cb == nil {
 		x.xCanStart = 0
 	} else {
@@ -544,8 +544,8 @@ 		})
 	}
 }
 
-// GetCallbackCanStart gets the callback function.
-func (x *DriveIface) GetCallbackCanStart() func(Drive) bool {
+// GetCanStart gets the callback function.
+func (x *DriveIface) GetCanStart() func(Drive) bool {
 	if x.xCanStart == 0 {
 		return nil
 	}
@@ -556,8 +556,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackCanStartDegraded sets the callback function.
-func (x *DriveIface) SetCallbackCanStartDegraded(cb func(Drive) bool) {
+// OverrideCanStartDegraded sets the callback function.
+func (x *DriveIface) OverrideCanStartDegraded(cb func(Drive) bool) {
 	if cb == nil {
 		x.xCanStartDegraded = 0
 	} else {
@@ -567,8 +567,8 @@ 		})
 	}
 }
 
-// GetCallbackCanStartDegraded gets the callback function.
-func (x *DriveIface) GetCallbackCanStartDegraded() func(Drive) bool {
+// GetCanStartDegraded gets the callback function.
+func (x *DriveIface) GetCanStartDegraded() func(Drive) bool {
 	if x.xCanStartDegraded == 0 {
 		return nil
 	}
@@ -579,8 +579,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackStart sets the callback function.
-func (x *DriveIface) SetCallbackStart(cb func(Drive, DriveStartFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideStart sets the callback function.
+func (x *DriveIface) OverrideStart(cb func(Drive, DriveStartFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xStart = 0
 	} else {
@@ -590,8 +590,8 @@ 		})
 	}
 }
 
-// GetCallbackStart gets the callback function.
-func (x *DriveIface) GetCallbackStart() func(Drive, DriveStartFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetStart gets the callback function.
+func (x *DriveIface) GetStart() func(Drive, DriveStartFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xStart == 0 {
 		return nil
 	}
@@ -602,8 +602,8 @@ 		rawCallback(DriveVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackStartFinish sets the callback function.
-func (x *DriveIface) SetCallbackStartFinish(cb func(Drive, AsyncResult) bool) {
+// OverrideStartFinish sets the callback function.
+func (x *DriveIface) OverrideStartFinish(cb func(Drive, AsyncResult) bool) {
 	if cb == nil {
 		x.xStartFinish = 0
 	} else {
@@ -613,8 +613,8 @@ 		})
 	}
 }
 
-// GetCallbackStartFinish gets the callback function.
-func (x *DriveIface) GetCallbackStartFinish() func(Drive, AsyncResult) bool {
+// GetStartFinish gets the callback function.
+func (x *DriveIface) GetStartFinish() func(Drive, AsyncResult) bool {
 	if x.xStartFinish == 0 {
 		return nil
 	}
@@ -625,8 +625,8 @@ 		return rawCallback(DriveVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackCanStop sets the callback function.
-func (x *DriveIface) SetCallbackCanStop(cb func(Drive) bool) {
+// OverrideCanStop sets the callback function.
+func (x *DriveIface) OverrideCanStop(cb func(Drive) bool) {
 	if cb == nil {
 		x.xCanStop = 0
 	} else {
@@ -636,8 +636,8 @@ 		})
 	}
 }
 
-// GetCallbackCanStop gets the callback function.
-func (x *DriveIface) GetCallbackCanStop() func(Drive) bool {
+// GetCanStop gets the callback function.
+func (x *DriveIface) GetCanStop() func(Drive) bool {
 	if x.xCanStop == 0 {
 		return nil
 	}
@@ -648,8 +648,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackStop sets the callback function.
-func (x *DriveIface) SetCallbackStop(cb func(Drive, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideStop sets the callback function.
+func (x *DriveIface) OverrideStop(cb func(Drive, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xStop = 0
 	} else {
@@ -659,8 +659,8 @@ 		})
 	}
 }
 
-// GetCallbackStop gets the callback function.
-func (x *DriveIface) GetCallbackStop() func(Drive, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetStop gets the callback function.
+func (x *DriveIface) GetStop() func(Drive, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xStop == 0 {
 		return nil
 	}
@@ -671,8 +671,8 @@ 		rawCallback(DriveVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackStopFinish sets the callback function.
-func (x *DriveIface) SetCallbackStopFinish(cb func(Drive, AsyncResult) bool) {
+// OverrideStopFinish sets the callback function.
+func (x *DriveIface) OverrideStopFinish(cb func(Drive, AsyncResult) bool) {
 	if cb == nil {
 		x.xStopFinish = 0
 	} else {
@@ -682,8 +682,8 @@ 		})
 	}
 }
 
-// GetCallbackStopFinish gets the callback function.
-func (x *DriveIface) GetCallbackStopFinish() func(Drive, AsyncResult) bool {
+// GetStopFinish gets the callback function.
+func (x *DriveIface) GetStopFinish() func(Drive, AsyncResult) bool {
 	if x.xStopFinish == 0 {
 		return nil
 	}
@@ -694,8 +694,8 @@ 		return rawCallback(DriveVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackStopButton sets the callback function.
-func (x *DriveIface) SetCallbackStopButton(cb func(Drive)) {
+// OverrideStopButton sets the callback function.
+func (x *DriveIface) OverrideStopButton(cb func(Drive)) {
 	if cb == nil {
 		x.xStopButton = 0
 	} else {
@@ -705,8 +705,8 @@ 		})
 	}
 }
 
-// GetCallbackStopButton gets the callback function.
-func (x *DriveIface) GetCallbackStopButton() func(Drive) {
+// GetStopButton gets the callback function.
+func (x *DriveIface) GetStopButton() func(Drive) {
 	if x.xStopButton == 0 {
 		return nil
 	}
@@ -717,8 +717,8 @@ 		rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackEjectWithOperation sets the callback function.
-func (x *DriveIface) SetCallbackEjectWithOperation(cb func(Drive, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideEjectWithOperation sets the callback function.
+func (x *DriveIface) OverrideEjectWithOperation(cb func(Drive, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xEjectWithOperation = 0
 	} else {
@@ -728,8 +728,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectWithOperation gets the callback function.
-func (x *DriveIface) GetCallbackEjectWithOperation() func(Drive, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetEjectWithOperation gets the callback function.
+func (x *DriveIface) GetEjectWithOperation() func(Drive, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xEjectWithOperation == 0 {
 		return nil
 	}
@@ -740,8 +740,8 @@ 		rawCallback(DriveVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackEjectWithOperationFinish sets the callback function.
-func (x *DriveIface) SetCallbackEjectWithOperationFinish(cb func(Drive, AsyncResult) bool) {
+// OverrideEjectWithOperationFinish sets the callback function.
+func (x *DriveIface) OverrideEjectWithOperationFinish(cb func(Drive, AsyncResult) bool) {
 	if cb == nil {
 		x.xEjectWithOperationFinish = 0
 	} else {
@@ -751,8 +751,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectWithOperationFinish gets the callback function.
-func (x *DriveIface) GetCallbackEjectWithOperationFinish() func(Drive, AsyncResult) bool {
+// GetEjectWithOperationFinish gets the callback function.
+func (x *DriveIface) GetEjectWithOperationFinish() func(Drive, AsyncResult) bool {
 	if x.xEjectWithOperationFinish == 0 {
 		return nil
 	}
@@ -763,8 +763,8 @@ 		return rawCallback(DriveVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGetSortKey sets the callback function.
-func (x *DriveIface) SetCallbackGetSortKey(cb func(Drive) string) {
+// OverrideGetSortKey sets the callback function.
+func (x *DriveIface) OverrideGetSortKey(cb func(Drive) string) {
 	if cb == nil {
 		x.xGetSortKey = 0
 	} else {
@@ -774,8 +774,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSortKey gets the callback function.
-func (x *DriveIface) GetCallbackGetSortKey() func(Drive) string {
+// GetGetSortKey gets the callback function.
+func (x *DriveIface) GetGetSortKey() func(Drive) string {
 	if x.xGetSortKey == 0 {
 		return nil
 	}
@@ -786,8 +786,8 @@ 		return rawCallback(DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackGetSymbolicIcon sets the callback function.
-func (x *DriveIface) SetCallbackGetSymbolicIcon(cb func(Drive) *IconBase) {
+// OverrideGetSymbolicIcon sets the callback function.
+func (x *DriveIface) OverrideGetSymbolicIcon(cb func(Drive) *IconBase) {
 	if cb == nil {
 		x.xGetSymbolicIcon = 0
 	} else {
@@ -801,8 +801,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSymbolicIcon gets the callback function.
-func (x *DriveIface) GetCallbackGetSymbolicIcon() func(Drive) *IconBase {
+// GetGetSymbolicIcon gets the callback function.
+func (x *DriveIface) GetGetSymbolicIcon() func(Drive) *IconBase {
 	if x.xGetSymbolicIcon == 0 {
 		return nil
 	}
@@ -819,8 +819,8 @@ 		return ret
 	}
 }
 
-// SetCallbackIsRemovable sets the callback function.
-func (x *DriveIface) SetCallbackIsRemovable(cb func(Drive) bool) {
+// OverrideIsRemovable sets the callback function.
+func (x *DriveIface) OverrideIsRemovable(cb func(Drive) bool) {
 	if cb == nil {
 		x.xIsRemovable = 0
 	} else {
@@ -830,8 +830,8 @@ 		})
 	}
 }
 
-// GetCallbackIsRemovable gets the callback function.
-func (x *DriveIface) GetCallbackIsRemovable() func(Drive) bool {
+// GetIsRemovable gets the callback function.
+func (x *DriveIface) GetIsRemovable() func(Drive) bool {
 	if x.xIsRemovable == 0 {
 		return nil
 	}
diff --git a/v4/gio/gdtlsconnection.go b/v4/gio/gdtlsconnection.go
index 137ac4a2492f6bec1d9157cab7c4a8234cf19fa6..379d4b0a111583cdb7ab63fc6da9e326297be82f 100644
--- a/v4/gio/gdtlsconnection.go
+++ b/v4/gio/gdtlsconnection.go
@@ -43,8 +43,8 @@ func (x *DtlsConnectionInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackAcceptCertificate sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackAcceptCertificate(cb func(DtlsConnection, *TlsCertificate, TlsCertificateFlags) bool) {
+// OverrideAcceptCertificate sets the callback function.
+func (x *DtlsConnectionInterface) OverrideAcceptCertificate(cb func(DtlsConnection, *TlsCertificate, TlsCertificateFlags) bool) {
 	if cb == nil {
 		x.xAcceptCertificate = 0
 	} else {
@@ -54,8 +54,8 @@ 		})
 	}
 }
 
-// GetCallbackAcceptCertificate gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackAcceptCertificate() func(DtlsConnection, *TlsCertificate, TlsCertificateFlags) bool {
+// GetAcceptCertificate gets the callback function.
+func (x *DtlsConnectionInterface) GetAcceptCertificate() func(DtlsConnection, *TlsCertificate, TlsCertificateFlags) bool {
 	if x.xAcceptCertificate == 0 {
 		return nil
 	}
@@ -66,8 +66,8 @@ 		return rawCallback(ConnectionVar.GoPointer(), PeerCertVar.GoPointer(), ErrorsVar)
 	}
 }
 
-// SetCallbackHandshake sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackHandshake(cb func(DtlsConnection, *Cancellable) bool) {
+// OverrideHandshake sets the callback function.
+func (x *DtlsConnectionInterface) OverrideHandshake(cb func(DtlsConnection, *Cancellable) bool) {
 	if cb == nil {
 		x.xHandshake = 0
 	} else {
@@ -77,8 +77,8 @@ 		})
 	}
 }
 
-// GetCallbackHandshake gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackHandshake() func(DtlsConnection, *Cancellable) bool {
+// GetHandshake gets the callback function.
+func (x *DtlsConnectionInterface) GetHandshake() func(DtlsConnection, *Cancellable) bool {
 	if x.xHandshake == 0 {
 		return nil
 	}
@@ -89,8 +89,8 @@ 		return rawCallback(ConnVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackHandshakeAsync sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackHandshakeAsync(cb func(DtlsConnection, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideHandshakeAsync sets the callback function.
+func (x *DtlsConnectionInterface) OverrideHandshakeAsync(cb func(DtlsConnection, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xHandshakeAsync = 0
 	} else {
@@ -100,8 +100,8 @@ 		})
 	}
 }
 
-// GetCallbackHandshakeAsync gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackHandshakeAsync() func(DtlsConnection, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetHandshakeAsync gets the callback function.
+func (x *DtlsConnectionInterface) GetHandshakeAsync() func(DtlsConnection, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xHandshakeAsync == 0 {
 		return nil
 	}
@@ -112,8 +112,8 @@ 		rawCallback(ConnVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackHandshakeFinish sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackHandshakeFinish(cb func(DtlsConnection, AsyncResult) bool) {
+// OverrideHandshakeFinish sets the callback function.
+func (x *DtlsConnectionInterface) OverrideHandshakeFinish(cb func(DtlsConnection, AsyncResult) bool) {
 	if cb == nil {
 		x.xHandshakeFinish = 0
 	} else {
@@ -123,8 +123,8 @@ 		})
 	}
 }
 
-// GetCallbackHandshakeFinish gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackHandshakeFinish() func(DtlsConnection, AsyncResult) bool {
+// GetHandshakeFinish gets the callback function.
+func (x *DtlsConnectionInterface) GetHandshakeFinish() func(DtlsConnection, AsyncResult) bool {
 	if x.xHandshakeFinish == 0 {
 		return nil
 	}
@@ -135,8 +135,8 @@ 		return rawCallback(ConnVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackShutdown sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackShutdown(cb func(DtlsConnection, bool, bool, *Cancellable) bool) {
+// OverrideShutdown sets the callback function.
+func (x *DtlsConnectionInterface) OverrideShutdown(cb func(DtlsConnection, bool, bool, *Cancellable) bool) {
 	if cb == nil {
 		x.xShutdown = 0
 	} else {
@@ -146,8 +146,8 @@ 		})
 	}
 }
 
-// GetCallbackShutdown gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackShutdown() func(DtlsConnection, bool, bool, *Cancellable) bool {
+// GetShutdown gets the callback function.
+func (x *DtlsConnectionInterface) GetShutdown() func(DtlsConnection, bool, bool, *Cancellable) bool {
 	if x.xShutdown == 0 {
 		return nil
 	}
@@ -158,8 +158,8 @@ 		return rawCallback(ConnVar.GoPointer(), ShutdownReadVar, ShutdownWriteVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackShutdownAsync sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackShutdownAsync(cb func(DtlsConnection, bool, bool, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideShutdownAsync sets the callback function.
+func (x *DtlsConnectionInterface) OverrideShutdownAsync(cb func(DtlsConnection, bool, bool, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xShutdownAsync = 0
 	} else {
@@ -169,8 +169,8 @@ 		})
 	}
 }
 
-// GetCallbackShutdownAsync gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackShutdownAsync() func(DtlsConnection, bool, bool, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetShutdownAsync gets the callback function.
+func (x *DtlsConnectionInterface) GetShutdownAsync() func(DtlsConnection, bool, bool, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xShutdownAsync == 0 {
 		return nil
 	}
@@ -181,8 +181,8 @@ 		rawCallback(ConnVar.GoPointer(), ShutdownReadVar, ShutdownWriteVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackShutdownFinish sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackShutdownFinish(cb func(DtlsConnection, AsyncResult) bool) {
+// OverrideShutdownFinish sets the callback function.
+func (x *DtlsConnectionInterface) OverrideShutdownFinish(cb func(DtlsConnection, AsyncResult) bool) {
 	if cb == nil {
 		x.xShutdownFinish = 0
 	} else {
@@ -192,8 +192,8 @@ 		})
 	}
 }
 
-// GetCallbackShutdownFinish gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackShutdownFinish() func(DtlsConnection, AsyncResult) bool {
+// GetShutdownFinish gets the callback function.
+func (x *DtlsConnectionInterface) GetShutdownFinish() func(DtlsConnection, AsyncResult) bool {
 	if x.xShutdownFinish == 0 {
 		return nil
 	}
@@ -204,8 +204,8 @@ 		return rawCallback(ConnVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackSetAdvertisedProtocols sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackSetAdvertisedProtocols(cb func(DtlsConnection, []string)) {
+// OverrideSetAdvertisedProtocols sets the callback function.
+func (x *DtlsConnectionInterface) OverrideSetAdvertisedProtocols(cb func(DtlsConnection, []string)) {
 	if cb == nil {
 		x.xSetAdvertisedProtocols = 0
 	} else {
@@ -215,8 +215,8 @@ 		})
 	}
 }
 
-// GetCallbackSetAdvertisedProtocols gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackSetAdvertisedProtocols() func(DtlsConnection, []string) {
+// GetSetAdvertisedProtocols gets the callback function.
+func (x *DtlsConnectionInterface) GetSetAdvertisedProtocols() func(DtlsConnection, []string) {
 	if x.xSetAdvertisedProtocols == 0 {
 		return nil
 	}
@@ -227,8 +227,8 @@ 		rawCallback(ConnVar.GoPointer(), ProtocolsVar)
 	}
 }
 
-// SetCallbackGetNegotiatedProtocol sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackGetNegotiatedProtocol(cb func(DtlsConnection) string) {
+// OverrideGetNegotiatedProtocol sets the callback function.
+func (x *DtlsConnectionInterface) OverrideGetNegotiatedProtocol(cb func(DtlsConnection) string) {
 	if cb == nil {
 		x.xGetNegotiatedProtocol = 0
 	} else {
@@ -238,8 +238,8 @@ 		})
 	}
 }
 
-// GetCallbackGetNegotiatedProtocol gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackGetNegotiatedProtocol() func(DtlsConnection) string {
+// GetGetNegotiatedProtocol gets the callback function.
+func (x *DtlsConnectionInterface) GetGetNegotiatedProtocol() func(DtlsConnection) string {
 	if x.xGetNegotiatedProtocol == 0 {
 		return nil
 	}
@@ -250,8 +250,8 @@ 		return rawCallback(ConnVar.GoPointer())
 	}
 }
 
-// SetCallbackGetBindingData sets the callback function.
-func (x *DtlsConnectionInterface) SetCallbackGetBindingData(cb func(DtlsConnection, TlsChannelBindingType, []byte) bool) {
+// OverrideGetBindingData sets the callback function.
+func (x *DtlsConnectionInterface) OverrideGetBindingData(cb func(DtlsConnection, TlsChannelBindingType, []byte) bool) {
 	if cb == nil {
 		x.xGetBindingData = 0
 	} else {
@@ -261,8 +261,8 @@ 		})
 	}
 }
 
-// GetCallbackGetBindingData gets the callback function.
-func (x *DtlsConnectionInterface) GetCallbackGetBindingData() func(DtlsConnection, TlsChannelBindingType, []byte) bool {
+// GetGetBindingData gets the callback function.
+func (x *DtlsConnectionInterface) GetGetBindingData() func(DtlsConnection, TlsChannelBindingType, []byte) bool {
 	if x.xGetBindingData == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfile.go b/v4/gio/gfile.go
index 149053250b988f850cf2324300941ca269edda16..d057c7afe6e3e2df8c7e9eb492180b3e695c13b8 100644
--- a/v4/gio/gfile.go
+++ b/v4/gio/gfile.go
@@ -229,8 +229,8 @@ func (x *FileIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackDup sets the callback function.
-func (x *FileIface) SetCallbackDup(cb func(File) *FileBase) {
+// OverrideDup sets the callback function.
+func (x *FileIface) OverrideDup(cb func(File) *FileBase) {
 	if cb == nil {
 		x.xDup = 0
 	} else {
@@ -244,8 +244,8 @@ 		})
 	}
 }
 
-// GetCallbackDup gets the callback function.
-func (x *FileIface) GetCallbackDup() func(File) *FileBase {
+// GetDup gets the callback function.
+func (x *FileIface) GetDup() func(File) *FileBase {
 	if x.xDup == 0 {
 		return nil
 	}
@@ -262,8 +262,8 @@ 		return ret
 	}
 }
 
-// SetCallbackHash sets the callback function.
-func (x *FileIface) SetCallbackHash(cb func(File) uint) {
+// OverrideHash sets the callback function.
+func (x *FileIface) OverrideHash(cb func(File) uint) {
 	if cb == nil {
 		x.xHash = 0
 	} else {
@@ -273,8 +273,8 @@ 		})
 	}
 }
 
-// GetCallbackHash gets the callback function.
-func (x *FileIface) GetCallbackHash() func(File) uint {
+// GetHash gets the callback function.
+func (x *FileIface) GetHash() func(File) uint {
 	if x.xHash == 0 {
 		return nil
 	}
@@ -285,8 +285,8 @@ 		return rawCallback(FileVar.GoPointer())
 	}
 }
 
-// SetCallbackEqual sets the callback function.
-func (x *FileIface) SetCallbackEqual(cb func(File, File) bool) {
+// OverrideEqual sets the callback function.
+func (x *FileIface) OverrideEqual(cb func(File, File) bool) {
 	if cb == nil {
 		x.xEqual = 0
 	} else {
@@ -296,8 +296,8 @@ 		})
 	}
 }
 
-// GetCallbackEqual gets the callback function.
-func (x *FileIface) GetCallbackEqual() func(File, File) bool {
+// GetEqual gets the callback function.
+func (x *FileIface) GetEqual() func(File, File) bool {
 	if x.xEqual == 0 {
 		return nil
 	}
@@ -308,8 +308,8 @@ 		return rawCallback(File1Var.GoPointer(), File2Var.GoPointer())
 	}
 }
 
-// SetCallbackIsNative sets the callback function.
-func (x *FileIface) SetCallbackIsNative(cb func(File) bool) {
+// OverrideIsNative sets the callback function.
+func (x *FileIface) OverrideIsNative(cb func(File) bool) {
 	if cb == nil {
 		x.xIsNative = 0
 	} else {
@@ -319,8 +319,8 @@ 		})
 	}
 }
 
-// GetCallbackIsNative gets the callback function.
-func (x *FileIface) GetCallbackIsNative() func(File) bool {
+// GetIsNative gets the callback function.
+func (x *FileIface) GetIsNative() func(File) bool {
 	if x.xIsNative == 0 {
 		return nil
 	}
@@ -331,8 +331,8 @@ 		return rawCallback(FileVar.GoPointer())
 	}
 }
 
-// SetCallbackHasUriScheme sets the callback function.
-func (x *FileIface) SetCallbackHasUriScheme(cb func(File, string) bool) {
+// OverrideHasUriScheme sets the callback function.
+func (x *FileIface) OverrideHasUriScheme(cb func(File, string) bool) {
 	if cb == nil {
 		x.xHasUriScheme = 0
 	} else {
@@ -342,8 +342,8 @@ 		})
 	}
 }
 
-// GetCallbackHasUriScheme gets the callback function.
-func (x *FileIface) GetCallbackHasUriScheme() func(File, string) bool {
+// GetHasUriScheme gets the callback function.
+func (x *FileIface) GetHasUriScheme() func(File, string) bool {
 	if x.xHasUriScheme == 0 {
 		return nil
 	}
@@ -354,8 +354,8 @@ 		return rawCallback(FileVar.GoPointer(), UriSchemeVar)
 	}
 }
 
-// SetCallbackGetUriScheme sets the callback function.
-func (x *FileIface) SetCallbackGetUriScheme(cb func(File) string) {
+// OverrideGetUriScheme sets the callback function.
+func (x *FileIface) OverrideGetUriScheme(cb func(File) string) {
 	if cb == nil {
 		x.xGetUriScheme = 0
 	} else {
@@ -365,8 +365,8 @@ 		})
 	}
 }
 
-// GetCallbackGetUriScheme gets the callback function.
-func (x *FileIface) GetCallbackGetUriScheme() func(File) string {
+// GetGetUriScheme gets the callback function.
+func (x *FileIface) GetGetUriScheme() func(File) string {
 	if x.xGetUriScheme == 0 {
 		return nil
 	}
@@ -377,8 +377,8 @@ 		return rawCallback(FileVar.GoPointer())
 	}
 }
 
-// SetCallbackGetBasename sets the callback function.
-func (x *FileIface) SetCallbackGetBasename(cb func(File) string) {
+// OverrideGetBasename sets the callback function.
+func (x *FileIface) OverrideGetBasename(cb func(File) string) {
 	if cb == nil {
 		x.xGetBasename = 0
 	} else {
@@ -388,8 +388,8 @@ 		})
 	}
 }
 
-// GetCallbackGetBasename gets the callback function.
-func (x *FileIface) GetCallbackGetBasename() func(File) string {
+// GetGetBasename gets the callback function.
+func (x *FileIface) GetGetBasename() func(File) string {
 	if x.xGetBasename == 0 {
 		return nil
 	}
@@ -400,8 +400,8 @@ 		return rawCallback(FileVar.GoPointer())
 	}
 }
 
-// SetCallbackGetPath sets the callback function.
-func (x *FileIface) SetCallbackGetPath(cb func(File) string) {
+// OverrideGetPath sets the callback function.
+func (x *FileIface) OverrideGetPath(cb func(File) string) {
 	if cb == nil {
 		x.xGetPath = 0
 	} else {
@@ -411,8 +411,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPath gets the callback function.
-func (x *FileIface) GetCallbackGetPath() func(File) string {
+// GetGetPath gets the callback function.
+func (x *FileIface) GetGetPath() func(File) string {
 	if x.xGetPath == 0 {
 		return nil
 	}
@@ -423,8 +423,8 @@ 		return rawCallback(FileVar.GoPointer())
 	}
 }
 
-// SetCallbackGetUri sets the callback function.
-func (x *FileIface) SetCallbackGetUri(cb func(File) string) {
+// OverrideGetUri sets the callback function.
+func (x *FileIface) OverrideGetUri(cb func(File) string) {
 	if cb == nil {
 		x.xGetUri = 0
 	} else {
@@ -434,8 +434,8 @@ 		})
 	}
 }
 
-// GetCallbackGetUri gets the callback function.
-func (x *FileIface) GetCallbackGetUri() func(File) string {
+// GetGetUri gets the callback function.
+func (x *FileIface) GetGetUri() func(File) string {
 	if x.xGetUri == 0 {
 		return nil
 	}
@@ -446,8 +446,8 @@ 		return rawCallback(FileVar.GoPointer())
 	}
 }
 
-// SetCallbackGetParseName sets the callback function.
-func (x *FileIface) SetCallbackGetParseName(cb func(File) string) {
+// OverrideGetParseName sets the callback function.
+func (x *FileIface) OverrideGetParseName(cb func(File) string) {
 	if cb == nil {
 		x.xGetParseName = 0
 	} else {
@@ -457,8 +457,8 @@ 		})
 	}
 }
 
-// GetCallbackGetParseName gets the callback function.
-func (x *FileIface) GetCallbackGetParseName() func(File) string {
+// GetGetParseName gets the callback function.
+func (x *FileIface) GetGetParseName() func(File) string {
 	if x.xGetParseName == 0 {
 		return nil
 	}
@@ -469,8 +469,8 @@ 		return rawCallback(FileVar.GoPointer())
 	}
 }
 
-// SetCallbackGetParent sets the callback function.
-func (x *FileIface) SetCallbackGetParent(cb func(File) *FileBase) {
+// OverrideGetParent sets the callback function.
+func (x *FileIface) OverrideGetParent(cb func(File) *FileBase) {
 	if cb == nil {
 		x.xGetParent = 0
 	} else {
@@ -484,8 +484,8 @@ 		})
 	}
 }
 
-// GetCallbackGetParent gets the callback function.
-func (x *FileIface) GetCallbackGetParent() func(File) *FileBase {
+// GetGetParent gets the callback function.
+func (x *FileIface) GetGetParent() func(File) *FileBase {
 	if x.xGetParent == 0 {
 		return nil
 	}
@@ -502,8 +502,8 @@ 		return ret
 	}
 }
 
-// SetCallbackPrefixMatches sets the callback function.
-func (x *FileIface) SetCallbackPrefixMatches(cb func(File, File) bool) {
+// OverridePrefixMatches sets the callback function.
+func (x *FileIface) OverridePrefixMatches(cb func(File, File) bool) {
 	if cb == nil {
 		x.xPrefixMatches = 0
 	} else {
@@ -513,8 +513,8 @@ 		})
 	}
 }
 
-// GetCallbackPrefixMatches gets the callback function.
-func (x *FileIface) GetCallbackPrefixMatches() func(File, File) bool {
+// GetPrefixMatches gets the callback function.
+func (x *FileIface) GetPrefixMatches() func(File, File) bool {
 	if x.xPrefixMatches == 0 {
 		return nil
 	}
@@ -525,8 +525,8 @@ 		return rawCallback(PrefixVar.GoPointer(), FileVar.GoPointer())
 	}
 }
 
-// SetCallbackGetRelativePath sets the callback function.
-func (x *FileIface) SetCallbackGetRelativePath(cb func(File, File) string) {
+// OverrideGetRelativePath sets the callback function.
+func (x *FileIface) OverrideGetRelativePath(cb func(File, File) string) {
 	if cb == nil {
 		x.xGetRelativePath = 0
 	} else {
@@ -536,8 +536,8 @@ 		})
 	}
 }
 
-// GetCallbackGetRelativePath gets the callback function.
-func (x *FileIface) GetCallbackGetRelativePath() func(File, File) string {
+// GetGetRelativePath gets the callback function.
+func (x *FileIface) GetGetRelativePath() func(File, File) string {
 	if x.xGetRelativePath == 0 {
 		return nil
 	}
@@ -548,8 +548,8 @@ 		return rawCallback(ParentVar.GoPointer(), DescendantVar.GoPointer())
 	}
 }
 
-// SetCallbackResolveRelativePath sets the callback function.
-func (x *FileIface) SetCallbackResolveRelativePath(cb func(File, string) *FileBase) {
+// OverrideResolveRelativePath sets the callback function.
+func (x *FileIface) OverrideResolveRelativePath(cb func(File, string) *FileBase) {
 	if cb == nil {
 		x.xResolveRelativePath = 0
 	} else {
@@ -563,8 +563,8 @@ 		})
 	}
 }
 
-// GetCallbackResolveRelativePath gets the callback function.
-func (x *FileIface) GetCallbackResolveRelativePath() func(File, string) *FileBase {
+// GetResolveRelativePath gets the callback function.
+func (x *FileIface) GetResolveRelativePath() func(File, string) *FileBase {
 	if x.xResolveRelativePath == 0 {
 		return nil
 	}
@@ -581,8 +581,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetChildForDisplayName sets the callback function.
-func (x *FileIface) SetCallbackGetChildForDisplayName(cb func(File, string) *FileBase) {
+// OverrideGetChildForDisplayName sets the callback function.
+func (x *FileIface) OverrideGetChildForDisplayName(cb func(File, string) *FileBase) {
 	if cb == nil {
 		x.xGetChildForDisplayName = 0
 	} else {
@@ -596,8 +596,8 @@ 		})
 	}
 }
 
-// GetCallbackGetChildForDisplayName gets the callback function.
-func (x *FileIface) GetCallbackGetChildForDisplayName() func(File, string) *FileBase {
+// GetGetChildForDisplayName gets the callback function.
+func (x *FileIface) GetGetChildForDisplayName() func(File, string) *FileBase {
 	if x.xGetChildForDisplayName == 0 {
 		return nil
 	}
@@ -614,8 +614,8 @@ 		return ret
 	}
 }
 
-// SetCallbackEnumerateChildren sets the callback function.
-func (x *FileIface) SetCallbackEnumerateChildren(cb func(File, string, FileQueryInfoFlags, *Cancellable) *FileEnumerator) {
+// OverrideEnumerateChildren sets the callback function.
+func (x *FileIface) OverrideEnumerateChildren(cb func(File, string, FileQueryInfoFlags, *Cancellable) *FileEnumerator) {
 	if cb == nil {
 		x.xEnumerateChildren = 0
 	} else {
@@ -629,8 +629,8 @@ 		})
 	}
 }
 
-// GetCallbackEnumerateChildren gets the callback function.
-func (x *FileIface) GetCallbackEnumerateChildren() func(File, string, FileQueryInfoFlags, *Cancellable) *FileEnumerator {
+// GetEnumerateChildren gets the callback function.
+func (x *FileIface) GetEnumerateChildren() func(File, string, FileQueryInfoFlags, *Cancellable) *FileEnumerator {
 	if x.xEnumerateChildren == 0 {
 		return nil
 	}
@@ -647,8 +647,8 @@ 		return ret
 	}
 }
 
-// SetCallbackEnumerateChildrenAsync sets the callback function.
-func (x *FileIface) SetCallbackEnumerateChildrenAsync(cb func(File, string, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideEnumerateChildrenAsync sets the callback function.
+func (x *FileIface) OverrideEnumerateChildrenAsync(cb func(File, string, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xEnumerateChildrenAsync = 0
 	} else {
@@ -658,8 +658,8 @@ 		})
 	}
 }
 
-// GetCallbackEnumerateChildrenAsync gets the callback function.
-func (x *FileIface) GetCallbackEnumerateChildrenAsync() func(File, string, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetEnumerateChildrenAsync gets the callback function.
+func (x *FileIface) GetEnumerateChildrenAsync() func(File, string, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xEnumerateChildrenAsync == 0 {
 		return nil
 	}
@@ -670,8 +670,8 @@ 		rawCallback(FileVar.GoPointer(), AttributesVar, FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackEnumerateChildrenFinish sets the callback function.
-func (x *FileIface) SetCallbackEnumerateChildrenFinish(cb func(File, AsyncResult) *FileEnumerator) {
+// OverrideEnumerateChildrenFinish sets the callback function.
+func (x *FileIface) OverrideEnumerateChildrenFinish(cb func(File, AsyncResult) *FileEnumerator) {
 	if cb == nil {
 		x.xEnumerateChildrenFinish = 0
 	} else {
@@ -685,8 +685,8 @@ 		})
 	}
 }
 
-// GetCallbackEnumerateChildrenFinish gets the callback function.
-func (x *FileIface) GetCallbackEnumerateChildrenFinish() func(File, AsyncResult) *FileEnumerator {
+// GetEnumerateChildrenFinish gets the callback function.
+func (x *FileIface) GetEnumerateChildrenFinish() func(File, AsyncResult) *FileEnumerator {
 	if x.xEnumerateChildrenFinish == 0 {
 		return nil
 	}
@@ -703,8 +703,8 @@ 		return ret
 	}
 }
 
-// SetCallbackQueryInfo sets the callback function.
-func (x *FileIface) SetCallbackQueryInfo(cb func(File, string, FileQueryInfoFlags, *Cancellable) *FileInfo) {
+// OverrideQueryInfo sets the callback function.
+func (x *FileIface) OverrideQueryInfo(cb func(File, string, FileQueryInfoFlags, *Cancellable) *FileInfo) {
 	if cb == nil {
 		x.xQueryInfo = 0
 	} else {
@@ -718,8 +718,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfo gets the callback function.
-func (x *FileIface) GetCallbackQueryInfo() func(File, string, FileQueryInfoFlags, *Cancellable) *FileInfo {
+// GetQueryInfo gets the callback function.
+func (x *FileIface) GetQueryInfo() func(File, string, FileQueryInfoFlags, *Cancellable) *FileInfo {
 	if x.xQueryInfo == 0 {
 		return nil
 	}
@@ -736,8 +736,8 @@ 		return ret
 	}
 }
 
-// SetCallbackQueryInfoAsync sets the callback function.
-func (x *FileIface) SetCallbackQueryInfoAsync(cb func(File, string, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideQueryInfoAsync sets the callback function.
+func (x *FileIface) OverrideQueryInfoAsync(cb func(File, string, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xQueryInfoAsync = 0
 	} else {
@@ -747,8 +747,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfoAsync gets the callback function.
-func (x *FileIface) GetCallbackQueryInfoAsync() func(File, string, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetQueryInfoAsync gets the callback function.
+func (x *FileIface) GetQueryInfoAsync() func(File, string, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xQueryInfoAsync == 0 {
 		return nil
 	}
@@ -759,8 +759,8 @@ 		rawCallback(FileVar.GoPointer(), AttributesVar, FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackQueryInfoFinish sets the callback function.
-func (x *FileIface) SetCallbackQueryInfoFinish(cb func(File, AsyncResult) *FileInfo) {
+// OverrideQueryInfoFinish sets the callback function.
+func (x *FileIface) OverrideQueryInfoFinish(cb func(File, AsyncResult) *FileInfo) {
 	if cb == nil {
 		x.xQueryInfoFinish = 0
 	} else {
@@ -774,8 +774,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfoFinish gets the callback function.
-func (x *FileIface) GetCallbackQueryInfoFinish() func(File, AsyncResult) *FileInfo {
+// GetQueryInfoFinish gets the callback function.
+func (x *FileIface) GetQueryInfoFinish() func(File, AsyncResult) *FileInfo {
 	if x.xQueryInfoFinish == 0 {
 		return nil
 	}
@@ -792,8 +792,8 @@ 		return ret
 	}
 }
 
-// SetCallbackQueryFilesystemInfo sets the callback function.
-func (x *FileIface) SetCallbackQueryFilesystemInfo(cb func(File, string, *Cancellable) *FileInfo) {
+// OverrideQueryFilesystemInfo sets the callback function.
+func (x *FileIface) OverrideQueryFilesystemInfo(cb func(File, string, *Cancellable) *FileInfo) {
 	if cb == nil {
 		x.xQueryFilesystemInfo = 0
 	} else {
@@ -807,8 +807,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryFilesystemInfo gets the callback function.
-func (x *FileIface) GetCallbackQueryFilesystemInfo() func(File, string, *Cancellable) *FileInfo {
+// GetQueryFilesystemInfo gets the callback function.
+func (x *FileIface) GetQueryFilesystemInfo() func(File, string, *Cancellable) *FileInfo {
 	if x.xQueryFilesystemInfo == 0 {
 		return nil
 	}
@@ -825,8 +825,8 @@ 		return ret
 	}
 }
 
-// SetCallbackQueryFilesystemInfoAsync sets the callback function.
-func (x *FileIface) SetCallbackQueryFilesystemInfoAsync(cb func(File, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideQueryFilesystemInfoAsync sets the callback function.
+func (x *FileIface) OverrideQueryFilesystemInfoAsync(cb func(File, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xQueryFilesystemInfoAsync = 0
 	} else {
@@ -836,8 +836,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryFilesystemInfoAsync gets the callback function.
-func (x *FileIface) GetCallbackQueryFilesystemInfoAsync() func(File, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetQueryFilesystemInfoAsync gets the callback function.
+func (x *FileIface) GetQueryFilesystemInfoAsync() func(File, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xQueryFilesystemInfoAsync == 0 {
 		return nil
 	}
@@ -848,8 +848,8 @@ 		rawCallback(FileVar.GoPointer(), AttributesVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackQueryFilesystemInfoFinish sets the callback function.
-func (x *FileIface) SetCallbackQueryFilesystemInfoFinish(cb func(File, AsyncResult) *FileInfo) {
+// OverrideQueryFilesystemInfoFinish sets the callback function.
+func (x *FileIface) OverrideQueryFilesystemInfoFinish(cb func(File, AsyncResult) *FileInfo) {
 	if cb == nil {
 		x.xQueryFilesystemInfoFinish = 0
 	} else {
@@ -863,8 +863,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryFilesystemInfoFinish gets the callback function.
-func (x *FileIface) GetCallbackQueryFilesystemInfoFinish() func(File, AsyncResult) *FileInfo {
+// GetQueryFilesystemInfoFinish gets the callback function.
+func (x *FileIface) GetQueryFilesystemInfoFinish() func(File, AsyncResult) *FileInfo {
 	if x.xQueryFilesystemInfoFinish == 0 {
 		return nil
 	}
@@ -881,8 +881,8 @@ 		return ret
 	}
 }
 
-// SetCallbackFindEnclosingMount sets the callback function.
-func (x *FileIface) SetCallbackFindEnclosingMount(cb func(File, *Cancellable) *MountBase) {
+// OverrideFindEnclosingMount sets the callback function.
+func (x *FileIface) OverrideFindEnclosingMount(cb func(File, *Cancellable) *MountBase) {
 	if cb == nil {
 		x.xFindEnclosingMount = 0
 	} else {
@@ -896,8 +896,8 @@ 		})
 	}
 }
 
-// GetCallbackFindEnclosingMount gets the callback function.
-func (x *FileIface) GetCallbackFindEnclosingMount() func(File, *Cancellable) *MountBase {
+// GetFindEnclosingMount gets the callback function.
+func (x *FileIface) GetFindEnclosingMount() func(File, *Cancellable) *MountBase {
 	if x.xFindEnclosingMount == 0 {
 		return nil
 	}
@@ -914,8 +914,8 @@ 		return ret
 	}
 }
 
-// SetCallbackFindEnclosingMountAsync sets the callback function.
-func (x *FileIface) SetCallbackFindEnclosingMountAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideFindEnclosingMountAsync sets the callback function.
+func (x *FileIface) OverrideFindEnclosingMountAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xFindEnclosingMountAsync = 0
 	} else {
@@ -925,8 +925,8 @@ 		})
 	}
 }
 
-// GetCallbackFindEnclosingMountAsync gets the callback function.
-func (x *FileIface) GetCallbackFindEnclosingMountAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetFindEnclosingMountAsync gets the callback function.
+func (x *FileIface) GetFindEnclosingMountAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xFindEnclosingMountAsync == 0 {
 		return nil
 	}
@@ -937,8 +937,8 @@ 		rawCallback(FileVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackFindEnclosingMountFinish sets the callback function.
-func (x *FileIface) SetCallbackFindEnclosingMountFinish(cb func(File, AsyncResult) *MountBase) {
+// OverrideFindEnclosingMountFinish sets the callback function.
+func (x *FileIface) OverrideFindEnclosingMountFinish(cb func(File, AsyncResult) *MountBase) {
 	if cb == nil {
 		x.xFindEnclosingMountFinish = 0
 	} else {
@@ -952,8 +952,8 @@ 		})
 	}
 }
 
-// GetCallbackFindEnclosingMountFinish gets the callback function.
-func (x *FileIface) GetCallbackFindEnclosingMountFinish() func(File, AsyncResult) *MountBase {
+// GetFindEnclosingMountFinish gets the callback function.
+func (x *FileIface) GetFindEnclosingMountFinish() func(File, AsyncResult) *MountBase {
 	if x.xFindEnclosingMountFinish == 0 {
 		return nil
 	}
@@ -970,8 +970,8 @@ 		return ret
 	}
 }
 
-// SetCallbackSetDisplayName sets the callback function.
-func (x *FileIface) SetCallbackSetDisplayName(cb func(File, string, *Cancellable) *FileBase) {
+// OverrideSetDisplayName sets the callback function.
+func (x *FileIface) OverrideSetDisplayName(cb func(File, string, *Cancellable) *FileBase) {
 	if cb == nil {
 		x.xSetDisplayName = 0
 	} else {
@@ -985,8 +985,8 @@ 		})
 	}
 }
 
-// GetCallbackSetDisplayName gets the callback function.
-func (x *FileIface) GetCallbackSetDisplayName() func(File, string, *Cancellable) *FileBase {
+// GetSetDisplayName gets the callback function.
+func (x *FileIface) GetSetDisplayName() func(File, string, *Cancellable) *FileBase {
 	if x.xSetDisplayName == 0 {
 		return nil
 	}
@@ -1003,8 +1003,8 @@ 		return ret
 	}
 }
 
-// SetCallbackSetDisplayNameAsync sets the callback function.
-func (x *FileIface) SetCallbackSetDisplayNameAsync(cb func(File, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideSetDisplayNameAsync sets the callback function.
+func (x *FileIface) OverrideSetDisplayNameAsync(cb func(File, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xSetDisplayNameAsync = 0
 	} else {
@@ -1014,8 +1014,8 @@ 		})
 	}
 }
 
-// GetCallbackSetDisplayNameAsync gets the callback function.
-func (x *FileIface) GetCallbackSetDisplayNameAsync() func(File, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetSetDisplayNameAsync gets the callback function.
+func (x *FileIface) GetSetDisplayNameAsync() func(File, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xSetDisplayNameAsync == 0 {
 		return nil
 	}
@@ -1026,8 +1026,8 @@ 		rawCallback(FileVar.GoPointer(), DisplayNameVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackSetDisplayNameFinish sets the callback function.
-func (x *FileIface) SetCallbackSetDisplayNameFinish(cb func(File, AsyncResult) *FileBase) {
+// OverrideSetDisplayNameFinish sets the callback function.
+func (x *FileIface) OverrideSetDisplayNameFinish(cb func(File, AsyncResult) *FileBase) {
 	if cb == nil {
 		x.xSetDisplayNameFinish = 0
 	} else {
@@ -1041,8 +1041,8 @@ 		})
 	}
 }
 
-// GetCallbackSetDisplayNameFinish gets the callback function.
-func (x *FileIface) GetCallbackSetDisplayNameFinish() func(File, AsyncResult) *FileBase {
+// GetSetDisplayNameFinish gets the callback function.
+func (x *FileIface) GetSetDisplayNameFinish() func(File, AsyncResult) *FileBase {
 	if x.xSetDisplayNameFinish == 0 {
 		return nil
 	}
@@ -1059,8 +1059,8 @@ 		return ret
 	}
 }
 
-// SetCallbackQuerySettableAttributes sets the callback function.
-func (x *FileIface) SetCallbackQuerySettableAttributes(cb func(File, *Cancellable) *FileAttributeInfoList) {
+// OverrideQuerySettableAttributes sets the callback function.
+func (x *FileIface) OverrideQuerySettableAttributes(cb func(File, *Cancellable) *FileAttributeInfoList) {
 	if cb == nil {
 		x.xQuerySettableAttributes = 0
 	} else {
@@ -1070,8 +1070,8 @@ 		})
 	}
 }
 
-// GetCallbackQuerySettableAttributes gets the callback function.
-func (x *FileIface) GetCallbackQuerySettableAttributes() func(File, *Cancellable) *FileAttributeInfoList {
+// GetQuerySettableAttributes gets the callback function.
+func (x *FileIface) GetQuerySettableAttributes() func(File, *Cancellable) *FileAttributeInfoList {
 	if x.xQuerySettableAttributes == 0 {
 		return nil
 	}
@@ -1082,8 +1082,8 @@ 		return rawCallback(FileVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackQuerySettableAttributesAsync sets the callback function.
-func (x *FileIface) SetCallbackQuerySettableAttributesAsync(cb func()) {
+// OverrideQuerySettableAttributesAsync sets the callback function.
+func (x *FileIface) OverrideQuerySettableAttributesAsync(cb func()) {
 	if cb == nil {
 		x.xQuerySettableAttributesAsync = 0
 	} else {
@@ -1093,8 +1093,8 @@ 		})
 	}
 }
 
-// GetCallbackQuerySettableAttributesAsync gets the callback function.
-func (x *FileIface) GetCallbackQuerySettableAttributesAsync() func() {
+// GetQuerySettableAttributesAsync gets the callback function.
+func (x *FileIface) GetQuerySettableAttributesAsync() func() {
 	if x.xQuerySettableAttributesAsync == 0 {
 		return nil
 	}
@@ -1105,8 +1105,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackQuerySettableAttributesFinish sets the callback function.
-func (x *FileIface) SetCallbackQuerySettableAttributesFinish(cb func()) {
+// OverrideQuerySettableAttributesFinish sets the callback function.
+func (x *FileIface) OverrideQuerySettableAttributesFinish(cb func()) {
 	if cb == nil {
 		x.xQuerySettableAttributesFinish = 0
 	} else {
@@ -1116,8 +1116,8 @@ 		})
 	}
 }
 
-// GetCallbackQuerySettableAttributesFinish gets the callback function.
-func (x *FileIface) GetCallbackQuerySettableAttributesFinish() func() {
+// GetQuerySettableAttributesFinish gets the callback function.
+func (x *FileIface) GetQuerySettableAttributesFinish() func() {
 	if x.xQuerySettableAttributesFinish == 0 {
 		return nil
 	}
@@ -1128,8 +1128,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackQueryWritableNamespaces sets the callback function.
-func (x *FileIface) SetCallbackQueryWritableNamespaces(cb func(File, *Cancellable) *FileAttributeInfoList) {
+// OverrideQueryWritableNamespaces sets the callback function.
+func (x *FileIface) OverrideQueryWritableNamespaces(cb func(File, *Cancellable) *FileAttributeInfoList) {
 	if cb == nil {
 		x.xQueryWritableNamespaces = 0
 	} else {
@@ -1139,8 +1139,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryWritableNamespaces gets the callback function.
-func (x *FileIface) GetCallbackQueryWritableNamespaces() func(File, *Cancellable) *FileAttributeInfoList {
+// GetQueryWritableNamespaces gets the callback function.
+func (x *FileIface) GetQueryWritableNamespaces() func(File, *Cancellable) *FileAttributeInfoList {
 	if x.xQueryWritableNamespaces == 0 {
 		return nil
 	}
@@ -1151,8 +1151,8 @@ 		return rawCallback(FileVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackQueryWritableNamespacesAsync sets the callback function.
-func (x *FileIface) SetCallbackQueryWritableNamespacesAsync(cb func()) {
+// OverrideQueryWritableNamespacesAsync sets the callback function.
+func (x *FileIface) OverrideQueryWritableNamespacesAsync(cb func()) {
 	if cb == nil {
 		x.xQueryWritableNamespacesAsync = 0
 	} else {
@@ -1162,8 +1162,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryWritableNamespacesAsync gets the callback function.
-func (x *FileIface) GetCallbackQueryWritableNamespacesAsync() func() {
+// GetQueryWritableNamespacesAsync gets the callback function.
+func (x *FileIface) GetQueryWritableNamespacesAsync() func() {
 	if x.xQueryWritableNamespacesAsync == 0 {
 		return nil
 	}
@@ -1174,8 +1174,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackQueryWritableNamespacesFinish sets the callback function.
-func (x *FileIface) SetCallbackQueryWritableNamespacesFinish(cb func()) {
+// OverrideQueryWritableNamespacesFinish sets the callback function.
+func (x *FileIface) OverrideQueryWritableNamespacesFinish(cb func()) {
 	if cb == nil {
 		x.xQueryWritableNamespacesFinish = 0
 	} else {
@@ -1185,8 +1185,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryWritableNamespacesFinish gets the callback function.
-func (x *FileIface) GetCallbackQueryWritableNamespacesFinish() func() {
+// GetQueryWritableNamespacesFinish gets the callback function.
+func (x *FileIface) GetQueryWritableNamespacesFinish() func() {
 	if x.xQueryWritableNamespacesFinish == 0 {
 		return nil
 	}
@@ -1197,8 +1197,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackSetAttribute sets the callback function.
-func (x *FileIface) SetCallbackSetAttribute(cb func(File, string, FileAttributeType, uintptr, FileQueryInfoFlags, *Cancellable) bool) {
+// OverrideSetAttribute sets the callback function.
+func (x *FileIface) OverrideSetAttribute(cb func(File, string, FileAttributeType, uintptr, FileQueryInfoFlags, *Cancellable) bool) {
 	if cb == nil {
 		x.xSetAttribute = 0
 	} else {
@@ -1208,8 +1208,8 @@ 		})
 	}
 }
 
-// GetCallbackSetAttribute gets the callback function.
-func (x *FileIface) GetCallbackSetAttribute() func(File, string, FileAttributeType, uintptr, FileQueryInfoFlags, *Cancellable) bool {
+// GetSetAttribute gets the callback function.
+func (x *FileIface) GetSetAttribute() func(File, string, FileAttributeType, uintptr, FileQueryInfoFlags, *Cancellable) bool {
 	if x.xSetAttribute == 0 {
 		return nil
 	}
@@ -1220,8 +1220,8 @@ 		return rawCallback(FileVar.GoPointer(), AttributeVar, TypeVar, ValuePVar, FlagsVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackSetAttributesFromInfo sets the callback function.
-func (x *FileIface) SetCallbackSetAttributesFromInfo(cb func(File, *FileInfo, FileQueryInfoFlags, *Cancellable) bool) {
+// OverrideSetAttributesFromInfo sets the callback function.
+func (x *FileIface) OverrideSetAttributesFromInfo(cb func(File, *FileInfo, FileQueryInfoFlags, *Cancellable) bool) {
 	if cb == nil {
 		x.xSetAttributesFromInfo = 0
 	} else {
@@ -1231,8 +1231,8 @@ 		})
 	}
 }
 
-// GetCallbackSetAttributesFromInfo gets the callback function.
-func (x *FileIface) GetCallbackSetAttributesFromInfo() func(File, *FileInfo, FileQueryInfoFlags, *Cancellable) bool {
+// GetSetAttributesFromInfo gets the callback function.
+func (x *FileIface) GetSetAttributesFromInfo() func(File, *FileInfo, FileQueryInfoFlags, *Cancellable) bool {
 	if x.xSetAttributesFromInfo == 0 {
 		return nil
 	}
@@ -1243,8 +1243,8 @@ 		return rawCallback(FileVar.GoPointer(), InfoVar.GoPointer(), FlagsVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackSetAttributesAsync sets the callback function.
-func (x *FileIface) SetCallbackSetAttributesAsync(cb func(File, *FileInfo, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideSetAttributesAsync sets the callback function.
+func (x *FileIface) OverrideSetAttributesAsync(cb func(File, *FileInfo, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xSetAttributesAsync = 0
 	} else {
@@ -1254,8 +1254,8 @@ 		})
 	}
 }
 
-// GetCallbackSetAttributesAsync gets the callback function.
-func (x *FileIface) GetCallbackSetAttributesAsync() func(File, *FileInfo, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetSetAttributesAsync gets the callback function.
+func (x *FileIface) GetSetAttributesAsync() func(File, *FileInfo, FileQueryInfoFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xSetAttributesAsync == 0 {
 		return nil
 	}
@@ -1266,8 +1266,8 @@ 		rawCallback(FileVar.GoPointer(), InfoVar.GoPointer(), FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackSetAttributesFinish sets the callback function.
-func (x *FileIface) SetCallbackSetAttributesFinish(cb func(File, AsyncResult, **FileInfo) bool) {
+// OverrideSetAttributesFinish sets the callback function.
+func (x *FileIface) OverrideSetAttributesFinish(cb func(File, AsyncResult, **FileInfo) bool) {
 	if cb == nil {
 		x.xSetAttributesFinish = 0
 	} else {
@@ -1277,8 +1277,8 @@ 		})
 	}
 }
 
-// GetCallbackSetAttributesFinish gets the callback function.
-func (x *FileIface) GetCallbackSetAttributesFinish() func(File, AsyncResult, **FileInfo) bool {
+// GetSetAttributesFinish gets the callback function.
+func (x *FileIface) GetSetAttributesFinish() func(File, AsyncResult, **FileInfo) bool {
 	if x.xSetAttributesFinish == 0 {
 		return nil
 	}
@@ -1289,8 +1289,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer(), *gobject.ConvertPtr(InfoVar))
 	}
 }
 
-// SetCallbackReadFn sets the callback function.
-func (x *FileIface) SetCallbackReadFn(cb func(File, *Cancellable) *FileInputStream) {
+// OverrideReadFn sets the callback function.
+func (x *FileIface) OverrideReadFn(cb func(File, *Cancellable) *FileInputStream) {
 	if cb == nil {
 		x.xReadFn = 0
 	} else {
@@ -1304,8 +1304,8 @@ 		})
 	}
 }
 
-// GetCallbackReadFn gets the callback function.
-func (x *FileIface) GetCallbackReadFn() func(File, *Cancellable) *FileInputStream {
+// GetReadFn gets the callback function.
+func (x *FileIface) GetReadFn() func(File, *Cancellable) *FileInputStream {
 	if x.xReadFn == 0 {
 		return nil
 	}
@@ -1322,8 +1322,8 @@ 		return ret
 	}
 }
 
-// SetCallbackReadAsync sets the callback function.
-func (x *FileIface) SetCallbackReadAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideReadAsync sets the callback function.
+func (x *FileIface) OverrideReadAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xReadAsync = 0
 	} else {
@@ -1333,8 +1333,8 @@ 		})
 	}
 }
 
-// GetCallbackReadAsync gets the callback function.
-func (x *FileIface) GetCallbackReadAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetReadAsync gets the callback function.
+func (x *FileIface) GetReadAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xReadAsync == 0 {
 		return nil
 	}
@@ -1345,8 +1345,8 @@ 		rawCallback(FileVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackReadFinish sets the callback function.
-func (x *FileIface) SetCallbackReadFinish(cb func(File, AsyncResult) *FileInputStream) {
+// OverrideReadFinish sets the callback function.
+func (x *FileIface) OverrideReadFinish(cb func(File, AsyncResult) *FileInputStream) {
 	if cb == nil {
 		x.xReadFinish = 0
 	} else {
@@ -1360,8 +1360,8 @@ 		})
 	}
 }
 
-// GetCallbackReadFinish gets the callback function.
-func (x *FileIface) GetCallbackReadFinish() func(File, AsyncResult) *FileInputStream {
+// GetReadFinish gets the callback function.
+func (x *FileIface) GetReadFinish() func(File, AsyncResult) *FileInputStream {
 	if x.xReadFinish == 0 {
 		return nil
 	}
@@ -1378,8 +1378,8 @@ 		return ret
 	}
 }
 
-// SetCallbackAppendTo sets the callback function.
-func (x *FileIface) SetCallbackAppendTo(cb func(File, FileCreateFlags, *Cancellable) *FileOutputStream) {
+// OverrideAppendTo sets the callback function.
+func (x *FileIface) OverrideAppendTo(cb func(File, FileCreateFlags, *Cancellable) *FileOutputStream) {
 	if cb == nil {
 		x.xAppendTo = 0
 	} else {
@@ -1393,8 +1393,8 @@ 		})
 	}
 }
 
-// GetCallbackAppendTo gets the callback function.
-func (x *FileIface) GetCallbackAppendTo() func(File, FileCreateFlags, *Cancellable) *FileOutputStream {
+// GetAppendTo gets the callback function.
+func (x *FileIface) GetAppendTo() func(File, FileCreateFlags, *Cancellable) *FileOutputStream {
 	if x.xAppendTo == 0 {
 		return nil
 	}
@@ -1411,8 +1411,8 @@ 		return ret
 	}
 }
 
-// SetCallbackAppendToAsync sets the callback function.
-func (x *FileIface) SetCallbackAppendToAsync(cb func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideAppendToAsync sets the callback function.
+func (x *FileIface) OverrideAppendToAsync(cb func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xAppendToAsync = 0
 	} else {
@@ -1422,8 +1422,8 @@ 		})
 	}
 }
 
-// GetCallbackAppendToAsync gets the callback function.
-func (x *FileIface) GetCallbackAppendToAsync() func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetAppendToAsync gets the callback function.
+func (x *FileIface) GetAppendToAsync() func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xAppendToAsync == 0 {
 		return nil
 	}
@@ -1434,8 +1434,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackAppendToFinish sets the callback function.
-func (x *FileIface) SetCallbackAppendToFinish(cb func(File, AsyncResult) *FileOutputStream) {
+// OverrideAppendToFinish sets the callback function.
+func (x *FileIface) OverrideAppendToFinish(cb func(File, AsyncResult) *FileOutputStream) {
 	if cb == nil {
 		x.xAppendToFinish = 0
 	} else {
@@ -1449,8 +1449,8 @@ 		})
 	}
 }
 
-// GetCallbackAppendToFinish gets the callback function.
-func (x *FileIface) GetCallbackAppendToFinish() func(File, AsyncResult) *FileOutputStream {
+// GetAppendToFinish gets the callback function.
+func (x *FileIface) GetAppendToFinish() func(File, AsyncResult) *FileOutputStream {
 	if x.xAppendToFinish == 0 {
 		return nil
 	}
@@ -1467,8 +1467,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCreate sets the callback function.
-func (x *FileIface) SetCallbackCreate(cb func(File, FileCreateFlags, *Cancellable) *FileOutputStream) {
+// OverrideCreate sets the callback function.
+func (x *FileIface) OverrideCreate(cb func(File, FileCreateFlags, *Cancellable) *FileOutputStream) {
 	if cb == nil {
 		x.xCreate = 0
 	} else {
@@ -1482,8 +1482,8 @@ 		})
 	}
 }
 
-// GetCallbackCreate gets the callback function.
-func (x *FileIface) GetCallbackCreate() func(File, FileCreateFlags, *Cancellable) *FileOutputStream {
+// GetCreate gets the callback function.
+func (x *FileIface) GetCreate() func(File, FileCreateFlags, *Cancellable) *FileOutputStream {
 	if x.xCreate == 0 {
 		return nil
 	}
@@ -1500,8 +1500,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCreateAsync sets the callback function.
-func (x *FileIface) SetCallbackCreateAsync(cb func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideCreateAsync sets the callback function.
+func (x *FileIface) OverrideCreateAsync(cb func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xCreateAsync = 0
 	} else {
@@ -1511,8 +1511,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateAsync gets the callback function.
-func (x *FileIface) GetCallbackCreateAsync() func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetCreateAsync gets the callback function.
+func (x *FileIface) GetCreateAsync() func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xCreateAsync == 0 {
 		return nil
 	}
@@ -1523,8 +1523,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackCreateFinish sets the callback function.
-func (x *FileIface) SetCallbackCreateFinish(cb func(File, AsyncResult) *FileOutputStream) {
+// OverrideCreateFinish sets the callback function.
+func (x *FileIface) OverrideCreateFinish(cb func(File, AsyncResult) *FileOutputStream) {
 	if cb == nil {
 		x.xCreateFinish = 0
 	} else {
@@ -1538,8 +1538,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateFinish gets the callback function.
-func (x *FileIface) GetCallbackCreateFinish() func(File, AsyncResult) *FileOutputStream {
+// GetCreateFinish gets the callback function.
+func (x *FileIface) GetCreateFinish() func(File, AsyncResult) *FileOutputStream {
 	if x.xCreateFinish == 0 {
 		return nil
 	}
@@ -1556,8 +1556,8 @@ 		return ret
 	}
 }
 
-// SetCallbackReplace sets the callback function.
-func (x *FileIface) SetCallbackReplace(cb func(File, string, bool, FileCreateFlags, *Cancellable) *FileOutputStream) {
+// OverrideReplace sets the callback function.
+func (x *FileIface) OverrideReplace(cb func(File, string, bool, FileCreateFlags, *Cancellable) *FileOutputStream) {
 	if cb == nil {
 		x.xReplace = 0
 	} else {
@@ -1571,8 +1571,8 @@ 		})
 	}
 }
 
-// GetCallbackReplace gets the callback function.
-func (x *FileIface) GetCallbackReplace() func(File, string, bool, FileCreateFlags, *Cancellable) *FileOutputStream {
+// GetReplace gets the callback function.
+func (x *FileIface) GetReplace() func(File, string, bool, FileCreateFlags, *Cancellable) *FileOutputStream {
 	if x.xReplace == 0 {
 		return nil
 	}
@@ -1589,8 +1589,8 @@ 		return ret
 	}
 }
 
-// SetCallbackReplaceAsync sets the callback function.
-func (x *FileIface) SetCallbackReplaceAsync(cb func(File, string, bool, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideReplaceAsync sets the callback function.
+func (x *FileIface) OverrideReplaceAsync(cb func(File, string, bool, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xReplaceAsync = 0
 	} else {
@@ -1600,8 +1600,8 @@ 		})
 	}
 }
 
-// GetCallbackReplaceAsync gets the callback function.
-func (x *FileIface) GetCallbackReplaceAsync() func(File, string, bool, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetReplaceAsync gets the callback function.
+func (x *FileIface) GetReplaceAsync() func(File, string, bool, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xReplaceAsync == 0 {
 		return nil
 	}
@@ -1612,8 +1612,8 @@ 		rawCallback(FileVar.GoPointer(), EtagVar, MakeBackupVar, FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackReplaceFinish sets the callback function.
-func (x *FileIface) SetCallbackReplaceFinish(cb func(File, AsyncResult) *FileOutputStream) {
+// OverrideReplaceFinish sets the callback function.
+func (x *FileIface) OverrideReplaceFinish(cb func(File, AsyncResult) *FileOutputStream) {
 	if cb == nil {
 		x.xReplaceFinish = 0
 	} else {
@@ -1627,8 +1627,8 @@ 		})
 	}
 }
 
-// GetCallbackReplaceFinish gets the callback function.
-func (x *FileIface) GetCallbackReplaceFinish() func(File, AsyncResult) *FileOutputStream {
+// GetReplaceFinish gets the callback function.
+func (x *FileIface) GetReplaceFinish() func(File, AsyncResult) *FileOutputStream {
 	if x.xReplaceFinish == 0 {
 		return nil
 	}
@@ -1645,8 +1645,8 @@ 		return ret
 	}
 }
 
-// SetCallbackDeleteFile sets the callback function.
-func (x *FileIface) SetCallbackDeleteFile(cb func(File, *Cancellable) bool) {
+// OverrideDeleteFile sets the callback function.
+func (x *FileIface) OverrideDeleteFile(cb func(File, *Cancellable) bool) {
 	if cb == nil {
 		x.xDeleteFile = 0
 	} else {
@@ -1656,8 +1656,8 @@ 		})
 	}
 }
 
-// GetCallbackDeleteFile gets the callback function.
-func (x *FileIface) GetCallbackDeleteFile() func(File, *Cancellable) bool {
+// GetDeleteFile gets the callback function.
+func (x *FileIface) GetDeleteFile() func(File, *Cancellable) bool {
 	if x.xDeleteFile == 0 {
 		return nil
 	}
@@ -1668,8 +1668,8 @@ 		return rawCallback(FileVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackDeleteFileAsync sets the callback function.
-func (x *FileIface) SetCallbackDeleteFileAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideDeleteFileAsync sets the callback function.
+func (x *FileIface) OverrideDeleteFileAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xDeleteFileAsync = 0
 	} else {
@@ -1679,8 +1679,8 @@ 		})
 	}
 }
 
-// GetCallbackDeleteFileAsync gets the callback function.
-func (x *FileIface) GetCallbackDeleteFileAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetDeleteFileAsync gets the callback function.
+func (x *FileIface) GetDeleteFileAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xDeleteFileAsync == 0 {
 		return nil
 	}
@@ -1691,8 +1691,8 @@ 		rawCallback(FileVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackDeleteFileFinish sets the callback function.
-func (x *FileIface) SetCallbackDeleteFileFinish(cb func(File, AsyncResult) bool) {
+// OverrideDeleteFileFinish sets the callback function.
+func (x *FileIface) OverrideDeleteFileFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xDeleteFileFinish = 0
 	} else {
@@ -1702,8 +1702,8 @@ 		})
 	}
 }
 
-// GetCallbackDeleteFileFinish gets the callback function.
-func (x *FileIface) GetCallbackDeleteFileFinish() func(File, AsyncResult) bool {
+// GetDeleteFileFinish gets the callback function.
+func (x *FileIface) GetDeleteFileFinish() func(File, AsyncResult) bool {
 	if x.xDeleteFileFinish == 0 {
 		return nil
 	}
@@ -1714,8 +1714,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackTrash sets the callback function.
-func (x *FileIface) SetCallbackTrash(cb func(File, *Cancellable) bool) {
+// OverrideTrash sets the callback function.
+func (x *FileIface) OverrideTrash(cb func(File, *Cancellable) bool) {
 	if cb == nil {
 		x.xTrash = 0
 	} else {
@@ -1725,8 +1725,8 @@ 		})
 	}
 }
 
-// GetCallbackTrash gets the callback function.
-func (x *FileIface) GetCallbackTrash() func(File, *Cancellable) bool {
+// GetTrash gets the callback function.
+func (x *FileIface) GetTrash() func(File, *Cancellable) bool {
 	if x.xTrash == 0 {
 		return nil
 	}
@@ -1737,8 +1737,8 @@ 		return rawCallback(FileVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackTrashAsync sets the callback function.
-func (x *FileIface) SetCallbackTrashAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideTrashAsync sets the callback function.
+func (x *FileIface) OverrideTrashAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xTrashAsync = 0
 	} else {
@@ -1748,8 +1748,8 @@ 		})
 	}
 }
 
-// GetCallbackTrashAsync gets the callback function.
-func (x *FileIface) GetCallbackTrashAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetTrashAsync gets the callback function.
+func (x *FileIface) GetTrashAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xTrashAsync == 0 {
 		return nil
 	}
@@ -1760,8 +1760,8 @@ 		rawCallback(FileVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackTrashFinish sets the callback function.
-func (x *FileIface) SetCallbackTrashFinish(cb func(File, AsyncResult) bool) {
+// OverrideTrashFinish sets the callback function.
+func (x *FileIface) OverrideTrashFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xTrashFinish = 0
 	} else {
@@ -1771,8 +1771,8 @@ 		})
 	}
 }
 
-// GetCallbackTrashFinish gets the callback function.
-func (x *FileIface) GetCallbackTrashFinish() func(File, AsyncResult) bool {
+// GetTrashFinish gets the callback function.
+func (x *FileIface) GetTrashFinish() func(File, AsyncResult) bool {
 	if x.xTrashFinish == 0 {
 		return nil
 	}
@@ -1783,8 +1783,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackMakeDirectory sets the callback function.
-func (x *FileIface) SetCallbackMakeDirectory(cb func(File, *Cancellable) bool) {
+// OverrideMakeDirectory sets the callback function.
+func (x *FileIface) OverrideMakeDirectory(cb func(File, *Cancellable) bool) {
 	if cb == nil {
 		x.xMakeDirectory = 0
 	} else {
@@ -1794,8 +1794,8 @@ 		})
 	}
 }
 
-// GetCallbackMakeDirectory gets the callback function.
-func (x *FileIface) GetCallbackMakeDirectory() func(File, *Cancellable) bool {
+// GetMakeDirectory gets the callback function.
+func (x *FileIface) GetMakeDirectory() func(File, *Cancellable) bool {
 	if x.xMakeDirectory == 0 {
 		return nil
 	}
@@ -1806,8 +1806,8 @@ 		return rawCallback(FileVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackMakeDirectoryAsync sets the callback function.
-func (x *FileIface) SetCallbackMakeDirectoryAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideMakeDirectoryAsync sets the callback function.
+func (x *FileIface) OverrideMakeDirectoryAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xMakeDirectoryAsync = 0
 	} else {
@@ -1817,8 +1817,8 @@ 		})
 	}
 }
 
-// GetCallbackMakeDirectoryAsync gets the callback function.
-func (x *FileIface) GetCallbackMakeDirectoryAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetMakeDirectoryAsync gets the callback function.
+func (x *FileIface) GetMakeDirectoryAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xMakeDirectoryAsync == 0 {
 		return nil
 	}
@@ -1829,8 +1829,8 @@ 		rawCallback(FileVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackMakeDirectoryFinish sets the callback function.
-func (x *FileIface) SetCallbackMakeDirectoryFinish(cb func(File, AsyncResult) bool) {
+// OverrideMakeDirectoryFinish sets the callback function.
+func (x *FileIface) OverrideMakeDirectoryFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xMakeDirectoryFinish = 0
 	} else {
@@ -1840,8 +1840,8 @@ 		})
 	}
 }
 
-// GetCallbackMakeDirectoryFinish gets the callback function.
-func (x *FileIface) GetCallbackMakeDirectoryFinish() func(File, AsyncResult) bool {
+// GetMakeDirectoryFinish gets the callback function.
+func (x *FileIface) GetMakeDirectoryFinish() func(File, AsyncResult) bool {
 	if x.xMakeDirectoryFinish == 0 {
 		return nil
 	}
@@ -1852,8 +1852,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackMakeSymbolicLink sets the callback function.
-func (x *FileIface) SetCallbackMakeSymbolicLink(cb func(File, string, *Cancellable) bool) {
+// OverrideMakeSymbolicLink sets the callback function.
+func (x *FileIface) OverrideMakeSymbolicLink(cb func(File, string, *Cancellable) bool) {
 	if cb == nil {
 		x.xMakeSymbolicLink = 0
 	} else {
@@ -1863,8 +1863,8 @@ 		})
 	}
 }
 
-// GetCallbackMakeSymbolicLink gets the callback function.
-func (x *FileIface) GetCallbackMakeSymbolicLink() func(File, string, *Cancellable) bool {
+// GetMakeSymbolicLink gets the callback function.
+func (x *FileIface) GetMakeSymbolicLink() func(File, string, *Cancellable) bool {
 	if x.xMakeSymbolicLink == 0 {
 		return nil
 	}
@@ -1875,8 +1875,8 @@ 		return rawCallback(FileVar.GoPointer(), SymlinkValueVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackMakeSymbolicLinkAsync sets the callback function.
-func (x *FileIface) SetCallbackMakeSymbolicLinkAsync(cb func()) {
+// OverrideMakeSymbolicLinkAsync sets the callback function.
+func (x *FileIface) OverrideMakeSymbolicLinkAsync(cb func()) {
 	if cb == nil {
 		x.xMakeSymbolicLinkAsync = 0
 	} else {
@@ -1886,8 +1886,8 @@ 		})
 	}
 }
 
-// GetCallbackMakeSymbolicLinkAsync gets the callback function.
-func (x *FileIface) GetCallbackMakeSymbolicLinkAsync() func() {
+// GetMakeSymbolicLinkAsync gets the callback function.
+func (x *FileIface) GetMakeSymbolicLinkAsync() func() {
 	if x.xMakeSymbolicLinkAsync == 0 {
 		return nil
 	}
@@ -1898,8 +1898,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackMakeSymbolicLinkFinish sets the callback function.
-func (x *FileIface) SetCallbackMakeSymbolicLinkFinish(cb func()) {
+// OverrideMakeSymbolicLinkFinish sets the callback function.
+func (x *FileIface) OverrideMakeSymbolicLinkFinish(cb func()) {
 	if cb == nil {
 		x.xMakeSymbolicLinkFinish = 0
 	} else {
@@ -1909,8 +1909,8 @@ 		})
 	}
 }
 
-// GetCallbackMakeSymbolicLinkFinish gets the callback function.
-func (x *FileIface) GetCallbackMakeSymbolicLinkFinish() func() {
+// GetMakeSymbolicLinkFinish gets the callback function.
+func (x *FileIface) GetMakeSymbolicLinkFinish() func() {
 	if x.xMakeSymbolicLinkFinish == 0 {
 		return nil
 	}
@@ -1921,8 +1921,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackCopy sets the callback function.
-func (x *FileIface) SetCallbackCopy(cb func(File, File, FileCopyFlags, *Cancellable, *FileProgressCallback, uintptr) bool) {
+// OverrideCopy sets the callback function.
+func (x *FileIface) OverrideCopy(cb func(File, File, FileCopyFlags, *Cancellable, *FileProgressCallback, uintptr) bool) {
 	if cb == nil {
 		x.xCopy = 0
 	} else {
@@ -1932,8 +1932,8 @@ 		})
 	}
 }
 
-// GetCallbackCopy gets the callback function.
-func (x *FileIface) GetCallbackCopy() func(File, File, FileCopyFlags, *Cancellable, *FileProgressCallback, uintptr) bool {
+// GetCopy gets the callback function.
+func (x *FileIface) GetCopy() func(File, File, FileCopyFlags, *Cancellable, *FileProgressCallback, uintptr) bool {
 	if x.xCopy == 0 {
 		return nil
 	}
@@ -1944,8 +1944,8 @@ 		return rawCallback(SourceVar.GoPointer(), DestinationVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(ProgressCallbackVar), ProgressCallbackDataVar)
 	}
 }
 
-// SetCallbackCopyAsync sets the callback function.
-func (x *FileIface) SetCallbackCopyAsync(cb func(File, File, FileCopyFlags, int, *Cancellable, *FileProgressCallback, uintptr, *AsyncReadyCallback, uintptr)) {
+// OverrideCopyAsync sets the callback function.
+func (x *FileIface) OverrideCopyAsync(cb func(File, File, FileCopyFlags, int, *Cancellable, *FileProgressCallback, uintptr, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xCopyAsync = 0
 	} else {
@@ -1955,8 +1955,8 @@ 		})
 	}
 }
 
-// GetCallbackCopyAsync gets the callback function.
-func (x *FileIface) GetCallbackCopyAsync() func(File, File, FileCopyFlags, int, *Cancellable, *FileProgressCallback, uintptr, *AsyncReadyCallback, uintptr) {
+// GetCopyAsync gets the callback function.
+func (x *FileIface) GetCopyAsync() func(File, File, FileCopyFlags, int, *Cancellable, *FileProgressCallback, uintptr, *AsyncReadyCallback, uintptr) {
 	if x.xCopyAsync == 0 {
 		return nil
 	}
@@ -1967,8 +1967,8 @@ 		rawCallback(SourceVar.GoPointer(), DestinationVar.GoPointer(), FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(ProgressCallbackVar), ProgressCallbackDataVar, glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackCopyFinish sets the callback function.
-func (x *FileIface) SetCallbackCopyFinish(cb func(File, AsyncResult) bool) {
+// OverrideCopyFinish sets the callback function.
+func (x *FileIface) OverrideCopyFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xCopyFinish = 0
 	} else {
@@ -1978,8 +1978,8 @@ 		})
 	}
 }
 
-// GetCallbackCopyFinish gets the callback function.
-func (x *FileIface) GetCallbackCopyFinish() func(File, AsyncResult) bool {
+// GetCopyFinish gets the callback function.
+func (x *FileIface) GetCopyFinish() func(File, AsyncResult) bool {
 	if x.xCopyFinish == 0 {
 		return nil
 	}
@@ -1990,8 +1990,8 @@ 		return rawCallback(FileVar.GoPointer(), ResVar.GoPointer())
 	}
 }
 
-// SetCallbackMove sets the callback function.
-func (x *FileIface) SetCallbackMove(cb func(File, File, FileCopyFlags, *Cancellable, *FileProgressCallback, uintptr) bool) {
+// OverrideMove sets the callback function.
+func (x *FileIface) OverrideMove(cb func(File, File, FileCopyFlags, *Cancellable, *FileProgressCallback, uintptr) bool) {
 	if cb == nil {
 		x.xMove = 0
 	} else {
@@ -2001,8 +2001,8 @@ 		})
 	}
 }
 
-// GetCallbackMove gets the callback function.
-func (x *FileIface) GetCallbackMove() func(File, File, FileCopyFlags, *Cancellable, *FileProgressCallback, uintptr) bool {
+// GetMove gets the callback function.
+func (x *FileIface) GetMove() func(File, File, FileCopyFlags, *Cancellable, *FileProgressCallback, uintptr) bool {
 	if x.xMove == 0 {
 		return nil
 	}
@@ -2013,8 +2013,8 @@ 		return rawCallback(SourceVar.GoPointer(), DestinationVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(ProgressCallbackVar), ProgressCallbackDataVar)
 	}
 }
 
-// SetCallbackMoveAsync sets the callback function.
-func (x *FileIface) SetCallbackMoveAsync(cb func(File, File, FileCopyFlags, int, *Cancellable, *FileProgressCallback, uintptr, *AsyncReadyCallback, uintptr)) {
+// OverrideMoveAsync sets the callback function.
+func (x *FileIface) OverrideMoveAsync(cb func(File, File, FileCopyFlags, int, *Cancellable, *FileProgressCallback, uintptr, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xMoveAsync = 0
 	} else {
@@ -2024,8 +2024,8 @@ 		})
 	}
 }
 
-// GetCallbackMoveAsync gets the callback function.
-func (x *FileIface) GetCallbackMoveAsync() func(File, File, FileCopyFlags, int, *Cancellable, *FileProgressCallback, uintptr, *AsyncReadyCallback, uintptr) {
+// GetMoveAsync gets the callback function.
+func (x *FileIface) GetMoveAsync() func(File, File, FileCopyFlags, int, *Cancellable, *FileProgressCallback, uintptr, *AsyncReadyCallback, uintptr) {
 	if x.xMoveAsync == 0 {
 		return nil
 	}
@@ -2036,8 +2036,8 @@ 		rawCallback(SourceVar.GoPointer(), DestinationVar.GoPointer(), FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(ProgressCallbackVar), ProgressCallbackDataVar, glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackMoveFinish sets the callback function.
-func (x *FileIface) SetCallbackMoveFinish(cb func(File, AsyncResult) bool) {
+// OverrideMoveFinish sets the callback function.
+func (x *FileIface) OverrideMoveFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xMoveFinish = 0
 	} else {
@@ -2047,8 +2047,8 @@ 		})
 	}
 }
 
-// GetCallbackMoveFinish gets the callback function.
-func (x *FileIface) GetCallbackMoveFinish() func(File, AsyncResult) bool {
+// GetMoveFinish gets the callback function.
+func (x *FileIface) GetMoveFinish() func(File, AsyncResult) bool {
 	if x.xMoveFinish == 0 {
 		return nil
 	}
@@ -2059,8 +2059,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackMountMountable sets the callback function.
-func (x *FileIface) SetCallbackMountMountable(cb func(File, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideMountMountable sets the callback function.
+func (x *FileIface) OverrideMountMountable(cb func(File, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xMountMountable = 0
 	} else {
@@ -2070,8 +2070,8 @@ 		})
 	}
 }
 
-// GetCallbackMountMountable gets the callback function.
-func (x *FileIface) GetCallbackMountMountable() func(File, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetMountMountable gets the callback function.
+func (x *FileIface) GetMountMountable() func(File, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xMountMountable == 0 {
 		return nil
 	}
@@ -2082,8 +2082,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackMountMountableFinish sets the callback function.
-func (x *FileIface) SetCallbackMountMountableFinish(cb func(File, AsyncResult) *FileBase) {
+// OverrideMountMountableFinish sets the callback function.
+func (x *FileIface) OverrideMountMountableFinish(cb func(File, AsyncResult) *FileBase) {
 	if cb == nil {
 		x.xMountMountableFinish = 0
 	} else {
@@ -2097,8 +2097,8 @@ 		})
 	}
 }
 
-// GetCallbackMountMountableFinish gets the callback function.
-func (x *FileIface) GetCallbackMountMountableFinish() func(File, AsyncResult) *FileBase {
+// GetMountMountableFinish gets the callback function.
+func (x *FileIface) GetMountMountableFinish() func(File, AsyncResult) *FileBase {
 	if x.xMountMountableFinish == 0 {
 		return nil
 	}
@@ -2115,8 +2115,8 @@ 		return ret
 	}
 }
 
-// SetCallbackUnmountMountable sets the callback function.
-func (x *FileIface) SetCallbackUnmountMountable(cb func(File, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideUnmountMountable sets the callback function.
+func (x *FileIface) OverrideUnmountMountable(cb func(File, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xUnmountMountable = 0
 	} else {
@@ -2126,8 +2126,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmountMountable gets the callback function.
-func (x *FileIface) GetCallbackUnmountMountable() func(File, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetUnmountMountable gets the callback function.
+func (x *FileIface) GetUnmountMountable() func(File, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xUnmountMountable == 0 {
 		return nil
 	}
@@ -2138,8 +2138,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackUnmountMountableFinish sets the callback function.
-func (x *FileIface) SetCallbackUnmountMountableFinish(cb func(File, AsyncResult) bool) {
+// OverrideUnmountMountableFinish sets the callback function.
+func (x *FileIface) OverrideUnmountMountableFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xUnmountMountableFinish = 0
 	} else {
@@ -2149,8 +2149,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmountMountableFinish gets the callback function.
-func (x *FileIface) GetCallbackUnmountMountableFinish() func(File, AsyncResult) bool {
+// GetUnmountMountableFinish gets the callback function.
+func (x *FileIface) GetUnmountMountableFinish() func(File, AsyncResult) bool {
 	if x.xUnmountMountableFinish == 0 {
 		return nil
 	}
@@ -2161,8 +2161,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackEjectMountable sets the callback function.
-func (x *FileIface) SetCallbackEjectMountable(cb func(File, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideEjectMountable sets the callback function.
+func (x *FileIface) OverrideEjectMountable(cb func(File, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xEjectMountable = 0
 	} else {
@@ -2172,8 +2172,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectMountable gets the callback function.
-func (x *FileIface) GetCallbackEjectMountable() func(File, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetEjectMountable gets the callback function.
+func (x *FileIface) GetEjectMountable() func(File, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xEjectMountable == 0 {
 		return nil
 	}
@@ -2184,8 +2184,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackEjectMountableFinish sets the callback function.
-func (x *FileIface) SetCallbackEjectMountableFinish(cb func(File, AsyncResult) bool) {
+// OverrideEjectMountableFinish sets the callback function.
+func (x *FileIface) OverrideEjectMountableFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xEjectMountableFinish = 0
 	} else {
@@ -2195,8 +2195,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectMountableFinish gets the callback function.
-func (x *FileIface) GetCallbackEjectMountableFinish() func(File, AsyncResult) bool {
+// GetEjectMountableFinish gets the callback function.
+func (x *FileIface) GetEjectMountableFinish() func(File, AsyncResult) bool {
 	if x.xEjectMountableFinish == 0 {
 		return nil
 	}
@@ -2207,8 +2207,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackMountEnclosingVolume sets the callback function.
-func (x *FileIface) SetCallbackMountEnclosingVolume(cb func(File, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideMountEnclosingVolume sets the callback function.
+func (x *FileIface) OverrideMountEnclosingVolume(cb func(File, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xMountEnclosingVolume = 0
 	} else {
@@ -2218,8 +2218,8 @@ 		})
 	}
 }
 
-// GetCallbackMountEnclosingVolume gets the callback function.
-func (x *FileIface) GetCallbackMountEnclosingVolume() func(File, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetMountEnclosingVolume gets the callback function.
+func (x *FileIface) GetMountEnclosingVolume() func(File, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xMountEnclosingVolume == 0 {
 		return nil
 	}
@@ -2230,8 +2230,8 @@ 		rawCallback(LocationVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackMountEnclosingVolumeFinish sets the callback function.
-func (x *FileIface) SetCallbackMountEnclosingVolumeFinish(cb func(File, AsyncResult) bool) {
+// OverrideMountEnclosingVolumeFinish sets the callback function.
+func (x *FileIface) OverrideMountEnclosingVolumeFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xMountEnclosingVolumeFinish = 0
 	} else {
@@ -2241,8 +2241,8 @@ 		})
 	}
 }
 
-// GetCallbackMountEnclosingVolumeFinish gets the callback function.
-func (x *FileIface) GetCallbackMountEnclosingVolumeFinish() func(File, AsyncResult) bool {
+// GetMountEnclosingVolumeFinish gets the callback function.
+func (x *FileIface) GetMountEnclosingVolumeFinish() func(File, AsyncResult) bool {
 	if x.xMountEnclosingVolumeFinish == 0 {
 		return nil
 	}
@@ -2253,8 +2253,8 @@ 		return rawCallback(LocationVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackMonitorDir sets the callback function.
-func (x *FileIface) SetCallbackMonitorDir(cb func(File, FileMonitorFlags, *Cancellable) *FileMonitor) {
+// OverrideMonitorDir sets the callback function.
+func (x *FileIface) OverrideMonitorDir(cb func(File, FileMonitorFlags, *Cancellable) *FileMonitor) {
 	if cb == nil {
 		x.xMonitorDir = 0
 	} else {
@@ -2268,8 +2268,8 @@ 		})
 	}
 }
 
-// GetCallbackMonitorDir gets the callback function.
-func (x *FileIface) GetCallbackMonitorDir() func(File, FileMonitorFlags, *Cancellable) *FileMonitor {
+// GetMonitorDir gets the callback function.
+func (x *FileIface) GetMonitorDir() func(File, FileMonitorFlags, *Cancellable) *FileMonitor {
 	if x.xMonitorDir == 0 {
 		return nil
 	}
@@ -2286,8 +2286,8 @@ 		return ret
 	}
 }
 
-// SetCallbackMonitorFile sets the callback function.
-func (x *FileIface) SetCallbackMonitorFile(cb func(File, FileMonitorFlags, *Cancellable) *FileMonitor) {
+// OverrideMonitorFile sets the callback function.
+func (x *FileIface) OverrideMonitorFile(cb func(File, FileMonitorFlags, *Cancellable) *FileMonitor) {
 	if cb == nil {
 		x.xMonitorFile = 0
 	} else {
@@ -2301,8 +2301,8 @@ 		})
 	}
 }
 
-// GetCallbackMonitorFile gets the callback function.
-func (x *FileIface) GetCallbackMonitorFile() func(File, FileMonitorFlags, *Cancellable) *FileMonitor {
+// GetMonitorFile gets the callback function.
+func (x *FileIface) GetMonitorFile() func(File, FileMonitorFlags, *Cancellable) *FileMonitor {
 	if x.xMonitorFile == 0 {
 		return nil
 	}
@@ -2319,8 +2319,8 @@ 		return ret
 	}
 }
 
-// SetCallbackOpenReadwrite sets the callback function.
-func (x *FileIface) SetCallbackOpenReadwrite(cb func(File, *Cancellable) *FileIOStream) {
+// OverrideOpenReadwrite sets the callback function.
+func (x *FileIface) OverrideOpenReadwrite(cb func(File, *Cancellable) *FileIOStream) {
 	if cb == nil {
 		x.xOpenReadwrite = 0
 	} else {
@@ -2334,8 +2334,8 @@ 		})
 	}
 }
 
-// GetCallbackOpenReadwrite gets the callback function.
-func (x *FileIface) GetCallbackOpenReadwrite() func(File, *Cancellable) *FileIOStream {
+// GetOpenReadwrite gets the callback function.
+func (x *FileIface) GetOpenReadwrite() func(File, *Cancellable) *FileIOStream {
 	if x.xOpenReadwrite == 0 {
 		return nil
 	}
@@ -2352,8 +2352,8 @@ 		return ret
 	}
 }
 
-// SetCallbackOpenReadwriteAsync sets the callback function.
-func (x *FileIface) SetCallbackOpenReadwriteAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideOpenReadwriteAsync sets the callback function.
+func (x *FileIface) OverrideOpenReadwriteAsync(cb func(File, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xOpenReadwriteAsync = 0
 	} else {
@@ -2363,8 +2363,8 @@ 		})
 	}
 }
 
-// GetCallbackOpenReadwriteAsync gets the callback function.
-func (x *FileIface) GetCallbackOpenReadwriteAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetOpenReadwriteAsync gets the callback function.
+func (x *FileIface) GetOpenReadwriteAsync() func(File, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xOpenReadwriteAsync == 0 {
 		return nil
 	}
@@ -2375,8 +2375,8 @@ 		rawCallback(FileVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackOpenReadwriteFinish sets the callback function.
-func (x *FileIface) SetCallbackOpenReadwriteFinish(cb func(File, AsyncResult) *FileIOStream) {
+// OverrideOpenReadwriteFinish sets the callback function.
+func (x *FileIface) OverrideOpenReadwriteFinish(cb func(File, AsyncResult) *FileIOStream) {
 	if cb == nil {
 		x.xOpenReadwriteFinish = 0
 	} else {
@@ -2390,8 +2390,8 @@ 		})
 	}
 }
 
-// GetCallbackOpenReadwriteFinish gets the callback function.
-func (x *FileIface) GetCallbackOpenReadwriteFinish() func(File, AsyncResult) *FileIOStream {
+// GetOpenReadwriteFinish gets the callback function.
+func (x *FileIface) GetOpenReadwriteFinish() func(File, AsyncResult) *FileIOStream {
 	if x.xOpenReadwriteFinish == 0 {
 		return nil
 	}
@@ -2408,8 +2408,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCreateReadwrite sets the callback function.
-func (x *FileIface) SetCallbackCreateReadwrite(cb func(File, FileCreateFlags, *Cancellable) *FileIOStream) {
+// OverrideCreateReadwrite sets the callback function.
+func (x *FileIface) OverrideCreateReadwrite(cb func(File, FileCreateFlags, *Cancellable) *FileIOStream) {
 	if cb == nil {
 		x.xCreateReadwrite = 0
 	} else {
@@ -2423,8 +2423,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateReadwrite gets the callback function.
-func (x *FileIface) GetCallbackCreateReadwrite() func(File, FileCreateFlags, *Cancellable) *FileIOStream {
+// GetCreateReadwrite gets the callback function.
+func (x *FileIface) GetCreateReadwrite() func(File, FileCreateFlags, *Cancellable) *FileIOStream {
 	if x.xCreateReadwrite == 0 {
 		return nil
 	}
@@ -2441,8 +2441,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCreateReadwriteAsync sets the callback function.
-func (x *FileIface) SetCallbackCreateReadwriteAsync(cb func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideCreateReadwriteAsync sets the callback function.
+func (x *FileIface) OverrideCreateReadwriteAsync(cb func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xCreateReadwriteAsync = 0
 	} else {
@@ -2452,8 +2452,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateReadwriteAsync gets the callback function.
-func (x *FileIface) GetCallbackCreateReadwriteAsync() func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetCreateReadwriteAsync gets the callback function.
+func (x *FileIface) GetCreateReadwriteAsync() func(File, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xCreateReadwriteAsync == 0 {
 		return nil
 	}
@@ -2464,8 +2464,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackCreateReadwriteFinish sets the callback function.
-func (x *FileIface) SetCallbackCreateReadwriteFinish(cb func(File, AsyncResult) *FileIOStream) {
+// OverrideCreateReadwriteFinish sets the callback function.
+func (x *FileIface) OverrideCreateReadwriteFinish(cb func(File, AsyncResult) *FileIOStream) {
 	if cb == nil {
 		x.xCreateReadwriteFinish = 0
 	} else {
@@ -2479,8 +2479,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateReadwriteFinish gets the callback function.
-func (x *FileIface) GetCallbackCreateReadwriteFinish() func(File, AsyncResult) *FileIOStream {
+// GetCreateReadwriteFinish gets the callback function.
+func (x *FileIface) GetCreateReadwriteFinish() func(File, AsyncResult) *FileIOStream {
 	if x.xCreateReadwriteFinish == 0 {
 		return nil
 	}
@@ -2497,8 +2497,8 @@ 		return ret
 	}
 }
 
-// SetCallbackReplaceReadwrite sets the callback function.
-func (x *FileIface) SetCallbackReplaceReadwrite(cb func(File, string, bool, FileCreateFlags, *Cancellable) *FileIOStream) {
+// OverrideReplaceReadwrite sets the callback function.
+func (x *FileIface) OverrideReplaceReadwrite(cb func(File, string, bool, FileCreateFlags, *Cancellable) *FileIOStream) {
 	if cb == nil {
 		x.xReplaceReadwrite = 0
 	} else {
@@ -2512,8 +2512,8 @@ 		})
 	}
 }
 
-// GetCallbackReplaceReadwrite gets the callback function.
-func (x *FileIface) GetCallbackReplaceReadwrite() func(File, string, bool, FileCreateFlags, *Cancellable) *FileIOStream {
+// GetReplaceReadwrite gets the callback function.
+func (x *FileIface) GetReplaceReadwrite() func(File, string, bool, FileCreateFlags, *Cancellable) *FileIOStream {
 	if x.xReplaceReadwrite == 0 {
 		return nil
 	}
@@ -2530,8 +2530,8 @@ 		return ret
 	}
 }
 
-// SetCallbackReplaceReadwriteAsync sets the callback function.
-func (x *FileIface) SetCallbackReplaceReadwriteAsync(cb func(File, string, bool, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideReplaceReadwriteAsync sets the callback function.
+func (x *FileIface) OverrideReplaceReadwriteAsync(cb func(File, string, bool, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xReplaceReadwriteAsync = 0
 	} else {
@@ -2541,8 +2541,8 @@ 		})
 	}
 }
 
-// GetCallbackReplaceReadwriteAsync gets the callback function.
-func (x *FileIface) GetCallbackReplaceReadwriteAsync() func(File, string, bool, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetReplaceReadwriteAsync gets the callback function.
+func (x *FileIface) GetReplaceReadwriteAsync() func(File, string, bool, FileCreateFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xReplaceReadwriteAsync == 0 {
 		return nil
 	}
@@ -2553,8 +2553,8 @@ 		rawCallback(FileVar.GoPointer(), EtagVar, MakeBackupVar, FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackReplaceReadwriteFinish sets the callback function.
-func (x *FileIface) SetCallbackReplaceReadwriteFinish(cb func(File, AsyncResult) *FileIOStream) {
+// OverrideReplaceReadwriteFinish sets the callback function.
+func (x *FileIface) OverrideReplaceReadwriteFinish(cb func(File, AsyncResult) *FileIOStream) {
 	if cb == nil {
 		x.xReplaceReadwriteFinish = 0
 	} else {
@@ -2568,8 +2568,8 @@ 		})
 	}
 }
 
-// GetCallbackReplaceReadwriteFinish gets the callback function.
-func (x *FileIface) GetCallbackReplaceReadwriteFinish() func(File, AsyncResult) *FileIOStream {
+// GetReplaceReadwriteFinish gets the callback function.
+func (x *FileIface) GetReplaceReadwriteFinish() func(File, AsyncResult) *FileIOStream {
 	if x.xReplaceReadwriteFinish == 0 {
 		return nil
 	}
@@ -2586,8 +2586,8 @@ 		return ret
 	}
 }
 
-// SetCallbackStartMountable sets the callback function.
-func (x *FileIface) SetCallbackStartMountable(cb func(File, DriveStartFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideStartMountable sets the callback function.
+func (x *FileIface) OverrideStartMountable(cb func(File, DriveStartFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xStartMountable = 0
 	} else {
@@ -2597,8 +2597,8 @@ 		})
 	}
 }
 
-// GetCallbackStartMountable gets the callback function.
-func (x *FileIface) GetCallbackStartMountable() func(File, DriveStartFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetStartMountable gets the callback function.
+func (x *FileIface) GetStartMountable() func(File, DriveStartFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xStartMountable == 0 {
 		return nil
 	}
@@ -2609,8 +2609,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, StartOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackStartMountableFinish sets the callback function.
-func (x *FileIface) SetCallbackStartMountableFinish(cb func(File, AsyncResult) bool) {
+// OverrideStartMountableFinish sets the callback function.
+func (x *FileIface) OverrideStartMountableFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xStartMountableFinish = 0
 	} else {
@@ -2620,8 +2620,8 @@ 		})
 	}
 }
 
-// GetCallbackStartMountableFinish gets the callback function.
-func (x *FileIface) GetCallbackStartMountableFinish() func(File, AsyncResult) bool {
+// GetStartMountableFinish gets the callback function.
+func (x *FileIface) GetStartMountableFinish() func(File, AsyncResult) bool {
 	if x.xStartMountableFinish == 0 {
 		return nil
 	}
@@ -2632,8 +2632,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackStopMountable sets the callback function.
-func (x *FileIface) SetCallbackStopMountable(cb func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideStopMountable sets the callback function.
+func (x *FileIface) OverrideStopMountable(cb func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xStopMountable = 0
 	} else {
@@ -2643,8 +2643,8 @@ 		})
 	}
 }
 
-// GetCallbackStopMountable gets the callback function.
-func (x *FileIface) GetCallbackStopMountable() func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetStopMountable gets the callback function.
+func (x *FileIface) GetStopMountable() func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xStopMountable == 0 {
 		return nil
 	}
@@ -2655,8 +2655,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackStopMountableFinish sets the callback function.
-func (x *FileIface) SetCallbackStopMountableFinish(cb func(File, AsyncResult) bool) {
+// OverrideStopMountableFinish sets the callback function.
+func (x *FileIface) OverrideStopMountableFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xStopMountableFinish = 0
 	} else {
@@ -2666,8 +2666,8 @@ 		})
 	}
 }
 
-// GetCallbackStopMountableFinish gets the callback function.
-func (x *FileIface) GetCallbackStopMountableFinish() func(File, AsyncResult) bool {
+// GetStopMountableFinish gets the callback function.
+func (x *FileIface) GetStopMountableFinish() func(File, AsyncResult) bool {
 	if x.xStopMountableFinish == 0 {
 		return nil
 	}
@@ -2678,8 +2678,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackUnmountMountableWithOperation sets the callback function.
-func (x *FileIface) SetCallbackUnmountMountableWithOperation(cb func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideUnmountMountableWithOperation sets the callback function.
+func (x *FileIface) OverrideUnmountMountableWithOperation(cb func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xUnmountMountableWithOperation = 0
 	} else {
@@ -2689,8 +2689,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmountMountableWithOperation gets the callback function.
-func (x *FileIface) GetCallbackUnmountMountableWithOperation() func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetUnmountMountableWithOperation gets the callback function.
+func (x *FileIface) GetUnmountMountableWithOperation() func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xUnmountMountableWithOperation == 0 {
 		return nil
 	}
@@ -2701,8 +2701,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackUnmountMountableWithOperationFinish sets the callback function.
-func (x *FileIface) SetCallbackUnmountMountableWithOperationFinish(cb func(File, AsyncResult) bool) {
+// OverrideUnmountMountableWithOperationFinish sets the callback function.
+func (x *FileIface) OverrideUnmountMountableWithOperationFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xUnmountMountableWithOperationFinish = 0
 	} else {
@@ -2712,8 +2712,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmountMountableWithOperationFinish gets the callback function.
-func (x *FileIface) GetCallbackUnmountMountableWithOperationFinish() func(File, AsyncResult) bool {
+// GetUnmountMountableWithOperationFinish gets the callback function.
+func (x *FileIface) GetUnmountMountableWithOperationFinish() func(File, AsyncResult) bool {
 	if x.xUnmountMountableWithOperationFinish == 0 {
 		return nil
 	}
@@ -2724,8 +2724,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackEjectMountableWithOperation sets the callback function.
-func (x *FileIface) SetCallbackEjectMountableWithOperation(cb func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideEjectMountableWithOperation sets the callback function.
+func (x *FileIface) OverrideEjectMountableWithOperation(cb func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xEjectMountableWithOperation = 0
 	} else {
@@ -2735,8 +2735,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectMountableWithOperation gets the callback function.
-func (x *FileIface) GetCallbackEjectMountableWithOperation() func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetEjectMountableWithOperation gets the callback function.
+func (x *FileIface) GetEjectMountableWithOperation() func(File, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xEjectMountableWithOperation == 0 {
 		return nil
 	}
@@ -2747,8 +2747,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackEjectMountableWithOperationFinish sets the callback function.
-func (x *FileIface) SetCallbackEjectMountableWithOperationFinish(cb func(File, AsyncResult) bool) {
+// OverrideEjectMountableWithOperationFinish sets the callback function.
+func (x *FileIface) OverrideEjectMountableWithOperationFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xEjectMountableWithOperationFinish = 0
 	} else {
@@ -2758,8 +2758,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectMountableWithOperationFinish gets the callback function.
-func (x *FileIface) GetCallbackEjectMountableWithOperationFinish() func(File, AsyncResult) bool {
+// GetEjectMountableWithOperationFinish gets the callback function.
+func (x *FileIface) GetEjectMountableWithOperationFinish() func(File, AsyncResult) bool {
 	if x.xEjectMountableWithOperationFinish == 0 {
 		return nil
 	}
@@ -2770,8 +2770,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackPollMountable sets the callback function.
-func (x *FileIface) SetCallbackPollMountable(cb func(File, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverridePollMountable sets the callback function.
+func (x *FileIface) OverridePollMountable(cb func(File, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xPollMountable = 0
 	} else {
@@ -2781,8 +2781,8 @@ 		})
 	}
 }
 
-// GetCallbackPollMountable gets the callback function.
-func (x *FileIface) GetCallbackPollMountable() func(File, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetPollMountable gets the callback function.
+func (x *FileIface) GetPollMountable() func(File, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xPollMountable == 0 {
 		return nil
 	}
@@ -2793,8 +2793,8 @@ 		rawCallback(FileVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackPollMountableFinish sets the callback function.
-func (x *FileIface) SetCallbackPollMountableFinish(cb func(File, AsyncResult) bool) {
+// OverridePollMountableFinish sets the callback function.
+func (x *FileIface) OverridePollMountableFinish(cb func(File, AsyncResult) bool) {
 	if cb == nil {
 		x.xPollMountableFinish = 0
 	} else {
@@ -2804,8 +2804,8 @@ 		})
 	}
 }
 
-// GetCallbackPollMountableFinish gets the callback function.
-func (x *FileIface) GetCallbackPollMountableFinish() func(File, AsyncResult) bool {
+// GetPollMountableFinish gets the callback function.
+func (x *FileIface) GetPollMountableFinish() func(File, AsyncResult) bool {
 	if x.xPollMountableFinish == 0 {
 		return nil
 	}
@@ -2816,8 +2816,8 @@ 		return rawCallback(FileVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackMeasureDiskUsage sets the callback function.
-func (x *FileIface) SetCallbackMeasureDiskUsage(cb func(File, FileMeasureFlags, *Cancellable, *FileMeasureProgressCallback, uintptr, uint64, uint64, uint64) bool) {
+// OverrideMeasureDiskUsage sets the callback function.
+func (x *FileIface) OverrideMeasureDiskUsage(cb func(File, FileMeasureFlags, *Cancellable, *FileMeasureProgressCallback, uintptr, uint64, uint64, uint64) bool) {
 	if cb == nil {
 		x.xMeasureDiskUsage = 0
 	} else {
@@ -2827,8 +2827,8 @@ 		})
 	}
 }
 
-// GetCallbackMeasureDiskUsage gets the callback function.
-func (x *FileIface) GetCallbackMeasureDiskUsage() func(File, FileMeasureFlags, *Cancellable, *FileMeasureProgressCallback, uintptr, uint64, uint64, uint64) bool {
+// GetMeasureDiskUsage gets the callback function.
+func (x *FileIface) GetMeasureDiskUsage() func(File, FileMeasureFlags, *Cancellable, *FileMeasureProgressCallback, uintptr, uint64, uint64, uint64) bool {
 	if x.xMeasureDiskUsage == 0 {
 		return nil
 	}
@@ -2839,8 +2839,8 @@ 		return rawCallback(FileVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(ProgressCallbackVar), ProgressDataVar, DiskUsageVar, NumDirsVar, NumFilesVar)
 	}
 }
 
-// SetCallbackMeasureDiskUsageAsync sets the callback function.
-func (x *FileIface) SetCallbackMeasureDiskUsageAsync(cb func(File, FileMeasureFlags, int, *Cancellable, *FileMeasureProgressCallback, uintptr, *AsyncReadyCallback, uintptr)) {
+// OverrideMeasureDiskUsageAsync sets the callback function.
+func (x *FileIface) OverrideMeasureDiskUsageAsync(cb func(File, FileMeasureFlags, int, *Cancellable, *FileMeasureProgressCallback, uintptr, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xMeasureDiskUsageAsync = 0
 	} else {
@@ -2850,8 +2850,8 @@ 		})
 	}
 }
 
-// GetCallbackMeasureDiskUsageAsync gets the callback function.
-func (x *FileIface) GetCallbackMeasureDiskUsageAsync() func(File, FileMeasureFlags, int, *Cancellable, *FileMeasureProgressCallback, uintptr, *AsyncReadyCallback, uintptr) {
+// GetMeasureDiskUsageAsync gets the callback function.
+func (x *FileIface) GetMeasureDiskUsageAsync() func(File, FileMeasureFlags, int, *Cancellable, *FileMeasureProgressCallback, uintptr, *AsyncReadyCallback, uintptr) {
 	if x.xMeasureDiskUsageAsync == 0 {
 		return nil
 	}
@@ -2862,8 +2862,8 @@ 		rawCallback(FileVar.GoPointer(), FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(ProgressCallbackVar), ProgressDataVar, glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackMeasureDiskUsageFinish sets the callback function.
-func (x *FileIface) SetCallbackMeasureDiskUsageFinish(cb func(File, AsyncResult, uint64, uint64, uint64) bool) {
+// OverrideMeasureDiskUsageFinish sets the callback function.
+func (x *FileIface) OverrideMeasureDiskUsageFinish(cb func(File, AsyncResult, uint64, uint64, uint64) bool) {
 	if cb == nil {
 		x.xMeasureDiskUsageFinish = 0
 	} else {
@@ -2873,8 +2873,8 @@ 		})
 	}
 }
 
-// GetCallbackMeasureDiskUsageFinish gets the callback function.
-func (x *FileIface) GetCallbackMeasureDiskUsageFinish() func(File, AsyncResult, uint64, uint64, uint64) bool {
+// GetMeasureDiskUsageFinish gets the callback function.
+func (x *FileIface) GetMeasureDiskUsageFinish() func(File, AsyncResult, uint64, uint64, uint64) bool {
 	if x.xMeasureDiskUsageFinish == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfiledescriptorbased.go b/v4/gio/gfiledescriptorbased.go
index 7d739427563eb9761b7130c451fe4948a12c1489..4eee7bb21bc316d0029a9f15a438c9b5b1c1ac85 100644
--- a/v4/gio/gfiledescriptorbased.go
+++ b/v4/gio/gfiledescriptorbased.go
@@ -23,8 +23,8 @@ func (x *FileDescriptorBasedIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetFd sets the callback function.
-func (x *FileDescriptorBasedIface) SetCallbackGetFd(cb func(FileDescriptorBased) int) {
+// OverrideGetFd sets the callback function.
+func (x *FileDescriptorBasedIface) OverrideGetFd(cb func(FileDescriptorBased) int) {
 	if cb == nil {
 		x.xGetFd = 0
 	} else {
@@ -34,8 +34,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFd gets the callback function.
-func (x *FileDescriptorBasedIface) GetCallbackGetFd() func(FileDescriptorBased) int {
+// GetGetFd gets the callback function.
+func (x *FileDescriptorBasedIface) GetGetFd() func(FileDescriptorBased) int {
 	if x.xGetFd == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfileenumerator.go b/v4/gio/gfileenumerator.go
index 8a546f3a0d2f245e407c6685b32d7533bb3e0b9d..387c3b7a6093e554f434d47212b56cf5aaac1a0f 100644
--- a/v4/gio/gfileenumerator.go
+++ b/v4/gio/gfileenumerator.go
@@ -48,8 +48,8 @@ func (x *FileEnumeratorClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackNextFile sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackNextFile(cb func(*FileEnumerator, *Cancellable) *FileInfo) {
+// OverrideNextFile sets the callback function.
+func (x *FileEnumeratorClass) OverrideNextFile(cb func(*FileEnumerator, *Cancellable) *FileInfo) {
 	if cb == nil {
 		x.xNextFile = 0
 	} else {
@@ -63,8 +63,8 @@ 		})
 	}
 }
 
-// GetCallbackNextFile gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackNextFile() func(*FileEnumerator, *Cancellable) *FileInfo {
+// GetNextFile gets the callback function.
+func (x *FileEnumeratorClass) GetNextFile() func(*FileEnumerator, *Cancellable) *FileInfo {
 	if x.xNextFile == 0 {
 		return nil
 	}
@@ -81,8 +81,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCloseFn sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackCloseFn(cb func(*FileEnumerator, *Cancellable) bool) {
+// OverrideCloseFn sets the callback function.
+func (x *FileEnumeratorClass) OverrideCloseFn(cb func(*FileEnumerator, *Cancellable) bool) {
 	if cb == nil {
 		x.xCloseFn = 0
 	} else {
@@ -92,8 +92,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseFn gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackCloseFn() func(*FileEnumerator, *Cancellable) bool {
+// GetCloseFn gets the callback function.
+func (x *FileEnumeratorClass) GetCloseFn() func(*FileEnumerator, *Cancellable) bool {
 	if x.xCloseFn == 0 {
 		return nil
 	}
@@ -104,8 +104,8 @@ 		return rawCallback(EnumeratorVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackNextFilesAsync sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackNextFilesAsync(cb func(*FileEnumerator, int, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideNextFilesAsync sets the callback function.
+func (x *FileEnumeratorClass) OverrideNextFilesAsync(cb func(*FileEnumerator, int, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xNextFilesAsync = 0
 	} else {
@@ -115,8 +115,8 @@ 		})
 	}
 }
 
-// GetCallbackNextFilesAsync gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackNextFilesAsync() func(*FileEnumerator, int, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetNextFilesAsync gets the callback function.
+func (x *FileEnumeratorClass) GetNextFilesAsync() func(*FileEnumerator, int, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xNextFilesAsync == 0 {
 		return nil
 	}
@@ -127,8 +127,8 @@ 		rawCallback(EnumeratorVar.GoPointer(), NumFilesVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackNextFilesFinish sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackNextFilesFinish(cb func(*FileEnumerator, AsyncResult) *glib.List) {
+// OverrideNextFilesFinish sets the callback function.
+func (x *FileEnumeratorClass) OverrideNextFilesFinish(cb func(*FileEnumerator, AsyncResult) *glib.List) {
 	if cb == nil {
 		x.xNextFilesFinish = 0
 	} else {
@@ -138,8 +138,8 @@ 		})
 	}
 }
 
-// GetCallbackNextFilesFinish gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackNextFilesFinish() func(*FileEnumerator, AsyncResult) *glib.List {
+// GetNextFilesFinish gets the callback function.
+func (x *FileEnumeratorClass) GetNextFilesFinish() func(*FileEnumerator, AsyncResult) *glib.List {
 	if x.xNextFilesFinish == 0 {
 		return nil
 	}
@@ -150,8 +150,8 @@ 		return rawCallback(EnumeratorVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackCloseAsync sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackCloseAsync(cb func(*FileEnumerator, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideCloseAsync sets the callback function.
+func (x *FileEnumeratorClass) OverrideCloseAsync(cb func(*FileEnumerator, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xCloseAsync = 0
 	} else {
@@ -161,8 +161,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseAsync gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackCloseAsync() func(*FileEnumerator, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetCloseAsync gets the callback function.
+func (x *FileEnumeratorClass) GetCloseAsync() func(*FileEnumerator, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xCloseAsync == 0 {
 		return nil
 	}
@@ -173,8 +173,8 @@ 		rawCallback(EnumeratorVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackCloseFinish sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackCloseFinish(cb func(*FileEnumerator, AsyncResult) bool) {
+// OverrideCloseFinish sets the callback function.
+func (x *FileEnumeratorClass) OverrideCloseFinish(cb func(*FileEnumerator, AsyncResult) bool) {
 	if cb == nil {
 		x.xCloseFinish = 0
 	} else {
@@ -184,8 +184,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseFinish gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackCloseFinish() func(*FileEnumerator, AsyncResult) bool {
+// GetCloseFinish gets the callback function.
+func (x *FileEnumeratorClass) GetCloseFinish() func(*FileEnumerator, AsyncResult) bool {
 	if x.xCloseFinish == 0 {
 		return nil
 	}
@@ -196,8 +196,8 @@ 		return rawCallback(EnumeratorVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *FileEnumeratorClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -207,8 +207,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *FileEnumeratorClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -219,8 +219,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *FileEnumeratorClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -230,8 +230,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *FileEnumeratorClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -242,8 +242,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *FileEnumeratorClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -253,8 +253,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *FileEnumeratorClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -265,8 +265,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *FileEnumeratorClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -276,8 +276,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *FileEnumeratorClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -288,8 +288,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *FileEnumeratorClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -299,8 +299,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *FileEnumeratorClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -311,8 +311,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *FileEnumeratorClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -322,8 +322,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *FileEnumeratorClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
@@ -334,8 +334,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved7 sets the callback function.
-func (x *FileEnumeratorClass) SetCallbackGReserved7(cb func()) {
+// OverrideGReserved7 sets the callback function.
+func (x *FileEnumeratorClass) OverrideGReserved7(cb func()) {
 	if cb == nil {
 		x.xGReserved7 = 0
 	} else {
@@ -345,8 +345,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved7 gets the callback function.
-func (x *FileEnumeratorClass) GetCallbackGReserved7() func() {
+// GetGReserved7 gets the callback function.
+func (x *FileEnumeratorClass) GetGReserved7() func() {
 	if x.xGReserved7 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfileinputstream.go b/v4/gio/gfileinputstream.go
index 6060e82c18f8c0e1c6511765fc853053d6aef685..272bd244482ce856647989ed69d2699d9a950a26 100644
--- a/v4/gio/gfileinputstream.go
+++ b/v4/gio/gfileinputstream.go
@@ -43,8 +43,8 @@ func (x *FileInputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackTell sets the callback function.
-func (x *FileInputStreamClass) SetCallbackTell(cb func(*FileInputStream) int64) {
+// OverrideTell sets the callback function.
+func (x *FileInputStreamClass) OverrideTell(cb func(*FileInputStream) int64) {
 	if cb == nil {
 		x.xTell = 0
 	} else {
@@ -54,8 +54,8 @@ 		})
 	}
 }
 
-// GetCallbackTell gets the callback function.
-func (x *FileInputStreamClass) GetCallbackTell() func(*FileInputStream) int64 {
+// GetTell gets the callback function.
+func (x *FileInputStreamClass) GetTell() func(*FileInputStream) int64 {
 	if x.xTell == 0 {
 		return nil
 	}
@@ -66,8 +66,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackCanSeek sets the callback function.
-func (x *FileInputStreamClass) SetCallbackCanSeek(cb func(*FileInputStream) bool) {
+// OverrideCanSeek sets the callback function.
+func (x *FileInputStreamClass) OverrideCanSeek(cb func(*FileInputStream) bool) {
 	if cb == nil {
 		x.xCanSeek = 0
 	} else {
@@ -77,8 +77,8 @@ 		})
 	}
 }
 
-// GetCallbackCanSeek gets the callback function.
-func (x *FileInputStreamClass) GetCallbackCanSeek() func(*FileInputStream) bool {
+// GetCanSeek gets the callback function.
+func (x *FileInputStreamClass) GetCanSeek() func(*FileInputStream) bool {
 	if x.xCanSeek == 0 {
 		return nil
 	}
@@ -89,8 +89,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackSeek sets the callback function.
-func (x *FileInputStreamClass) SetCallbackSeek(cb func(*FileInputStream, int64, glib.SeekType, *Cancellable) bool) {
+// OverrideSeek sets the callback function.
+func (x *FileInputStreamClass) OverrideSeek(cb func(*FileInputStream, int64, glib.SeekType, *Cancellable) bool) {
 	if cb == nil {
 		x.xSeek = 0
 	} else {
@@ -100,8 +100,8 @@ 		})
 	}
 }
 
-// GetCallbackSeek gets the callback function.
-func (x *FileInputStreamClass) GetCallbackSeek() func(*FileInputStream, int64, glib.SeekType, *Cancellable) bool {
+// GetSeek gets the callback function.
+func (x *FileInputStreamClass) GetSeek() func(*FileInputStream, int64, glib.SeekType, *Cancellable) bool {
 	if x.xSeek == 0 {
 		return nil
 	}
@@ -112,8 +112,8 @@ 		return rawCallback(StreamVar.GoPointer(), OffsetVar, TypeVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackQueryInfo sets the callback function.
-func (x *FileInputStreamClass) SetCallbackQueryInfo(cb func(*FileInputStream, string, *Cancellable) *FileInfo) {
+// OverrideQueryInfo sets the callback function.
+func (x *FileInputStreamClass) OverrideQueryInfo(cb func(*FileInputStream, string, *Cancellable) *FileInfo) {
 	if cb == nil {
 		x.xQueryInfo = 0
 	} else {
@@ -127,8 +127,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfo gets the callback function.
-func (x *FileInputStreamClass) GetCallbackQueryInfo() func(*FileInputStream, string, *Cancellable) *FileInfo {
+// GetQueryInfo gets the callback function.
+func (x *FileInputStreamClass) GetQueryInfo() func(*FileInputStream, string, *Cancellable) *FileInfo {
 	if x.xQueryInfo == 0 {
 		return nil
 	}
@@ -145,8 +145,8 @@ 		return ret
 	}
 }
 
-// SetCallbackQueryInfoAsync sets the callback function.
-func (x *FileInputStreamClass) SetCallbackQueryInfoAsync(cb func(*FileInputStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideQueryInfoAsync sets the callback function.
+func (x *FileInputStreamClass) OverrideQueryInfoAsync(cb func(*FileInputStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xQueryInfoAsync = 0
 	} else {
@@ -156,8 +156,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfoAsync gets the callback function.
-func (x *FileInputStreamClass) GetCallbackQueryInfoAsync() func(*FileInputStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetQueryInfoAsync gets the callback function.
+func (x *FileInputStreamClass) GetQueryInfoAsync() func(*FileInputStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xQueryInfoAsync == 0 {
 		return nil
 	}
@@ -168,8 +168,8 @@ 		rawCallback(StreamVar.GoPointer(), AttributesVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackQueryInfoFinish sets the callback function.
-func (x *FileInputStreamClass) SetCallbackQueryInfoFinish(cb func(*FileInputStream, AsyncResult) *FileInfo) {
+// OverrideQueryInfoFinish sets the callback function.
+func (x *FileInputStreamClass) OverrideQueryInfoFinish(cb func(*FileInputStream, AsyncResult) *FileInfo) {
 	if cb == nil {
 		x.xQueryInfoFinish = 0
 	} else {
@@ -183,8 +183,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfoFinish gets the callback function.
-func (x *FileInputStreamClass) GetCallbackQueryInfoFinish() func(*FileInputStream, AsyncResult) *FileInfo {
+// GetQueryInfoFinish gets the callback function.
+func (x *FileInputStreamClass) GetQueryInfoFinish() func(*FileInputStream, AsyncResult) *FileInfo {
 	if x.xQueryInfoFinish == 0 {
 		return nil
 	}
@@ -201,8 +201,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *FileInputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *FileInputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -212,8 +212,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *FileInputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *FileInputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -224,8 +224,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *FileInputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *FileInputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -235,8 +235,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *FileInputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *FileInputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -247,8 +247,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *FileInputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *FileInputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -258,8 +258,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *FileInputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *FileInputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -270,8 +270,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *FileInputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *FileInputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -281,8 +281,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *FileInputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *FileInputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -293,8 +293,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *FileInputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *FileInputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -304,8 +304,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *FileInputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *FileInputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfileiostream.go b/v4/gio/gfileiostream.go
index a50a750e315c485655807c0292d4822e5181b921..b5e6905317bb8b7f3c0989dd6f982b9639ceb60a 100644
--- a/v4/gio/gfileiostream.go
+++ b/v4/gio/gfileiostream.go
@@ -49,8 +49,8 @@ func (x *FileIOStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackTell sets the callback function.
-func (x *FileIOStreamClass) SetCallbackTell(cb func(*FileIOStream) int64) {
+// OverrideTell sets the callback function.
+func (x *FileIOStreamClass) OverrideTell(cb func(*FileIOStream) int64) {
 	if cb == nil {
 		x.xTell = 0
 	} else {
@@ -60,8 +60,8 @@ 		})
 	}
 }
 
-// GetCallbackTell gets the callback function.
-func (x *FileIOStreamClass) GetCallbackTell() func(*FileIOStream) int64 {
+// GetTell gets the callback function.
+func (x *FileIOStreamClass) GetTell() func(*FileIOStream) int64 {
 	if x.xTell == 0 {
 		return nil
 	}
@@ -72,8 +72,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackCanSeek sets the callback function.
-func (x *FileIOStreamClass) SetCallbackCanSeek(cb func(*FileIOStream) bool) {
+// OverrideCanSeek sets the callback function.
+func (x *FileIOStreamClass) OverrideCanSeek(cb func(*FileIOStream) bool) {
 	if cb == nil {
 		x.xCanSeek = 0
 	} else {
@@ -83,8 +83,8 @@ 		})
 	}
 }
 
-// GetCallbackCanSeek gets the callback function.
-func (x *FileIOStreamClass) GetCallbackCanSeek() func(*FileIOStream) bool {
+// GetCanSeek gets the callback function.
+func (x *FileIOStreamClass) GetCanSeek() func(*FileIOStream) bool {
 	if x.xCanSeek == 0 {
 		return nil
 	}
@@ -95,8 +95,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackSeek sets the callback function.
-func (x *FileIOStreamClass) SetCallbackSeek(cb func(*FileIOStream, int64, glib.SeekType, *Cancellable) bool) {
+// OverrideSeek sets the callback function.
+func (x *FileIOStreamClass) OverrideSeek(cb func(*FileIOStream, int64, glib.SeekType, *Cancellable) bool) {
 	if cb == nil {
 		x.xSeek = 0
 	} else {
@@ -106,8 +106,8 @@ 		})
 	}
 }
 
-// GetCallbackSeek gets the callback function.
-func (x *FileIOStreamClass) GetCallbackSeek() func(*FileIOStream, int64, glib.SeekType, *Cancellable) bool {
+// GetSeek gets the callback function.
+func (x *FileIOStreamClass) GetSeek() func(*FileIOStream, int64, glib.SeekType, *Cancellable) bool {
 	if x.xSeek == 0 {
 		return nil
 	}
@@ -118,8 +118,8 @@ 		return rawCallback(StreamVar.GoPointer(), OffsetVar, TypeVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackCanTruncate sets the callback function.
-func (x *FileIOStreamClass) SetCallbackCanTruncate(cb func(*FileIOStream) bool) {
+// OverrideCanTruncate sets the callback function.
+func (x *FileIOStreamClass) OverrideCanTruncate(cb func(*FileIOStream) bool) {
 	if cb == nil {
 		x.xCanTruncate = 0
 	} else {
@@ -129,8 +129,8 @@ 		})
 	}
 }
 
-// GetCallbackCanTruncate gets the callback function.
-func (x *FileIOStreamClass) GetCallbackCanTruncate() func(*FileIOStream) bool {
+// GetCanTruncate gets the callback function.
+func (x *FileIOStreamClass) GetCanTruncate() func(*FileIOStream) bool {
 	if x.xCanTruncate == 0 {
 		return nil
 	}
@@ -141,8 +141,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackTruncateFn sets the callback function.
-func (x *FileIOStreamClass) SetCallbackTruncateFn(cb func(*FileIOStream, int64, *Cancellable) bool) {
+// OverrideTruncateFn sets the callback function.
+func (x *FileIOStreamClass) OverrideTruncateFn(cb func(*FileIOStream, int64, *Cancellable) bool) {
 	if cb == nil {
 		x.xTruncateFn = 0
 	} else {
@@ -152,8 +152,8 @@ 		})
 	}
 }
 
-// GetCallbackTruncateFn gets the callback function.
-func (x *FileIOStreamClass) GetCallbackTruncateFn() func(*FileIOStream, int64, *Cancellable) bool {
+// GetTruncateFn gets the callback function.
+func (x *FileIOStreamClass) GetTruncateFn() func(*FileIOStream, int64, *Cancellable) bool {
 	if x.xTruncateFn == 0 {
 		return nil
 	}
@@ -164,8 +164,8 @@ 		return rawCallback(StreamVar.GoPointer(), SizeVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackQueryInfo sets the callback function.
-func (x *FileIOStreamClass) SetCallbackQueryInfo(cb func(*FileIOStream, string, *Cancellable) *FileInfo) {
+// OverrideQueryInfo sets the callback function.
+func (x *FileIOStreamClass) OverrideQueryInfo(cb func(*FileIOStream, string, *Cancellable) *FileInfo) {
 	if cb == nil {
 		x.xQueryInfo = 0
 	} else {
@@ -179,8 +179,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfo gets the callback function.
-func (x *FileIOStreamClass) GetCallbackQueryInfo() func(*FileIOStream, string, *Cancellable) *FileInfo {
+// GetQueryInfo gets the callback function.
+func (x *FileIOStreamClass) GetQueryInfo() func(*FileIOStream, string, *Cancellable) *FileInfo {
 	if x.xQueryInfo == 0 {
 		return nil
 	}
@@ -197,8 +197,8 @@ 		return ret
 	}
 }
 
-// SetCallbackQueryInfoAsync sets the callback function.
-func (x *FileIOStreamClass) SetCallbackQueryInfoAsync(cb func(*FileIOStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideQueryInfoAsync sets the callback function.
+func (x *FileIOStreamClass) OverrideQueryInfoAsync(cb func(*FileIOStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xQueryInfoAsync = 0
 	} else {
@@ -208,8 +208,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfoAsync gets the callback function.
-func (x *FileIOStreamClass) GetCallbackQueryInfoAsync() func(*FileIOStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetQueryInfoAsync gets the callback function.
+func (x *FileIOStreamClass) GetQueryInfoAsync() func(*FileIOStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xQueryInfoAsync == 0 {
 		return nil
 	}
@@ -220,8 +220,8 @@ 		rawCallback(StreamVar.GoPointer(), AttributesVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackQueryInfoFinish sets the callback function.
-func (x *FileIOStreamClass) SetCallbackQueryInfoFinish(cb func(*FileIOStream, AsyncResult) *FileInfo) {
+// OverrideQueryInfoFinish sets the callback function.
+func (x *FileIOStreamClass) OverrideQueryInfoFinish(cb func(*FileIOStream, AsyncResult) *FileInfo) {
 	if cb == nil {
 		x.xQueryInfoFinish = 0
 	} else {
@@ -235,8 +235,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfoFinish gets the callback function.
-func (x *FileIOStreamClass) GetCallbackQueryInfoFinish() func(*FileIOStream, AsyncResult) *FileInfo {
+// GetQueryInfoFinish gets the callback function.
+func (x *FileIOStreamClass) GetQueryInfoFinish() func(*FileIOStream, AsyncResult) *FileInfo {
 	if x.xQueryInfoFinish == 0 {
 		return nil
 	}
@@ -253,8 +253,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetEtag sets the callback function.
-func (x *FileIOStreamClass) SetCallbackGetEtag(cb func(*FileIOStream) string) {
+// OverrideGetEtag sets the callback function.
+func (x *FileIOStreamClass) OverrideGetEtag(cb func(*FileIOStream) string) {
 	if cb == nil {
 		x.xGetEtag = 0
 	} else {
@@ -264,8 +264,8 @@ 		})
 	}
 }
 
-// GetCallbackGetEtag gets the callback function.
-func (x *FileIOStreamClass) GetCallbackGetEtag() func(*FileIOStream) string {
+// GetGetEtag gets the callback function.
+func (x *FileIOStreamClass) GetGetEtag() func(*FileIOStream) string {
 	if x.xGetEtag == 0 {
 		return nil
 	}
@@ -276,8 +276,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *FileIOStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *FileIOStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -287,8 +287,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *FileIOStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *FileIOStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -299,8 +299,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *FileIOStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *FileIOStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -310,8 +310,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *FileIOStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *FileIOStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -322,8 +322,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *FileIOStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *FileIOStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -333,8 +333,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *FileIOStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *FileIOStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -345,8 +345,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *FileIOStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *FileIOStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -356,8 +356,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *FileIOStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *FileIOStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -368,8 +368,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *FileIOStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *FileIOStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -379,8 +379,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *FileIOStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *FileIOStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfilemonitor.go b/v4/gio/gfilemonitor.go
index 5b744c995d7f612d4eab6fc2079cb43c93ffefaf..d2ef94524b288abe138bce6f20da27e861cef09e 100644
--- a/v4/gio/gfilemonitor.go
+++ b/v4/gio/gfilemonitor.go
@@ -36,8 +36,8 @@ func (x *FileMonitorClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *FileMonitorClass) SetCallbackChanged(cb func(*FileMonitor, File, File, FileMonitorEvent)) {
+// OverrideChanged sets the callback function.
+func (x *FileMonitorClass) OverrideChanged(cb func(*FileMonitor, File, File, FileMonitorEvent)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -47,8 +47,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *FileMonitorClass) GetCallbackChanged() func(*FileMonitor, File, File, FileMonitorEvent) {
+// GetChanged gets the callback function.
+func (x *FileMonitorClass) GetChanged() func(*FileMonitor, File, File, FileMonitorEvent) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -59,8 +59,8 @@ 		rawCallback(MonitorVar.GoPointer(), FileVar.GoPointer(), OtherFileVar.GoPointer(), EventTypeVar)
 	}
 }
 
-// SetCallbackCancel sets the callback function.
-func (x *FileMonitorClass) SetCallbackCancel(cb func(*FileMonitor) bool) {
+// OverrideCancel sets the callback function.
+func (x *FileMonitorClass) OverrideCancel(cb func(*FileMonitor) bool) {
 	if cb == nil {
 		x.xCancel = 0
 	} else {
@@ -70,8 +70,8 @@ 		})
 	}
 }
 
-// GetCallbackCancel gets the callback function.
-func (x *FileMonitorClass) GetCallbackCancel() func(*FileMonitor) bool {
+// GetCancel gets the callback function.
+func (x *FileMonitorClass) GetCancel() func(*FileMonitor) bool {
 	if x.xCancel == 0 {
 		return nil
 	}
@@ -82,8 +82,8 @@ 		return rawCallback(MonitorVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *FileMonitorClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *FileMonitorClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -93,8 +93,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *FileMonitorClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *FileMonitorClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -105,8 +105,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *FileMonitorClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *FileMonitorClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -116,8 +116,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *FileMonitorClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *FileMonitorClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -128,8 +128,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *FileMonitorClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *FileMonitorClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -139,8 +139,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *FileMonitorClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *FileMonitorClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -151,8 +151,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *FileMonitorClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *FileMonitorClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -162,8 +162,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *FileMonitorClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *FileMonitorClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -174,8 +174,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *FileMonitorClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *FileMonitorClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -185,8 +185,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *FileMonitorClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *FileMonitorClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfilenamecompleter.go b/v4/gio/gfilenamecompleter.go
index 0efa3e238761cd4a1f9386d09128ff136376f846..263956e542887a17e2449aa652f418a162e9f5bd 100644
--- a/v4/gio/gfilenamecompleter.go
+++ b/v4/gio/gfilenamecompleter.go
@@ -30,8 +30,8 @@ func (x *FilenameCompleterClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGotCompletionData sets the callback function.
-func (x *FilenameCompleterClass) SetCallbackGotCompletionData(cb func(*FilenameCompleter)) {
+// OverrideGotCompletionData sets the callback function.
+func (x *FilenameCompleterClass) OverrideGotCompletionData(cb func(*FilenameCompleter)) {
 	if cb == nil {
 		x.xGotCompletionData = 0
 	} else {
@@ -41,8 +41,8 @@ 		})
 	}
 }
 
-// GetCallbackGotCompletionData gets the callback function.
-func (x *FilenameCompleterClass) GetCallbackGotCompletionData() func(*FilenameCompleter) {
+// GetGotCompletionData gets the callback function.
+func (x *FilenameCompleterClass) GetGotCompletionData() func(*FilenameCompleter) {
 	if x.xGotCompletionData == 0 {
 		return nil
 	}
@@ -53,8 +53,8 @@ 		rawCallback(FilenameCompleterVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *FilenameCompleterClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *FilenameCompleterClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *FilenameCompleterClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *FilenameCompleterClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -76,8 +76,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *FilenameCompleterClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *FilenameCompleterClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *FilenameCompleterClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *FilenameCompleterClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -99,8 +99,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *FilenameCompleterClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *FilenameCompleterClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *FilenameCompleterClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *FilenameCompleterClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfileoutputstream.go b/v4/gio/gfileoutputstream.go
index d2d885b1965c3b5847293dec698cfb69754150f2..e799906da63da31a63d6563379835994ea66e50b 100644
--- a/v4/gio/gfileoutputstream.go
+++ b/v4/gio/gfileoutputstream.go
@@ -49,8 +49,8 @@ func (x *FileOutputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackTell sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackTell(cb func(*FileOutputStream) int64) {
+// OverrideTell sets the callback function.
+func (x *FileOutputStreamClass) OverrideTell(cb func(*FileOutputStream) int64) {
 	if cb == nil {
 		x.xTell = 0
 	} else {
@@ -60,8 +60,8 @@ 		})
 	}
 }
 
-// GetCallbackTell gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackTell() func(*FileOutputStream) int64 {
+// GetTell gets the callback function.
+func (x *FileOutputStreamClass) GetTell() func(*FileOutputStream) int64 {
 	if x.xTell == 0 {
 		return nil
 	}
@@ -72,8 +72,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackCanSeek sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackCanSeek(cb func(*FileOutputStream) bool) {
+// OverrideCanSeek sets the callback function.
+func (x *FileOutputStreamClass) OverrideCanSeek(cb func(*FileOutputStream) bool) {
 	if cb == nil {
 		x.xCanSeek = 0
 	} else {
@@ -83,8 +83,8 @@ 		})
 	}
 }
 
-// GetCallbackCanSeek gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackCanSeek() func(*FileOutputStream) bool {
+// GetCanSeek gets the callback function.
+func (x *FileOutputStreamClass) GetCanSeek() func(*FileOutputStream) bool {
 	if x.xCanSeek == 0 {
 		return nil
 	}
@@ -95,8 +95,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackSeek sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackSeek(cb func(*FileOutputStream, int64, glib.SeekType, *Cancellable) bool) {
+// OverrideSeek sets the callback function.
+func (x *FileOutputStreamClass) OverrideSeek(cb func(*FileOutputStream, int64, glib.SeekType, *Cancellable) bool) {
 	if cb == nil {
 		x.xSeek = 0
 	} else {
@@ -106,8 +106,8 @@ 		})
 	}
 }
 
-// GetCallbackSeek gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackSeek() func(*FileOutputStream, int64, glib.SeekType, *Cancellable) bool {
+// GetSeek gets the callback function.
+func (x *FileOutputStreamClass) GetSeek() func(*FileOutputStream, int64, glib.SeekType, *Cancellable) bool {
 	if x.xSeek == 0 {
 		return nil
 	}
@@ -118,8 +118,8 @@ 		return rawCallback(StreamVar.GoPointer(), OffsetVar, TypeVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackCanTruncate sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackCanTruncate(cb func(*FileOutputStream) bool) {
+// OverrideCanTruncate sets the callback function.
+func (x *FileOutputStreamClass) OverrideCanTruncate(cb func(*FileOutputStream) bool) {
 	if cb == nil {
 		x.xCanTruncate = 0
 	} else {
@@ -129,8 +129,8 @@ 		})
 	}
 }
 
-// GetCallbackCanTruncate gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackCanTruncate() func(*FileOutputStream) bool {
+// GetCanTruncate gets the callback function.
+func (x *FileOutputStreamClass) GetCanTruncate() func(*FileOutputStream) bool {
 	if x.xCanTruncate == 0 {
 		return nil
 	}
@@ -141,8 +141,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackTruncateFn sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackTruncateFn(cb func(*FileOutputStream, int64, *Cancellable) bool) {
+// OverrideTruncateFn sets the callback function.
+func (x *FileOutputStreamClass) OverrideTruncateFn(cb func(*FileOutputStream, int64, *Cancellable) bool) {
 	if cb == nil {
 		x.xTruncateFn = 0
 	} else {
@@ -152,8 +152,8 @@ 		})
 	}
 }
 
-// GetCallbackTruncateFn gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackTruncateFn() func(*FileOutputStream, int64, *Cancellable) bool {
+// GetTruncateFn gets the callback function.
+func (x *FileOutputStreamClass) GetTruncateFn() func(*FileOutputStream, int64, *Cancellable) bool {
 	if x.xTruncateFn == 0 {
 		return nil
 	}
@@ -164,8 +164,8 @@ 		return rawCallback(StreamVar.GoPointer(), SizeVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackQueryInfo sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackQueryInfo(cb func(*FileOutputStream, string, *Cancellable) *FileInfo) {
+// OverrideQueryInfo sets the callback function.
+func (x *FileOutputStreamClass) OverrideQueryInfo(cb func(*FileOutputStream, string, *Cancellable) *FileInfo) {
 	if cb == nil {
 		x.xQueryInfo = 0
 	} else {
@@ -179,8 +179,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfo gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackQueryInfo() func(*FileOutputStream, string, *Cancellable) *FileInfo {
+// GetQueryInfo gets the callback function.
+func (x *FileOutputStreamClass) GetQueryInfo() func(*FileOutputStream, string, *Cancellable) *FileInfo {
 	if x.xQueryInfo == 0 {
 		return nil
 	}
@@ -197,8 +197,8 @@ 		return ret
 	}
 }
 
-// SetCallbackQueryInfoAsync sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackQueryInfoAsync(cb func(*FileOutputStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideQueryInfoAsync sets the callback function.
+func (x *FileOutputStreamClass) OverrideQueryInfoAsync(cb func(*FileOutputStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xQueryInfoAsync = 0
 	} else {
@@ -208,8 +208,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfoAsync gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackQueryInfoAsync() func(*FileOutputStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetQueryInfoAsync gets the callback function.
+func (x *FileOutputStreamClass) GetQueryInfoAsync() func(*FileOutputStream, string, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xQueryInfoAsync == 0 {
 		return nil
 	}
@@ -220,8 +220,8 @@ 		rawCallback(StreamVar.GoPointer(), AttributesVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackQueryInfoFinish sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackQueryInfoFinish(cb func(*FileOutputStream, AsyncResult) *FileInfo) {
+// OverrideQueryInfoFinish sets the callback function.
+func (x *FileOutputStreamClass) OverrideQueryInfoFinish(cb func(*FileOutputStream, AsyncResult) *FileInfo) {
 	if cb == nil {
 		x.xQueryInfoFinish = 0
 	} else {
@@ -235,8 +235,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryInfoFinish gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackQueryInfoFinish() func(*FileOutputStream, AsyncResult) *FileInfo {
+// GetQueryInfoFinish gets the callback function.
+func (x *FileOutputStreamClass) GetQueryInfoFinish() func(*FileOutputStream, AsyncResult) *FileInfo {
 	if x.xQueryInfoFinish == 0 {
 		return nil
 	}
@@ -253,8 +253,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetEtag sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackGetEtag(cb func(*FileOutputStream) string) {
+// OverrideGetEtag sets the callback function.
+func (x *FileOutputStreamClass) OverrideGetEtag(cb func(*FileOutputStream) string) {
 	if cb == nil {
 		x.xGetEtag = 0
 	} else {
@@ -264,8 +264,8 @@ 		})
 	}
 }
 
-// GetCallbackGetEtag gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackGetEtag() func(*FileOutputStream) string {
+// GetGetEtag gets the callback function.
+func (x *FileOutputStreamClass) GetGetEtag() func(*FileOutputStream) string {
 	if x.xGetEtag == 0 {
 		return nil
 	}
@@ -276,8 +276,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *FileOutputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -287,8 +287,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *FileOutputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -299,8 +299,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *FileOutputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -310,8 +310,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *FileOutputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -322,8 +322,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *FileOutputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -333,8 +333,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *FileOutputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -345,8 +345,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *FileOutputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -356,8 +356,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *FileOutputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -368,8 +368,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *FileOutputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *FileOutputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -379,8 +379,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *FileOutputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *FileOutputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfilterinputstream.go b/v4/gio/gfilterinputstream.go
index 97c41abd230887f792e38a0dcb2e7417ec8b68a9..cbc6f831a29f3fddf2a6eb4c8249d68534d09731 100644
--- a/v4/gio/gfilterinputstream.go
+++ b/v4/gio/gfilterinputstream.go
@@ -27,8 +27,8 @@ func (x *FilterInputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *FilterInputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *FilterInputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -38,8 +38,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *FilterInputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *FilterInputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -50,8 +50,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *FilterInputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *FilterInputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -61,8 +61,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *FilterInputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *FilterInputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -73,8 +73,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *FilterInputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *FilterInputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -84,8 +84,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *FilterInputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *FilterInputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gfilteroutputstream.go b/v4/gio/gfilteroutputstream.go
index 54a12ed42f49e132b4fdbd1feb11c29f2a872ea2..91f4f1abbb2aeb6a885e8f5275896fde4fede4cb 100644
--- a/v4/gio/gfilteroutputstream.go
+++ b/v4/gio/gfilteroutputstream.go
@@ -27,8 +27,8 @@ func (x *FilterOutputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *FilterOutputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *FilterOutputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -38,8 +38,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *FilterOutputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *FilterOutputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -50,8 +50,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *FilterOutputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *FilterOutputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -61,8 +61,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *FilterOutputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *FilterOutputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -73,8 +73,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *FilterOutputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *FilterOutputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -84,8 +84,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *FilterOutputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *FilterOutputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gicon.go b/v4/gio/gicon.go
index 8b72b35391747c47a29de5443f2489f3d79896e4..7f9074620dec26f4e0f5f6997c105d8d29328079 100644
--- a/v4/gio/gicon.go
+++ b/v4/gio/gicon.go
@@ -34,8 +34,8 @@ func (x *IconIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackHash sets the callback function.
-func (x *IconIface) SetCallbackHash(cb func(Icon) uint) {
+// OverrideHash sets the callback function.
+func (x *IconIface) OverrideHash(cb func(Icon) uint) {
 	if cb == nil {
 		x.xHash = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackHash gets the callback function.
-func (x *IconIface) GetCallbackHash() func(Icon) uint {
+// GetHash gets the callback function.
+func (x *IconIface) GetHash() func(Icon) uint {
 	if x.xHash == 0 {
 		return nil
 	}
@@ -57,8 +57,8 @@ 		return rawCallback(IconVar.GoPointer())
 	}
 }
 
-// SetCallbackEqual sets the callback function.
-func (x *IconIface) SetCallbackEqual(cb func(Icon, Icon) bool) {
+// OverrideEqual sets the callback function.
+func (x *IconIface) OverrideEqual(cb func(Icon, Icon) bool) {
 	if cb == nil {
 		x.xEqual = 0
 	} else {
@@ -68,8 +68,8 @@ 		})
 	}
 }
 
-// GetCallbackEqual gets the callback function.
-func (x *IconIface) GetCallbackEqual() func(Icon, Icon) bool {
+// GetEqual gets the callback function.
+func (x *IconIface) GetEqual() func(Icon, Icon) bool {
 	if x.xEqual == 0 {
 		return nil
 	}
@@ -80,8 +80,8 @@ 		return rawCallback(Icon1Var.GoPointer(), Icon2Var.GoPointer())
 	}
 }
 
-// SetCallbackToTokens sets the callback function.
-func (x *IconIface) SetCallbackToTokens(cb func(Icon, []uintptr, int) bool) {
+// OverrideToTokens sets the callback function.
+func (x *IconIface) OverrideToTokens(cb func(Icon, []uintptr, int) bool) {
 	if cb == nil {
 		x.xToTokens = 0
 	} else {
@@ -91,8 +91,8 @@ 		})
 	}
 }
 
-// GetCallbackToTokens gets the callback function.
-func (x *IconIface) GetCallbackToTokens() func(Icon, []uintptr, int) bool {
+// GetToTokens gets the callback function.
+func (x *IconIface) GetToTokens() func(Icon, []uintptr, int) bool {
 	if x.xToTokens == 0 {
 		return nil
 	}
@@ -103,8 +103,8 @@ 		return rawCallback(IconVar.GoPointer(), TokensVar, OutVersionVar)
 	}
 }
 
-// SetCallbackFromTokens sets the callback function.
-func (x *IconIface) SetCallbackFromTokens(cb func(string, int, int) *IconBase) {
+// OverrideFromTokens sets the callback function.
+func (x *IconIface) OverrideFromTokens(cb func(string, int, int) *IconBase) {
 	if cb == nil {
 		x.xFromTokens = 0
 	} else {
@@ -118,8 +118,8 @@ 		})
 	}
 }
 
-// GetCallbackFromTokens gets the callback function.
-func (x *IconIface) GetCallbackFromTokens() func(string, int, int) *IconBase {
+// GetFromTokens gets the callback function.
+func (x *IconIface) GetFromTokens() func(string, int, int) *IconBase {
 	if x.xFromTokens == 0 {
 		return nil
 	}
@@ -136,8 +136,8 @@ 		return ret
 	}
 }
 
-// SetCallbackSerialize sets the callback function.
-func (x *IconIface) SetCallbackSerialize(cb func(Icon) *glib.Variant) {
+// OverrideSerialize sets the callback function.
+func (x *IconIface) OverrideSerialize(cb func(Icon) *glib.Variant) {
 	if cb == nil {
 		x.xSerialize = 0
 	} else {
@@ -147,8 +147,8 @@ 		})
 	}
 }
 
-// GetCallbackSerialize gets the callback function.
-func (x *IconIface) GetCallbackSerialize() func(Icon) *glib.Variant {
+// GetSerialize gets the callback function.
+func (x *IconIface) GetSerialize() func(Icon) *glib.Variant {
 	if x.xSerialize == 0 {
 		return nil
 	}
diff --git a/v4/gio/ginetaddress.go b/v4/gio/ginetaddress.go
index e3def26d79e23e8b0d1081421e21e4ffaafb9ae7..3dae4ee7b833ce28da6d0ea4cf694cf3be4d15ec 100644
--- a/v4/gio/ginetaddress.go
+++ b/v4/gio/ginetaddress.go
@@ -25,8 +25,8 @@ func (x *InetAddressClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackToString sets the callback function.
-func (x *InetAddressClass) SetCallbackToString(cb func(*InetAddress) string) {
+// OverrideToString sets the callback function.
+func (x *InetAddressClass) OverrideToString(cb func(*InetAddress) string) {
 	if cb == nil {
 		x.xToString = 0
 	} else {
@@ -36,8 +36,8 @@ 		})
 	}
 }
 
-// GetCallbackToString gets the callback function.
-func (x *InetAddressClass) GetCallbackToString() func(*InetAddress) string {
+// GetToString gets the callback function.
+func (x *InetAddressClass) GetToString() func(*InetAddress) string {
 	if x.xToString == 0 {
 		return nil
 	}
@@ -48,8 +48,8 @@ 		return rawCallback(AddressVar.GoPointer())
 	}
 }
 
-// SetCallbackToBytes sets the callback function.
-func (x *InetAddressClass) SetCallbackToBytes(cb func(*InetAddress) byte) {
+// OverrideToBytes sets the callback function.
+func (x *InetAddressClass) OverrideToBytes(cb func(*InetAddress) byte) {
 	if cb == nil {
 		x.xToBytes = 0
 	} else {
@@ -59,8 +59,8 @@ 		})
 	}
 }
 
-// GetCallbackToBytes gets the callback function.
-func (x *InetAddressClass) GetCallbackToBytes() func(*InetAddress) byte {
+// GetToBytes gets the callback function.
+func (x *InetAddressClass) GetToBytes() func(*InetAddress) byte {
 	if x.xToBytes == 0 {
 		return nil
 	}
diff --git a/v4/gio/ginitable.go b/v4/gio/ginitable.go
index 9d3040b7a07b82370e27f4b2e5928ce29ddb14d2..18a148ae8292605b64b9c64e97aba698415e2022 100644
--- a/v4/gio/ginitable.go
+++ b/v4/gio/ginitable.go
@@ -26,8 +26,8 @@ func (x *InitableIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackInit sets the callback function.
-func (x *InitableIface) SetCallbackInit(cb func(Initable, *Cancellable) bool) {
+// OverrideInit sets the callback function.
+func (x *InitableIface) OverrideInit(cb func(Initable, *Cancellable) bool) {
 	if cb == nil {
 		x.xInit = 0
 	} else {
@@ -37,8 +37,8 @@ 		})
 	}
 }
 
-// GetCallbackInit gets the callback function.
-func (x *InitableIface) GetCallbackInit() func(Initable, *Cancellable) bool {
+// GetInit gets the callback function.
+func (x *InitableIface) GetInit() func(Initable, *Cancellable) bool {
 	if x.xInit == 0 {
 		return nil
 	}
diff --git a/v4/gio/ginputstream.go b/v4/gio/ginputstream.go
index 5816bcaf77897332cb8e058e0b8b51118c6b6015..563edd3b41055ad575b9027e9711e96cf2a84fdf 100644
--- a/v4/gio/ginputstream.go
+++ b/v4/gio/ginputstream.go
@@ -50,8 +50,8 @@ func (x *InputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackReadFn sets the callback function.
-func (x *InputStreamClass) SetCallbackReadFn(cb func(*InputStream, uintptr, uint, *Cancellable) int) {
+// OverrideReadFn sets the callback function.
+func (x *InputStreamClass) OverrideReadFn(cb func(*InputStream, uintptr, uint, *Cancellable) int) {
 	if cb == nil {
 		x.xReadFn = 0
 	} else {
@@ -61,8 +61,8 @@ 		})
 	}
 }
 
-// GetCallbackReadFn gets the callback function.
-func (x *InputStreamClass) GetCallbackReadFn() func(*InputStream, uintptr, uint, *Cancellable) int {
+// GetReadFn gets the callback function.
+func (x *InputStreamClass) GetReadFn() func(*InputStream, uintptr, uint, *Cancellable) int {
 	if x.xReadFn == 0 {
 		return nil
 	}
@@ -73,8 +73,8 @@ 		return rawCallback(StreamVar.GoPointer(), BufferVar, CountVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackSkip sets the callback function.
-func (x *InputStreamClass) SetCallbackSkip(cb func(*InputStream, uint, *Cancellable) int) {
+// OverrideSkip sets the callback function.
+func (x *InputStreamClass) OverrideSkip(cb func(*InputStream, uint, *Cancellable) int) {
 	if cb == nil {
 		x.xSkip = 0
 	} else {
@@ -84,8 +84,8 @@ 		})
 	}
 }
 
-// GetCallbackSkip gets the callback function.
-func (x *InputStreamClass) GetCallbackSkip() func(*InputStream, uint, *Cancellable) int {
+// GetSkip gets the callback function.
+func (x *InputStreamClass) GetSkip() func(*InputStream, uint, *Cancellable) int {
 	if x.xSkip == 0 {
 		return nil
 	}
@@ -96,8 +96,8 @@ 		return rawCallback(StreamVar.GoPointer(), CountVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackCloseFn sets the callback function.
-func (x *InputStreamClass) SetCallbackCloseFn(cb func(*InputStream, *Cancellable) bool) {
+// OverrideCloseFn sets the callback function.
+func (x *InputStreamClass) OverrideCloseFn(cb func(*InputStream, *Cancellable) bool) {
 	if cb == nil {
 		x.xCloseFn = 0
 	} else {
@@ -107,8 +107,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseFn gets the callback function.
-func (x *InputStreamClass) GetCallbackCloseFn() func(*InputStream, *Cancellable) bool {
+// GetCloseFn gets the callback function.
+func (x *InputStreamClass) GetCloseFn() func(*InputStream, *Cancellable) bool {
 	if x.xCloseFn == 0 {
 		return nil
 	}
@@ -119,8 +119,8 @@ 		return rawCallback(StreamVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackReadAsync sets the callback function.
-func (x *InputStreamClass) SetCallbackReadAsync(cb func(*InputStream, []byte, uint, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideReadAsync sets the callback function.
+func (x *InputStreamClass) OverrideReadAsync(cb func(*InputStream, []byte, uint, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xReadAsync = 0
 	} else {
@@ -130,8 +130,8 @@ 		})
 	}
 }
 
-// GetCallbackReadAsync gets the callback function.
-func (x *InputStreamClass) GetCallbackReadAsync() func(*InputStream, []byte, uint, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetReadAsync gets the callback function.
+func (x *InputStreamClass) GetReadAsync() func(*InputStream, []byte, uint, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xReadAsync == 0 {
 		return nil
 	}
@@ -142,8 +142,8 @@ 		rawCallback(StreamVar.GoPointer(), BufferVar, CountVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackReadFinish sets the callback function.
-func (x *InputStreamClass) SetCallbackReadFinish(cb func(*InputStream, AsyncResult) int) {
+// OverrideReadFinish sets the callback function.
+func (x *InputStreamClass) OverrideReadFinish(cb func(*InputStream, AsyncResult) int) {
 	if cb == nil {
 		x.xReadFinish = 0
 	} else {
@@ -153,8 +153,8 @@ 		})
 	}
 }
 
-// GetCallbackReadFinish gets the callback function.
-func (x *InputStreamClass) GetCallbackReadFinish() func(*InputStream, AsyncResult) int {
+// GetReadFinish gets the callback function.
+func (x *InputStreamClass) GetReadFinish() func(*InputStream, AsyncResult) int {
 	if x.xReadFinish == 0 {
 		return nil
 	}
@@ -165,8 +165,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackSkipAsync sets the callback function.
-func (x *InputStreamClass) SetCallbackSkipAsync(cb func(*InputStream, uint, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideSkipAsync sets the callback function.
+func (x *InputStreamClass) OverrideSkipAsync(cb func(*InputStream, uint, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xSkipAsync = 0
 	} else {
@@ -176,8 +176,8 @@ 		})
 	}
 }
 
-// GetCallbackSkipAsync gets the callback function.
-func (x *InputStreamClass) GetCallbackSkipAsync() func(*InputStream, uint, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetSkipAsync gets the callback function.
+func (x *InputStreamClass) GetSkipAsync() func(*InputStream, uint, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xSkipAsync == 0 {
 		return nil
 	}
@@ -188,8 +188,8 @@ 		rawCallback(StreamVar.GoPointer(), CountVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackSkipFinish sets the callback function.
-func (x *InputStreamClass) SetCallbackSkipFinish(cb func(*InputStream, AsyncResult) int) {
+// OverrideSkipFinish sets the callback function.
+func (x *InputStreamClass) OverrideSkipFinish(cb func(*InputStream, AsyncResult) int) {
 	if cb == nil {
 		x.xSkipFinish = 0
 	} else {
@@ -199,8 +199,8 @@ 		})
 	}
 }
 
-// GetCallbackSkipFinish gets the callback function.
-func (x *InputStreamClass) GetCallbackSkipFinish() func(*InputStream, AsyncResult) int {
+// GetSkipFinish gets the callback function.
+func (x *InputStreamClass) GetSkipFinish() func(*InputStream, AsyncResult) int {
 	if x.xSkipFinish == 0 {
 		return nil
 	}
@@ -211,8 +211,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackCloseAsync sets the callback function.
-func (x *InputStreamClass) SetCallbackCloseAsync(cb func(*InputStream, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideCloseAsync sets the callback function.
+func (x *InputStreamClass) OverrideCloseAsync(cb func(*InputStream, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xCloseAsync = 0
 	} else {
@@ -222,8 +222,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseAsync gets the callback function.
-func (x *InputStreamClass) GetCallbackCloseAsync() func(*InputStream, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetCloseAsync gets the callback function.
+func (x *InputStreamClass) GetCloseAsync() func(*InputStream, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xCloseAsync == 0 {
 		return nil
 	}
@@ -234,8 +234,8 @@ 		rawCallback(StreamVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackCloseFinish sets the callback function.
-func (x *InputStreamClass) SetCallbackCloseFinish(cb func(*InputStream, AsyncResult) bool) {
+// OverrideCloseFinish sets the callback function.
+func (x *InputStreamClass) OverrideCloseFinish(cb func(*InputStream, AsyncResult) bool) {
 	if cb == nil {
 		x.xCloseFinish = 0
 	} else {
@@ -245,8 +245,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseFinish gets the callback function.
-func (x *InputStreamClass) GetCallbackCloseFinish() func(*InputStream, AsyncResult) bool {
+// GetCloseFinish gets the callback function.
+func (x *InputStreamClass) GetCloseFinish() func(*InputStream, AsyncResult) bool {
 	if x.xCloseFinish == 0 {
 		return nil
 	}
@@ -257,8 +257,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *InputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *InputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -268,8 +268,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *InputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *InputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -280,8 +280,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *InputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *InputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -291,8 +291,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *InputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *InputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -303,8 +303,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *InputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *InputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -314,8 +314,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *InputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *InputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -326,8 +326,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *InputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *InputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -337,8 +337,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *InputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *InputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -349,8 +349,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *InputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *InputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -360,8 +360,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *InputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *InputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/giostream.go b/v4/gio/giostream.go
index 3ef9fd620c2560047b85cb922c326caf661a8557..9ab28920fb70236564a9ae98877af8bc32839dc3 100644
--- a/v4/gio/giostream.go
+++ b/v4/gio/giostream.go
@@ -52,8 +52,8 @@ func (x *IOStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetInputStream sets the callback function.
-func (x *IOStreamClass) SetCallbackGetInputStream(cb func(*IOStream) *InputStream) {
+// OverrideGetInputStream sets the callback function.
+func (x *IOStreamClass) OverrideGetInputStream(cb func(*IOStream) *InputStream) {
 	if cb == nil {
 		x.xGetInputStream = 0
 	} else {
@@ -67,8 +67,8 @@ 		})
 	}
 }
 
-// GetCallbackGetInputStream gets the callback function.
-func (x *IOStreamClass) GetCallbackGetInputStream() func(*IOStream) *InputStream {
+// GetGetInputStream gets the callback function.
+func (x *IOStreamClass) GetGetInputStream() func(*IOStream) *InputStream {
 	if x.xGetInputStream == 0 {
 		return nil
 	}
@@ -85,8 +85,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetOutputStream sets the callback function.
-func (x *IOStreamClass) SetCallbackGetOutputStream(cb func(*IOStream) *OutputStream) {
+// OverrideGetOutputStream sets the callback function.
+func (x *IOStreamClass) OverrideGetOutputStream(cb func(*IOStream) *OutputStream) {
 	if cb == nil {
 		x.xGetOutputStream = 0
 	} else {
@@ -100,8 +100,8 @@ 		})
 	}
 }
 
-// GetCallbackGetOutputStream gets the callback function.
-func (x *IOStreamClass) GetCallbackGetOutputStream() func(*IOStream) *OutputStream {
+// GetGetOutputStream gets the callback function.
+func (x *IOStreamClass) GetGetOutputStream() func(*IOStream) *OutputStream {
 	if x.xGetOutputStream == 0 {
 		return nil
 	}
@@ -118,8 +118,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCloseFn sets the callback function.
-func (x *IOStreamClass) SetCallbackCloseFn(cb func(*IOStream, *Cancellable) bool) {
+// OverrideCloseFn sets the callback function.
+func (x *IOStreamClass) OverrideCloseFn(cb func(*IOStream, *Cancellable) bool) {
 	if cb == nil {
 		x.xCloseFn = 0
 	} else {
@@ -129,8 +129,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseFn gets the callback function.
-func (x *IOStreamClass) GetCallbackCloseFn() func(*IOStream, *Cancellable) bool {
+// GetCloseFn gets the callback function.
+func (x *IOStreamClass) GetCloseFn() func(*IOStream, *Cancellable) bool {
 	if x.xCloseFn == 0 {
 		return nil
 	}
@@ -141,8 +141,8 @@ 		return rawCallback(StreamVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackCloseAsync sets the callback function.
-func (x *IOStreamClass) SetCallbackCloseAsync(cb func(*IOStream, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideCloseAsync sets the callback function.
+func (x *IOStreamClass) OverrideCloseAsync(cb func(*IOStream, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xCloseAsync = 0
 	} else {
@@ -152,8 +152,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseAsync gets the callback function.
-func (x *IOStreamClass) GetCallbackCloseAsync() func(*IOStream, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetCloseAsync gets the callback function.
+func (x *IOStreamClass) GetCloseAsync() func(*IOStream, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xCloseAsync == 0 {
 		return nil
 	}
@@ -164,8 +164,8 @@ 		rawCallback(StreamVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackCloseFinish sets the callback function.
-func (x *IOStreamClass) SetCallbackCloseFinish(cb func(*IOStream, AsyncResult) bool) {
+// OverrideCloseFinish sets the callback function.
+func (x *IOStreamClass) OverrideCloseFinish(cb func(*IOStream, AsyncResult) bool) {
 	if cb == nil {
 		x.xCloseFinish = 0
 	} else {
@@ -175,8 +175,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseFinish gets the callback function.
-func (x *IOStreamClass) GetCallbackCloseFinish() func(*IOStream, AsyncResult) bool {
+// GetCloseFinish gets the callback function.
+func (x *IOStreamClass) GetCloseFinish() func(*IOStream, AsyncResult) bool {
 	if x.xCloseFinish == 0 {
 		return nil
 	}
@@ -187,8 +187,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -198,8 +198,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *IOStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -210,8 +210,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -221,8 +221,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *IOStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -233,8 +233,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -244,8 +244,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *IOStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -256,8 +256,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -267,8 +267,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *IOStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -279,8 +279,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -290,8 +290,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *IOStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -302,8 +302,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -313,8 +313,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *IOStreamClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
@@ -325,8 +325,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved7 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved7(cb func()) {
+// OverrideGReserved7 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved7(cb func()) {
 	if cb == nil {
 		x.xGReserved7 = 0
 	} else {
@@ -336,8 +336,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved7 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved7() func() {
+// GetGReserved7 gets the callback function.
+func (x *IOStreamClass) GetGReserved7() func() {
 	if x.xGReserved7 == 0 {
 		return nil
 	}
@@ -348,8 +348,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved8 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved8(cb func()) {
+// OverrideGReserved8 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved8(cb func()) {
 	if cb == nil {
 		x.xGReserved8 = 0
 	} else {
@@ -359,8 +359,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved8 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved8() func() {
+// GetGReserved8 gets the callback function.
+func (x *IOStreamClass) GetGReserved8() func() {
 	if x.xGReserved8 == 0 {
 		return nil
 	}
@@ -371,8 +371,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved9 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved9(cb func()) {
+// OverrideGReserved9 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved9(cb func()) {
 	if cb == nil {
 		x.xGReserved9 = 0
 	} else {
@@ -382,8 +382,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved9 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved9() func() {
+// GetGReserved9 gets the callback function.
+func (x *IOStreamClass) GetGReserved9() func() {
 	if x.xGReserved9 == 0 {
 		return nil
 	}
@@ -394,8 +394,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved10 sets the callback function.
-func (x *IOStreamClass) SetCallbackGReserved10(cb func()) {
+// OverrideGReserved10 sets the callback function.
+func (x *IOStreamClass) OverrideGReserved10(cb func()) {
 	if cb == nil {
 		x.xGReserved10 = 0
 	} else {
@@ -405,8 +405,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved10 gets the callback function.
-func (x *IOStreamClass) GetCallbackGReserved10() func() {
+// GetGReserved10 gets the callback function.
+func (x *IOStreamClass) GetGReserved10() func() {
 	if x.xGReserved10 == 0 {
 		return nil
 	}
diff --git a/v4/gio/glistmodel.go b/v4/gio/glistmodel.go
index 9578dee6c968960e4169112a17ef4aeddd4f78f0..ff941883e744df497c8a5f19420e34beff8ea87c 100644
--- a/v4/gio/glistmodel.go
+++ b/v4/gio/glistmodel.go
@@ -28,8 +28,8 @@ func (x *ListModelInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetItemType sets the callback function.
-func (x *ListModelInterface) SetCallbackGetItemType(cb func(ListModel) types.GType) {
+// OverrideGetItemType sets the callback function.
+func (x *ListModelInterface) OverrideGetItemType(cb func(ListModel) types.GType) {
 	if cb == nil {
 		x.xGetItemType = 0
 	} else {
@@ -39,8 +39,8 @@ 		})
 	}
 }
 
-// GetCallbackGetItemType gets the callback function.
-func (x *ListModelInterface) GetCallbackGetItemType() func(ListModel) types.GType {
+// GetGetItemType gets the callback function.
+func (x *ListModelInterface) GetGetItemType() func(ListModel) types.GType {
 	if x.xGetItemType == 0 {
 		return nil
 	}
@@ -51,8 +51,8 @@ 		return rawCallback(ListVar.GoPointer())
 	}
 }
 
-// SetCallbackGetNItems sets the callback function.
-func (x *ListModelInterface) SetCallbackGetNItems(cb func(ListModel) uint) {
+// OverrideGetNItems sets the callback function.
+func (x *ListModelInterface) OverrideGetNItems(cb func(ListModel) uint) {
 	if cb == nil {
 		x.xGetNItems = 0
 	} else {
@@ -62,8 +62,8 @@ 		})
 	}
 }
 
-// GetCallbackGetNItems gets the callback function.
-func (x *ListModelInterface) GetCallbackGetNItems() func(ListModel) uint {
+// GetGetNItems gets the callback function.
+func (x *ListModelInterface) GetGetNItems() func(ListModel) uint {
 	if x.xGetNItems == 0 {
 		return nil
 	}
@@ -74,8 +74,8 @@ 		return rawCallback(ListVar.GoPointer())
 	}
 }
 
-// SetCallbackGetItem sets the callback function.
-func (x *ListModelInterface) SetCallbackGetItem(cb func(ListModel, uint) *gobject.Object) {
+// OverrideGetItem sets the callback function.
+func (x *ListModelInterface) OverrideGetItem(cb func(ListModel, uint) *gobject.Object) {
 	if cb == nil {
 		x.xGetItem = 0
 	} else {
@@ -89,8 +89,8 @@ 		})
 	}
 }
 
-// GetCallbackGetItem gets the callback function.
-func (x *ListModelInterface) GetCallbackGetItem() func(ListModel, uint) *gobject.Object {
+// GetGetItem gets the callback function.
+func (x *ListModelInterface) GetGetItem() func(ListModel, uint) *gobject.Object {
 	if x.xGetItem == 0 {
 		return nil
 	}
diff --git a/v4/gio/gloadableicon.go b/v4/gio/gloadableicon.go
index 4c7b8c61e6883ed196f6945eec63d3a88850e14b..c5d16a64b8f165611e70704833cce51c589abeac 100644
--- a/v4/gio/gloadableicon.go
+++ b/v4/gio/gloadableicon.go
@@ -28,8 +28,8 @@ func (x *LoadableIconIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackLoad sets the callback function.
-func (x *LoadableIconIface) SetCallbackLoad(cb func(LoadableIcon, int, string, *Cancellable) *InputStream) {
+// OverrideLoad sets the callback function.
+func (x *LoadableIconIface) OverrideLoad(cb func(LoadableIcon, int, string, *Cancellable) *InputStream) {
 	if cb == nil {
 		x.xLoad = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackLoad gets the callback function.
-func (x *LoadableIconIface) GetCallbackLoad() func(LoadableIcon, int, string, *Cancellable) *InputStream {
+// GetLoad gets the callback function.
+func (x *LoadableIconIface) GetLoad() func(LoadableIcon, int, string, *Cancellable) *InputStream {
 	if x.xLoad == 0 {
 		return nil
 	}
@@ -61,8 +61,8 @@ 		return ret
 	}
 }
 
-// SetCallbackLoadAsync sets the callback function.
-func (x *LoadableIconIface) SetCallbackLoadAsync(cb func(LoadableIcon, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLoadAsync sets the callback function.
+func (x *LoadableIconIface) OverrideLoadAsync(cb func(LoadableIcon, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLoadAsync = 0
 	} else {
@@ -72,8 +72,8 @@ 		})
 	}
 }
 
-// GetCallbackLoadAsync gets the callback function.
-func (x *LoadableIconIface) GetCallbackLoadAsync() func(LoadableIcon, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLoadAsync gets the callback function.
+func (x *LoadableIconIface) GetLoadAsync() func(LoadableIcon, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLoadAsync == 0 {
 		return nil
 	}
@@ -84,8 +84,8 @@ 		rawCallback(IconVar.GoPointer(), SizeVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLoadFinish sets the callback function.
-func (x *LoadableIconIface) SetCallbackLoadFinish(cb func(LoadableIcon, AsyncResult, string) *InputStream) {
+// OverrideLoadFinish sets the callback function.
+func (x *LoadableIconIface) OverrideLoadFinish(cb func(LoadableIcon, AsyncResult, string) *InputStream) {
 	if cb == nil {
 		x.xLoadFinish = 0
 	} else {
@@ -99,8 +99,8 @@ 		})
 	}
 }
 
-// GetCallbackLoadFinish gets the callback function.
-func (x *LoadableIconIface) GetCallbackLoadFinish() func(LoadableIcon, AsyncResult, string) *InputStream {
+// GetLoadFinish gets the callback function.
+func (x *LoadableIconIface) GetLoadFinish() func(LoadableIcon, AsyncResult, string) *InputStream {
 	if x.xLoadFinish == 0 {
 		return nil
 	}
diff --git a/v4/gio/gmemoryinputstream.go b/v4/gio/gmemoryinputstream.go
index 6aa3c047f8d6f5f093a4ed918fade62c82b233db..82dda48375a837fd072c9d7b2ab648024ace8b33 100644
--- a/v4/gio/gmemoryinputstream.go
+++ b/v4/gio/gmemoryinputstream.go
@@ -31,8 +31,8 @@ func (x *MemoryInputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *MemoryInputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *MemoryInputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *MemoryInputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *MemoryInputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *MemoryInputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *MemoryInputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *MemoryInputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *MemoryInputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *MemoryInputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *MemoryInputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *MemoryInputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *MemoryInputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *MemoryInputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *MemoryInputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *MemoryInputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *MemoryInputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -123,8 +123,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *MemoryInputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *MemoryInputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -134,8 +134,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *MemoryInputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *MemoryInputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gmemorymonitor.go b/v4/gio/gmemorymonitor.go
index c0084e0310495149b5afdfc855eccb48e8b9cc10..a5d41d5a23c19e89bea98fe83c6b0f825b3ef648 100644
--- a/v4/gio/gmemorymonitor.go
+++ b/v4/gio/gmemorymonitor.go
@@ -23,8 +23,8 @@ func (x *MemoryMonitorInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackLowMemoryWarning sets the callback function.
-func (x *MemoryMonitorInterface) SetCallbackLowMemoryWarning(cb func(MemoryMonitor, MemoryMonitorWarningLevel)) {
+// OverrideLowMemoryWarning sets the callback function.
+func (x *MemoryMonitorInterface) OverrideLowMemoryWarning(cb func(MemoryMonitor, MemoryMonitorWarningLevel)) {
 	if cb == nil {
 		x.xLowMemoryWarning = 0
 	} else {
@@ -34,8 +34,8 @@ 		})
 	}
 }
 
-// GetCallbackLowMemoryWarning gets the callback function.
-func (x *MemoryMonitorInterface) GetCallbackLowMemoryWarning() func(MemoryMonitor, MemoryMonitorWarningLevel) {
+// GetLowMemoryWarning gets the callback function.
+func (x *MemoryMonitorInterface) GetLowMemoryWarning() func(MemoryMonitor, MemoryMonitorWarningLevel) {
 	if x.xLowMemoryWarning == 0 {
 		return nil
 	}
diff --git a/v4/gio/gmemoryoutputstream.go b/v4/gio/gmemoryoutputstream.go
index f16182efd89e342d4fa2b7cfd7c49646192f14b6..3b5d846b8517502902f373b74324d16da02a0daf 100644
--- a/v4/gio/gmemoryoutputstream.go
+++ b/v4/gio/gmemoryoutputstream.go
@@ -37,8 +37,8 @@ func (x *MemoryOutputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *MemoryOutputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *MemoryOutputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -48,8 +48,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *MemoryOutputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *MemoryOutputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -60,8 +60,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *MemoryOutputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *MemoryOutputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -71,8 +71,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *MemoryOutputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *MemoryOutputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -83,8 +83,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *MemoryOutputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *MemoryOutputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -94,8 +94,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *MemoryOutputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *MemoryOutputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -106,8 +106,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *MemoryOutputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *MemoryOutputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -117,8 +117,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *MemoryOutputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *MemoryOutputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -129,8 +129,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *MemoryOutputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *MemoryOutputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -140,8 +140,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *MemoryOutputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *MemoryOutputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gmenumodel.go b/v4/gio/gmenumodel.go
index e8ccd0088335780467e897f22d4917231c3f9610..a38f4611e824d19d0597d09f9a9dcdb382181f48 100644
--- a/v4/gio/gmenumodel.go
+++ b/v4/gio/gmenumodel.go
@@ -24,8 +24,8 @@ func (x *MenuAttributeIterClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetNext sets the callback function.
-func (x *MenuAttributeIterClass) SetCallbackGetNext(cb func(*MenuAttributeIter, string, **glib.Variant) bool) {
+// OverrideGetNext sets the callback function.
+func (x *MenuAttributeIterClass) OverrideGetNext(cb func(*MenuAttributeIter, string, **glib.Variant) bool) {
 	if cb == nil {
 		x.xGetNext = 0
 	} else {
@@ -35,8 +35,8 @@ 		})
 	}
 }
 
-// GetCallbackGetNext gets the callback function.
-func (x *MenuAttributeIterClass) GetCallbackGetNext() func(*MenuAttributeIter, string, **glib.Variant) bool {
+// GetGetNext gets the callback function.
+func (x *MenuAttributeIterClass) GetGetNext() func(*MenuAttributeIter, string, **glib.Variant) bool {
 	if x.xGetNext == 0 {
 		return nil
 	}
@@ -67,8 +67,8 @@ func (x *MenuLinkIterClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetNext sets the callback function.
-func (x *MenuLinkIterClass) SetCallbackGetNext(cb func(*MenuLinkIter, string, **MenuModel) bool) {
+// OverrideGetNext sets the callback function.
+func (x *MenuLinkIterClass) OverrideGetNext(cb func(*MenuLinkIter, string, **MenuModel) bool) {
 	if cb == nil {
 		x.xGetNext = 0
 	} else {
@@ -78,8 +78,8 @@ 		})
 	}
 }
 
-// GetCallbackGetNext gets the callback function.
-func (x *MenuLinkIterClass) GetCallbackGetNext() func(*MenuLinkIter, string, **MenuModel) bool {
+// GetGetNext gets the callback function.
+func (x *MenuLinkIterClass) GetGetNext() func(*MenuLinkIter, string, **MenuModel) bool {
 	if x.xGetNext == 0 {
 		return nil
 	}
@@ -124,8 +124,8 @@ func (x *MenuModelClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackIsMutable sets the callback function.
-func (x *MenuModelClass) SetCallbackIsMutable(cb func(*MenuModel) bool) {
+// OverrideIsMutable sets the callback function.
+func (x *MenuModelClass) OverrideIsMutable(cb func(*MenuModel) bool) {
 	if cb == nil {
 		x.xIsMutable = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackIsMutable gets the callback function.
-func (x *MenuModelClass) GetCallbackIsMutable() func(*MenuModel) bool {
+// GetIsMutable gets the callback function.
+func (x *MenuModelClass) GetIsMutable() func(*MenuModel) bool {
 	if x.xIsMutable == 0 {
 		return nil
 	}
@@ -147,8 +147,8 @@ 		return rawCallback(ModelVar.GoPointer())
 	}
 }
 
-// SetCallbackGetNItems sets the callback function.
-func (x *MenuModelClass) SetCallbackGetNItems(cb func(*MenuModel) int) {
+// OverrideGetNItems sets the callback function.
+func (x *MenuModelClass) OverrideGetNItems(cb func(*MenuModel) int) {
 	if cb == nil {
 		x.xGetNItems = 0
 	} else {
@@ -158,8 +158,8 @@ 		})
 	}
 }
 
-// GetCallbackGetNItems gets the callback function.
-func (x *MenuModelClass) GetCallbackGetNItems() func(*MenuModel) int {
+// GetGetNItems gets the callback function.
+func (x *MenuModelClass) GetGetNItems() func(*MenuModel) int {
 	if x.xGetNItems == 0 {
 		return nil
 	}
@@ -170,8 +170,8 @@ 		return rawCallback(ModelVar.GoPointer())
 	}
 }
 
-// SetCallbackGetItemAttributes sets the callback function.
-func (x *MenuModelClass) SetCallbackGetItemAttributes(cb func(*MenuModel, int, **glib.HashTable)) {
+// OverrideGetItemAttributes sets the callback function.
+func (x *MenuModelClass) OverrideGetItemAttributes(cb func(*MenuModel, int, **glib.HashTable)) {
 	if cb == nil {
 		x.xGetItemAttributes = 0
 	} else {
@@ -181,8 +181,8 @@ 		})
 	}
 }
 
-// GetCallbackGetItemAttributes gets the callback function.
-func (x *MenuModelClass) GetCallbackGetItemAttributes() func(*MenuModel, int, **glib.HashTable) {
+// GetGetItemAttributes gets the callback function.
+func (x *MenuModelClass) GetGetItemAttributes() func(*MenuModel, int, **glib.HashTable) {
 	if x.xGetItemAttributes == 0 {
 		return nil
 	}
@@ -193,8 +193,8 @@ 		rawCallback(ModelVar.GoPointer(), ItemIndexVar, AttributesVar)
 	}
 }
 
-// SetCallbackIterateItemAttributes sets the callback function.
-func (x *MenuModelClass) SetCallbackIterateItemAttributes(cb func(*MenuModel, int) *MenuAttributeIter) {
+// OverrideIterateItemAttributes sets the callback function.
+func (x *MenuModelClass) OverrideIterateItemAttributes(cb func(*MenuModel, int) *MenuAttributeIter) {
 	if cb == nil {
 		x.xIterateItemAttributes = 0
 	} else {
@@ -208,8 +208,8 @@ 		})
 	}
 }
 
-// GetCallbackIterateItemAttributes gets the callback function.
-func (x *MenuModelClass) GetCallbackIterateItemAttributes() func(*MenuModel, int) *MenuAttributeIter {
+// GetIterateItemAttributes gets the callback function.
+func (x *MenuModelClass) GetIterateItemAttributes() func(*MenuModel, int) *MenuAttributeIter {
 	if x.xIterateItemAttributes == 0 {
 		return nil
 	}
@@ -226,8 +226,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetItemAttributeValue sets the callback function.
-func (x *MenuModelClass) SetCallbackGetItemAttributeValue(cb func(*MenuModel, int, string, *glib.VariantType) *glib.Variant) {
+// OverrideGetItemAttributeValue sets the callback function.
+func (x *MenuModelClass) OverrideGetItemAttributeValue(cb func(*MenuModel, int, string, *glib.VariantType) *glib.Variant) {
 	if cb == nil {
 		x.xGetItemAttributeValue = 0
 	} else {
@@ -237,8 +237,8 @@ 		})
 	}
 }
 
-// GetCallbackGetItemAttributeValue gets the callback function.
-func (x *MenuModelClass) GetCallbackGetItemAttributeValue() func(*MenuModel, int, string, *glib.VariantType) *glib.Variant {
+// GetGetItemAttributeValue gets the callback function.
+func (x *MenuModelClass) GetGetItemAttributeValue() func(*MenuModel, int, string, *glib.VariantType) *glib.Variant {
 	if x.xGetItemAttributeValue == 0 {
 		return nil
 	}
@@ -249,8 +249,8 @@ 		return rawCallback(ModelVar.GoPointer(), ItemIndexVar, AttributeVar, ExpectedTypeVar)
 	}
 }
 
-// SetCallbackGetItemLinks sets the callback function.
-func (x *MenuModelClass) SetCallbackGetItemLinks(cb func(*MenuModel, int, **glib.HashTable)) {
+// OverrideGetItemLinks sets the callback function.
+func (x *MenuModelClass) OverrideGetItemLinks(cb func(*MenuModel, int, **glib.HashTable)) {
 	if cb == nil {
 		x.xGetItemLinks = 0
 	} else {
@@ -260,8 +260,8 @@ 		})
 	}
 }
 
-// GetCallbackGetItemLinks gets the callback function.
-func (x *MenuModelClass) GetCallbackGetItemLinks() func(*MenuModel, int, **glib.HashTable) {
+// GetGetItemLinks gets the callback function.
+func (x *MenuModelClass) GetGetItemLinks() func(*MenuModel, int, **glib.HashTable) {
 	if x.xGetItemLinks == 0 {
 		return nil
 	}
@@ -272,8 +272,8 @@ 		rawCallback(ModelVar.GoPointer(), ItemIndexVar, LinksVar)
 	}
 }
 
-// SetCallbackIterateItemLinks sets the callback function.
-func (x *MenuModelClass) SetCallbackIterateItemLinks(cb func(*MenuModel, int) *MenuLinkIter) {
+// OverrideIterateItemLinks sets the callback function.
+func (x *MenuModelClass) OverrideIterateItemLinks(cb func(*MenuModel, int) *MenuLinkIter) {
 	if cb == nil {
 		x.xIterateItemLinks = 0
 	} else {
@@ -287,8 +287,8 @@ 		})
 	}
 }
 
-// GetCallbackIterateItemLinks gets the callback function.
-func (x *MenuModelClass) GetCallbackIterateItemLinks() func(*MenuModel, int) *MenuLinkIter {
+// GetIterateItemLinks gets the callback function.
+func (x *MenuModelClass) GetIterateItemLinks() func(*MenuModel, int) *MenuLinkIter {
 	if x.xIterateItemLinks == 0 {
 		return nil
 	}
@@ -305,8 +305,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetItemLink sets the callback function.
-func (x *MenuModelClass) SetCallbackGetItemLink(cb func(*MenuModel, int, string) *MenuModel) {
+// OverrideGetItemLink sets the callback function.
+func (x *MenuModelClass) OverrideGetItemLink(cb func(*MenuModel, int, string) *MenuModel) {
 	if cb == nil {
 		x.xGetItemLink = 0
 	} else {
@@ -320,8 +320,8 @@ 		})
 	}
 }
 
-// GetCallbackGetItemLink gets the callback function.
-func (x *MenuModelClass) GetCallbackGetItemLink() func(*MenuModel, int, string) *MenuModel {
+// GetGetItemLink gets the callback function.
+func (x *MenuModelClass) GetGetItemLink() func(*MenuModel, int, string) *MenuModel {
 	if x.xGetItemLink == 0 {
 		return nil
 	}
diff --git a/v4/gio/gmount.go b/v4/gio/gmount.go
index fa84c96226ecf21defbb57a8ca46b35b591aa005..495ccb391d9cf697704fbce739d65487165e1950 100644
--- a/v4/gio/gmount.go
+++ b/v4/gio/gmount.go
@@ -76,8 +76,8 @@ func (x *MountIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *MountIface) SetCallbackChanged(cb func(Mount)) {
+// OverrideChanged sets the callback function.
+func (x *MountIface) OverrideChanged(cb func(Mount)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *MountIface) GetCallbackChanged() func(Mount) {
+// GetChanged gets the callback function.
+func (x *MountIface) GetChanged() func(Mount) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -99,8 +99,8 @@ 		rawCallback(MountVar.GoPointer())
 	}
 }
 
-// SetCallbackUnmounted sets the callback function.
-func (x *MountIface) SetCallbackUnmounted(cb func(Mount)) {
+// OverrideUnmounted sets the callback function.
+func (x *MountIface) OverrideUnmounted(cb func(Mount)) {
 	if cb == nil {
 		x.xUnmounted = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmounted gets the callback function.
-func (x *MountIface) GetCallbackUnmounted() func(Mount) {
+// GetUnmounted gets the callback function.
+func (x *MountIface) GetUnmounted() func(Mount) {
 	if x.xUnmounted == 0 {
 		return nil
 	}
@@ -122,8 +122,8 @@ 		rawCallback(MountVar.GoPointer())
 	}
 }
 
-// SetCallbackGetRoot sets the callback function.
-func (x *MountIface) SetCallbackGetRoot(cb func(Mount) *FileBase) {
+// OverrideGetRoot sets the callback function.
+func (x *MountIface) OverrideGetRoot(cb func(Mount) *FileBase) {
 	if cb == nil {
 		x.xGetRoot = 0
 	} else {
@@ -137,8 +137,8 @@ 		})
 	}
 }
 
-// GetCallbackGetRoot gets the callback function.
-func (x *MountIface) GetCallbackGetRoot() func(Mount) *FileBase {
+// GetGetRoot gets the callback function.
+func (x *MountIface) GetGetRoot() func(Mount) *FileBase {
 	if x.xGetRoot == 0 {
 		return nil
 	}
@@ -155,8 +155,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetName sets the callback function.
-func (x *MountIface) SetCallbackGetName(cb func(Mount) string) {
+// OverrideGetName sets the callback function.
+func (x *MountIface) OverrideGetName(cb func(Mount) string) {
 	if cb == nil {
 		x.xGetName = 0
 	} else {
@@ -166,8 +166,8 @@ 		})
 	}
 }
 
-// GetCallbackGetName gets the callback function.
-func (x *MountIface) GetCallbackGetName() func(Mount) string {
+// GetGetName gets the callback function.
+func (x *MountIface) GetGetName() func(Mount) string {
 	if x.xGetName == 0 {
 		return nil
 	}
@@ -178,8 +178,8 @@ 		return rawCallback(MountVar.GoPointer())
 	}
 }
 
-// SetCallbackGetIcon sets the callback function.
-func (x *MountIface) SetCallbackGetIcon(cb func(Mount) *IconBase) {
+// OverrideGetIcon sets the callback function.
+func (x *MountIface) OverrideGetIcon(cb func(Mount) *IconBase) {
 	if cb == nil {
 		x.xGetIcon = 0
 	} else {
@@ -193,8 +193,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIcon gets the callback function.
-func (x *MountIface) GetCallbackGetIcon() func(Mount) *IconBase {
+// GetGetIcon gets the callback function.
+func (x *MountIface) GetGetIcon() func(Mount) *IconBase {
 	if x.xGetIcon == 0 {
 		return nil
 	}
@@ -211,8 +211,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetUuid sets the callback function.
-func (x *MountIface) SetCallbackGetUuid(cb func(Mount) string) {
+// OverrideGetUuid sets the callback function.
+func (x *MountIface) OverrideGetUuid(cb func(Mount) string) {
 	if cb == nil {
 		x.xGetUuid = 0
 	} else {
@@ -222,8 +222,8 @@ 		})
 	}
 }
 
-// GetCallbackGetUuid gets the callback function.
-func (x *MountIface) GetCallbackGetUuid() func(Mount) string {
+// GetGetUuid gets the callback function.
+func (x *MountIface) GetGetUuid() func(Mount) string {
 	if x.xGetUuid == 0 {
 		return nil
 	}
@@ -234,8 +234,8 @@ 		return rawCallback(MountVar.GoPointer())
 	}
 }
 
-// SetCallbackGetVolume sets the callback function.
-func (x *MountIface) SetCallbackGetVolume(cb func(Mount) *VolumeBase) {
+// OverrideGetVolume sets the callback function.
+func (x *MountIface) OverrideGetVolume(cb func(Mount) *VolumeBase) {
 	if cb == nil {
 		x.xGetVolume = 0
 	} else {
@@ -249,8 +249,8 @@ 		})
 	}
 }
 
-// GetCallbackGetVolume gets the callback function.
-func (x *MountIface) GetCallbackGetVolume() func(Mount) *VolumeBase {
+// GetGetVolume gets the callback function.
+func (x *MountIface) GetGetVolume() func(Mount) *VolumeBase {
 	if x.xGetVolume == 0 {
 		return nil
 	}
@@ -267,8 +267,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetDrive sets the callback function.
-func (x *MountIface) SetCallbackGetDrive(cb func(Mount) *DriveBase) {
+// OverrideGetDrive sets the callback function.
+func (x *MountIface) OverrideGetDrive(cb func(Mount) *DriveBase) {
 	if cb == nil {
 		x.xGetDrive = 0
 	} else {
@@ -282,8 +282,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDrive gets the callback function.
-func (x *MountIface) GetCallbackGetDrive() func(Mount) *DriveBase {
+// GetGetDrive gets the callback function.
+func (x *MountIface) GetGetDrive() func(Mount) *DriveBase {
 	if x.xGetDrive == 0 {
 		return nil
 	}
@@ -300,8 +300,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCanUnmount sets the callback function.
-func (x *MountIface) SetCallbackCanUnmount(cb func(Mount) bool) {
+// OverrideCanUnmount sets the callback function.
+func (x *MountIface) OverrideCanUnmount(cb func(Mount) bool) {
 	if cb == nil {
 		x.xCanUnmount = 0
 	} else {
@@ -311,8 +311,8 @@ 		})
 	}
 }
 
-// GetCallbackCanUnmount gets the callback function.
-func (x *MountIface) GetCallbackCanUnmount() func(Mount) bool {
+// GetCanUnmount gets the callback function.
+func (x *MountIface) GetCanUnmount() func(Mount) bool {
 	if x.xCanUnmount == 0 {
 		return nil
 	}
@@ -323,8 +323,8 @@ 		return rawCallback(MountVar.GoPointer())
 	}
 }
 
-// SetCallbackCanEject sets the callback function.
-func (x *MountIface) SetCallbackCanEject(cb func(Mount) bool) {
+// OverrideCanEject sets the callback function.
+func (x *MountIface) OverrideCanEject(cb func(Mount) bool) {
 	if cb == nil {
 		x.xCanEject = 0
 	} else {
@@ -334,8 +334,8 @@ 		})
 	}
 }
 
-// GetCallbackCanEject gets the callback function.
-func (x *MountIface) GetCallbackCanEject() func(Mount) bool {
+// GetCanEject gets the callback function.
+func (x *MountIface) GetCanEject() func(Mount) bool {
 	if x.xCanEject == 0 {
 		return nil
 	}
@@ -346,8 +346,8 @@ 		return rawCallback(MountVar.GoPointer())
 	}
 }
 
-// SetCallbackUnmount sets the callback function.
-func (x *MountIface) SetCallbackUnmount(cb func(Mount, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideUnmount sets the callback function.
+func (x *MountIface) OverrideUnmount(cb func(Mount, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xUnmount = 0
 	} else {
@@ -357,8 +357,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmount gets the callback function.
-func (x *MountIface) GetCallbackUnmount() func(Mount, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetUnmount gets the callback function.
+func (x *MountIface) GetUnmount() func(Mount, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xUnmount == 0 {
 		return nil
 	}
@@ -369,8 +369,8 @@ 		rawCallback(MountVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackUnmountFinish sets the callback function.
-func (x *MountIface) SetCallbackUnmountFinish(cb func(Mount, AsyncResult) bool) {
+// OverrideUnmountFinish sets the callback function.
+func (x *MountIface) OverrideUnmountFinish(cb func(Mount, AsyncResult) bool) {
 	if cb == nil {
 		x.xUnmountFinish = 0
 	} else {
@@ -380,8 +380,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmountFinish gets the callback function.
-func (x *MountIface) GetCallbackUnmountFinish() func(Mount, AsyncResult) bool {
+// GetUnmountFinish gets the callback function.
+func (x *MountIface) GetUnmountFinish() func(Mount, AsyncResult) bool {
 	if x.xUnmountFinish == 0 {
 		return nil
 	}
@@ -392,8 +392,8 @@ 		return rawCallback(MountVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackEject sets the callback function.
-func (x *MountIface) SetCallbackEject(cb func(Mount, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideEject sets the callback function.
+func (x *MountIface) OverrideEject(cb func(Mount, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xEject = 0
 	} else {
@@ -403,8 +403,8 @@ 		})
 	}
 }
 
-// GetCallbackEject gets the callback function.
-func (x *MountIface) GetCallbackEject() func(Mount, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetEject gets the callback function.
+func (x *MountIface) GetEject() func(Mount, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xEject == 0 {
 		return nil
 	}
@@ -415,8 +415,8 @@ 		rawCallback(MountVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackEjectFinish sets the callback function.
-func (x *MountIface) SetCallbackEjectFinish(cb func(Mount, AsyncResult) bool) {
+// OverrideEjectFinish sets the callback function.
+func (x *MountIface) OverrideEjectFinish(cb func(Mount, AsyncResult) bool) {
 	if cb == nil {
 		x.xEjectFinish = 0
 	} else {
@@ -426,8 +426,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectFinish gets the callback function.
-func (x *MountIface) GetCallbackEjectFinish() func(Mount, AsyncResult) bool {
+// GetEjectFinish gets the callback function.
+func (x *MountIface) GetEjectFinish() func(Mount, AsyncResult) bool {
 	if x.xEjectFinish == 0 {
 		return nil
 	}
@@ -438,8 +438,8 @@ 		return rawCallback(MountVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackRemount sets the callback function.
-func (x *MountIface) SetCallbackRemount(cb func(Mount, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideRemount sets the callback function.
+func (x *MountIface) OverrideRemount(cb func(Mount, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xRemount = 0
 	} else {
@@ -449,8 +449,8 @@ 		})
 	}
 }
 
-// GetCallbackRemount gets the callback function.
-func (x *MountIface) GetCallbackRemount() func(Mount, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetRemount gets the callback function.
+func (x *MountIface) GetRemount() func(Mount, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xRemount == 0 {
 		return nil
 	}
@@ -461,8 +461,8 @@ 		rawCallback(MountVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackRemountFinish sets the callback function.
-func (x *MountIface) SetCallbackRemountFinish(cb func(Mount, AsyncResult) bool) {
+// OverrideRemountFinish sets the callback function.
+func (x *MountIface) OverrideRemountFinish(cb func(Mount, AsyncResult) bool) {
 	if cb == nil {
 		x.xRemountFinish = 0
 	} else {
@@ -472,8 +472,8 @@ 		})
 	}
 }
 
-// GetCallbackRemountFinish gets the callback function.
-func (x *MountIface) GetCallbackRemountFinish() func(Mount, AsyncResult) bool {
+// GetRemountFinish gets the callback function.
+func (x *MountIface) GetRemountFinish() func(Mount, AsyncResult) bool {
 	if x.xRemountFinish == 0 {
 		return nil
 	}
@@ -484,8 +484,8 @@ 		return rawCallback(MountVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGuessContentType sets the callback function.
-func (x *MountIface) SetCallbackGuessContentType(cb func(Mount, bool, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideGuessContentType sets the callback function.
+func (x *MountIface) OverrideGuessContentType(cb func(Mount, bool, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xGuessContentType = 0
 	} else {
@@ -495,8 +495,8 @@ 		})
 	}
 }
 
-// GetCallbackGuessContentType gets the callback function.
-func (x *MountIface) GetCallbackGuessContentType() func(Mount, bool, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetGuessContentType gets the callback function.
+func (x *MountIface) GetGuessContentType() func(Mount, bool, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xGuessContentType == 0 {
 		return nil
 	}
@@ -507,8 +507,8 @@ 		rawCallback(MountVar.GoPointer(), ForceRescanVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackGuessContentTypeFinish sets the callback function.
-func (x *MountIface) SetCallbackGuessContentTypeFinish(cb func(Mount, AsyncResult) []string) {
+// OverrideGuessContentTypeFinish sets the callback function.
+func (x *MountIface) OverrideGuessContentTypeFinish(cb func(Mount, AsyncResult) []string) {
 	if cb == nil {
 		x.xGuessContentTypeFinish = 0
 	} else {
@@ -518,8 +518,8 @@ 		})
 	}
 }
 
-// GetCallbackGuessContentTypeFinish gets the callback function.
-func (x *MountIface) GetCallbackGuessContentTypeFinish() func(Mount, AsyncResult) []string {
+// GetGuessContentTypeFinish gets the callback function.
+func (x *MountIface) GetGuessContentTypeFinish() func(Mount, AsyncResult) []string {
 	if x.xGuessContentTypeFinish == 0 {
 		return nil
 	}
@@ -530,8 +530,8 @@ 		return rawCallback(MountVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGuessContentTypeSync sets the callback function.
-func (x *MountIface) SetCallbackGuessContentTypeSync(cb func(Mount, bool, *Cancellable) []string) {
+// OverrideGuessContentTypeSync sets the callback function.
+func (x *MountIface) OverrideGuessContentTypeSync(cb func(Mount, bool, *Cancellable) []string) {
 	if cb == nil {
 		x.xGuessContentTypeSync = 0
 	} else {
@@ -541,8 +541,8 @@ 		})
 	}
 }
 
-// GetCallbackGuessContentTypeSync gets the callback function.
-func (x *MountIface) GetCallbackGuessContentTypeSync() func(Mount, bool, *Cancellable) []string {
+// GetGuessContentTypeSync gets the callback function.
+func (x *MountIface) GetGuessContentTypeSync() func(Mount, bool, *Cancellable) []string {
 	if x.xGuessContentTypeSync == 0 {
 		return nil
 	}
@@ -553,8 +553,8 @@ 		return rawCallback(MountVar.GoPointer(), ForceRescanVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackPreUnmount sets the callback function.
-func (x *MountIface) SetCallbackPreUnmount(cb func(Mount)) {
+// OverridePreUnmount sets the callback function.
+func (x *MountIface) OverridePreUnmount(cb func(Mount)) {
 	if cb == nil {
 		x.xPreUnmount = 0
 	} else {
@@ -564,8 +564,8 @@ 		})
 	}
 }
 
-// GetCallbackPreUnmount gets the callback function.
-func (x *MountIface) GetCallbackPreUnmount() func(Mount) {
+// GetPreUnmount gets the callback function.
+func (x *MountIface) GetPreUnmount() func(Mount) {
 	if x.xPreUnmount == 0 {
 		return nil
 	}
@@ -576,8 +576,8 @@ 		rawCallback(MountVar.GoPointer())
 	}
 }
 
-// SetCallbackUnmountWithOperation sets the callback function.
-func (x *MountIface) SetCallbackUnmountWithOperation(cb func(Mount, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideUnmountWithOperation sets the callback function.
+func (x *MountIface) OverrideUnmountWithOperation(cb func(Mount, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xUnmountWithOperation = 0
 	} else {
@@ -587,8 +587,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmountWithOperation gets the callback function.
-func (x *MountIface) GetCallbackUnmountWithOperation() func(Mount, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetUnmountWithOperation gets the callback function.
+func (x *MountIface) GetUnmountWithOperation() func(Mount, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xUnmountWithOperation == 0 {
 		return nil
 	}
@@ -599,8 +599,8 @@ 		rawCallback(MountVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackUnmountWithOperationFinish sets the callback function.
-func (x *MountIface) SetCallbackUnmountWithOperationFinish(cb func(Mount, AsyncResult) bool) {
+// OverrideUnmountWithOperationFinish sets the callback function.
+func (x *MountIface) OverrideUnmountWithOperationFinish(cb func(Mount, AsyncResult) bool) {
 	if cb == nil {
 		x.xUnmountWithOperationFinish = 0
 	} else {
@@ -610,8 +610,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmountWithOperationFinish gets the callback function.
-func (x *MountIface) GetCallbackUnmountWithOperationFinish() func(Mount, AsyncResult) bool {
+// GetUnmountWithOperationFinish gets the callback function.
+func (x *MountIface) GetUnmountWithOperationFinish() func(Mount, AsyncResult) bool {
 	if x.xUnmountWithOperationFinish == 0 {
 		return nil
 	}
@@ -622,8 +622,8 @@ 		return rawCallback(MountVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackEjectWithOperation sets the callback function.
-func (x *MountIface) SetCallbackEjectWithOperation(cb func(Mount, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideEjectWithOperation sets the callback function.
+func (x *MountIface) OverrideEjectWithOperation(cb func(Mount, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xEjectWithOperation = 0
 	} else {
@@ -633,8 +633,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectWithOperation gets the callback function.
-func (x *MountIface) GetCallbackEjectWithOperation() func(Mount, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetEjectWithOperation gets the callback function.
+func (x *MountIface) GetEjectWithOperation() func(Mount, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xEjectWithOperation == 0 {
 		return nil
 	}
@@ -645,8 +645,8 @@ 		rawCallback(MountVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackEjectWithOperationFinish sets the callback function.
-func (x *MountIface) SetCallbackEjectWithOperationFinish(cb func(Mount, AsyncResult) bool) {
+// OverrideEjectWithOperationFinish sets the callback function.
+func (x *MountIface) OverrideEjectWithOperationFinish(cb func(Mount, AsyncResult) bool) {
 	if cb == nil {
 		x.xEjectWithOperationFinish = 0
 	} else {
@@ -656,8 +656,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectWithOperationFinish gets the callback function.
-func (x *MountIface) GetCallbackEjectWithOperationFinish() func(Mount, AsyncResult) bool {
+// GetEjectWithOperationFinish gets the callback function.
+func (x *MountIface) GetEjectWithOperationFinish() func(Mount, AsyncResult) bool {
 	if x.xEjectWithOperationFinish == 0 {
 		return nil
 	}
@@ -668,8 +668,8 @@ 		return rawCallback(MountVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGetDefaultLocation sets the callback function.
-func (x *MountIface) SetCallbackGetDefaultLocation(cb func(Mount) *FileBase) {
+// OverrideGetDefaultLocation sets the callback function.
+func (x *MountIface) OverrideGetDefaultLocation(cb func(Mount) *FileBase) {
 	if cb == nil {
 		x.xGetDefaultLocation = 0
 	} else {
@@ -683,8 +683,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDefaultLocation gets the callback function.
-func (x *MountIface) GetCallbackGetDefaultLocation() func(Mount) *FileBase {
+// GetGetDefaultLocation gets the callback function.
+func (x *MountIface) GetGetDefaultLocation() func(Mount) *FileBase {
 	if x.xGetDefaultLocation == 0 {
 		return nil
 	}
@@ -701,8 +701,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetSortKey sets the callback function.
-func (x *MountIface) SetCallbackGetSortKey(cb func(Mount) string) {
+// OverrideGetSortKey sets the callback function.
+func (x *MountIface) OverrideGetSortKey(cb func(Mount) string) {
 	if cb == nil {
 		x.xGetSortKey = 0
 	} else {
@@ -712,8 +712,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSortKey gets the callback function.
-func (x *MountIface) GetCallbackGetSortKey() func(Mount) string {
+// GetGetSortKey gets the callback function.
+func (x *MountIface) GetGetSortKey() func(Mount) string {
 	if x.xGetSortKey == 0 {
 		return nil
 	}
@@ -724,8 +724,8 @@ 		return rawCallback(MountVar.GoPointer())
 	}
 }
 
-// SetCallbackGetSymbolicIcon sets the callback function.
-func (x *MountIface) SetCallbackGetSymbolicIcon(cb func(Mount) *IconBase) {
+// OverrideGetSymbolicIcon sets the callback function.
+func (x *MountIface) OverrideGetSymbolicIcon(cb func(Mount) *IconBase) {
 	if cb == nil {
 		x.xGetSymbolicIcon = 0
 	} else {
@@ -739,8 +739,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSymbolicIcon gets the callback function.
-func (x *MountIface) GetCallbackGetSymbolicIcon() func(Mount) *IconBase {
+// GetGetSymbolicIcon gets the callback function.
+func (x *MountIface) GetGetSymbolicIcon() func(Mount) *IconBase {
 	if x.xGetSymbolicIcon == 0 {
 		return nil
 	}
diff --git a/v4/gio/gmountoperation.go b/v4/gio/gmountoperation.go
index 7aa50ca30f9c9dbb3493bbaa5bc00ba697e29848..f5ac101f9041de99511338106105376e76e710e2 100644
--- a/v4/gio/gmountoperation.go
+++ b/v4/gio/gmountoperation.go
@@ -52,8 +52,8 @@ func (x *MountOperationClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackAskPassword sets the callback function.
-func (x *MountOperationClass) SetCallbackAskPassword(cb func(*MountOperation, string, string, string, AskPasswordFlags)) {
+// OverrideAskPassword sets the callback function.
+func (x *MountOperationClass) OverrideAskPassword(cb func(*MountOperation, string, string, string, AskPasswordFlags)) {
 	if cb == nil {
 		x.xAskPassword = 0
 	} else {
@@ -63,8 +63,8 @@ 		})
 	}
 }
 
-// GetCallbackAskPassword gets the callback function.
-func (x *MountOperationClass) GetCallbackAskPassword() func(*MountOperation, string, string, string, AskPasswordFlags) {
+// GetAskPassword gets the callback function.
+func (x *MountOperationClass) GetAskPassword() func(*MountOperation, string, string, string, AskPasswordFlags) {
 	if x.xAskPassword == 0 {
 		return nil
 	}
@@ -75,8 +75,8 @@ 		rawCallback(OpVar.GoPointer(), MessageVar, DefaultUserVar, DefaultDomainVar, FlagsVar)
 	}
 }
 
-// SetCallbackAskQuestion sets the callback function.
-func (x *MountOperationClass) SetCallbackAskQuestion(cb func(*MountOperation, string, []string)) {
+// OverrideAskQuestion sets the callback function.
+func (x *MountOperationClass) OverrideAskQuestion(cb func(*MountOperation, string, []string)) {
 	if cb == nil {
 		x.xAskQuestion = 0
 	} else {
@@ -86,8 +86,8 @@ 		})
 	}
 }
 
-// GetCallbackAskQuestion gets the callback function.
-func (x *MountOperationClass) GetCallbackAskQuestion() func(*MountOperation, string, []string) {
+// GetAskQuestion gets the callback function.
+func (x *MountOperationClass) GetAskQuestion() func(*MountOperation, string, []string) {
 	if x.xAskQuestion == 0 {
 		return nil
 	}
@@ -98,8 +98,8 @@ 		rawCallback(OpVar.GoPointer(), MessageVar, ChoicesVar)
 	}
 }
 
-// SetCallbackReply sets the callback function.
-func (x *MountOperationClass) SetCallbackReply(cb func(*MountOperation, MountOperationResult)) {
+// OverrideReply sets the callback function.
+func (x *MountOperationClass) OverrideReply(cb func(*MountOperation, MountOperationResult)) {
 	if cb == nil {
 		x.xReply = 0
 	} else {
@@ -109,8 +109,8 @@ 		})
 	}
 }
 
-// GetCallbackReply gets the callback function.
-func (x *MountOperationClass) GetCallbackReply() func(*MountOperation, MountOperationResult) {
+// GetReply gets the callback function.
+func (x *MountOperationClass) GetReply() func(*MountOperation, MountOperationResult) {
 	if x.xReply == 0 {
 		return nil
 	}
@@ -121,8 +121,8 @@ 		rawCallback(OpVar.GoPointer(), ResultVar)
 	}
 }
 
-// SetCallbackAborted sets the callback function.
-func (x *MountOperationClass) SetCallbackAborted(cb func(*MountOperation)) {
+// OverrideAborted sets the callback function.
+func (x *MountOperationClass) OverrideAborted(cb func(*MountOperation)) {
 	if cb == nil {
 		x.xAborted = 0
 	} else {
@@ -132,8 +132,8 @@ 		})
 	}
 }
 
-// GetCallbackAborted gets the callback function.
-func (x *MountOperationClass) GetCallbackAborted() func(*MountOperation) {
+// GetAborted gets the callback function.
+func (x *MountOperationClass) GetAborted() func(*MountOperation) {
 	if x.xAborted == 0 {
 		return nil
 	}
@@ -144,8 +144,8 @@ 		rawCallback(OpVar.GoPointer())
 	}
 }
 
-// SetCallbackShowProcesses sets the callback function.
-func (x *MountOperationClass) SetCallbackShowProcesses(cb func(*MountOperation, string, []glib.Pid, []string)) {
+// OverrideShowProcesses sets the callback function.
+func (x *MountOperationClass) OverrideShowProcesses(cb func(*MountOperation, string, []glib.Pid, []string)) {
 	if cb == nil {
 		x.xShowProcesses = 0
 	} else {
@@ -155,8 +155,8 @@ 		})
 	}
 }
 
-// GetCallbackShowProcesses gets the callback function.
-func (x *MountOperationClass) GetCallbackShowProcesses() func(*MountOperation, string, []glib.Pid, []string) {
+// GetShowProcesses gets the callback function.
+func (x *MountOperationClass) GetShowProcesses() func(*MountOperation, string, []glib.Pid, []string) {
 	if x.xShowProcesses == 0 {
 		return nil
 	}
@@ -167,8 +167,8 @@ 		rawCallback(OpVar.GoPointer(), MessageVar, ProcessesVar, ChoicesVar)
 	}
 }
 
-// SetCallbackShowUnmountProgress sets the callback function.
-func (x *MountOperationClass) SetCallbackShowUnmountProgress(cb func(*MountOperation, string, int64, int64)) {
+// OverrideShowUnmountProgress sets the callback function.
+func (x *MountOperationClass) OverrideShowUnmountProgress(cb func(*MountOperation, string, int64, int64)) {
 	if cb == nil {
 		x.xShowUnmountProgress = 0
 	} else {
@@ -178,8 +178,8 @@ 		})
 	}
 }
 
-// GetCallbackShowUnmountProgress gets the callback function.
-func (x *MountOperationClass) GetCallbackShowUnmountProgress() func(*MountOperation, string, int64, int64) {
+// GetShowUnmountProgress gets the callback function.
+func (x *MountOperationClass) GetShowUnmountProgress() func(*MountOperation, string, int64, int64) {
 	if x.xShowUnmountProgress == 0 {
 		return nil
 	}
@@ -190,8 +190,8 @@ 		rawCallback(OpVar.GoPointer(), MessageVar, TimeLeftVar, BytesLeftVar)
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *MountOperationClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *MountOperationClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -201,8 +201,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *MountOperationClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *MountOperationClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -213,8 +213,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *MountOperationClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *MountOperationClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -224,8 +224,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *MountOperationClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *MountOperationClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -236,8 +236,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *MountOperationClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *MountOperationClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -247,8 +247,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *MountOperationClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *MountOperationClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -259,8 +259,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *MountOperationClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *MountOperationClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -270,8 +270,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *MountOperationClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *MountOperationClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -282,8 +282,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *MountOperationClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *MountOperationClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -293,8 +293,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *MountOperationClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *MountOperationClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -305,8 +305,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *MountOperationClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *MountOperationClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -316,8 +316,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *MountOperationClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *MountOperationClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
@@ -328,8 +328,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved7 sets the callback function.
-func (x *MountOperationClass) SetCallbackGReserved7(cb func()) {
+// OverrideGReserved7 sets the callback function.
+func (x *MountOperationClass) OverrideGReserved7(cb func()) {
 	if cb == nil {
 		x.xGReserved7 = 0
 	} else {
@@ -339,8 +339,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved7 gets the callback function.
-func (x *MountOperationClass) GetCallbackGReserved7() func() {
+// GetGReserved7 gets the callback function.
+func (x *MountOperationClass) GetGReserved7() func() {
 	if x.xGReserved7 == 0 {
 		return nil
 	}
@@ -351,8 +351,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved8 sets the callback function.
-func (x *MountOperationClass) SetCallbackGReserved8(cb func()) {
+// OverrideGReserved8 sets the callback function.
+func (x *MountOperationClass) OverrideGReserved8(cb func()) {
 	if cb == nil {
 		x.xGReserved8 = 0
 	} else {
@@ -362,8 +362,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved8 gets the callback function.
-func (x *MountOperationClass) GetCallbackGReserved8() func() {
+// GetGReserved8 gets the callback function.
+func (x *MountOperationClass) GetGReserved8() func() {
 	if x.xGReserved8 == 0 {
 		return nil
 	}
@@ -374,8 +374,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved9 sets the callback function.
-func (x *MountOperationClass) SetCallbackGReserved9(cb func()) {
+// OverrideGReserved9 sets the callback function.
+func (x *MountOperationClass) OverrideGReserved9(cb func()) {
 	if cb == nil {
 		x.xGReserved9 = 0
 	} else {
@@ -385,8 +385,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved9 gets the callback function.
-func (x *MountOperationClass) GetCallbackGReserved9() func() {
+// GetGReserved9 gets the callback function.
+func (x *MountOperationClass) GetGReserved9() func() {
 	if x.xGReserved9 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gnativevolumemonitor.go b/v4/gio/gnativevolumemonitor.go
index 7d356af4f6f68ee733f8194c0e63e2c5bc642fa1..126f69225057265ecc25ebecf9efb75955a09ce5 100644
--- a/v4/gio/gnativevolumemonitor.go
+++ b/v4/gio/gnativevolumemonitor.go
@@ -21,8 +21,8 @@ func (x *NativeVolumeMonitorClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetMountForMountPath sets the callback function.
-func (x *NativeVolumeMonitorClass) SetCallbackGetMountForMountPath(cb func(string, *Cancellable) *MountBase) {
+// OverrideGetMountForMountPath sets the callback function.
+func (x *NativeVolumeMonitorClass) OverrideGetMountForMountPath(cb func(string, *Cancellable) *MountBase) {
 	if cb == nil {
 		x.xGetMountForMountPath = 0
 	} else {
@@ -36,8 +36,8 @@ 		})
 	}
 }
 
-// GetCallbackGetMountForMountPath gets the callback function.
-func (x *NativeVolumeMonitorClass) GetCallbackGetMountForMountPath() func(string, *Cancellable) *MountBase {
+// GetGetMountForMountPath gets the callback function.
+func (x *NativeVolumeMonitorClass) GetGetMountForMountPath() func(string, *Cancellable) *MountBase {
 	if x.xGetMountForMountPath == 0 {
 		return nil
 	}
diff --git a/v4/gio/gnetworkmonitor.go b/v4/gio/gnetworkmonitor.go
index 2f29970eaa415567ccae413287960ce726648e85..c6942a5eaefb9979c7ebaa5637e0128676cede99 100644
--- a/v4/gio/gnetworkmonitor.go
+++ b/v4/gio/gnetworkmonitor.go
@@ -31,8 +31,8 @@ func (x *NetworkMonitorInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackNetworkChanged sets the callback function.
-func (x *NetworkMonitorInterface) SetCallbackNetworkChanged(cb func(NetworkMonitor, bool)) {
+// OverrideNetworkChanged sets the callback function.
+func (x *NetworkMonitorInterface) OverrideNetworkChanged(cb func(NetworkMonitor, bool)) {
 	if cb == nil {
 		x.xNetworkChanged = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackNetworkChanged gets the callback function.
-func (x *NetworkMonitorInterface) GetCallbackNetworkChanged() func(NetworkMonitor, bool) {
+// GetNetworkChanged gets the callback function.
+func (x *NetworkMonitorInterface) GetNetworkChanged() func(NetworkMonitor, bool) {
 	if x.xNetworkChanged == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback(MonitorVar.GoPointer(), NetworkAvailableVar)
 	}
 }
 
-// SetCallbackCanReach sets the callback function.
-func (x *NetworkMonitorInterface) SetCallbackCanReach(cb func(NetworkMonitor, SocketConnectable, *Cancellable) bool) {
+// OverrideCanReach sets the callback function.
+func (x *NetworkMonitorInterface) OverrideCanReach(cb func(NetworkMonitor, SocketConnectable, *Cancellable) bool) {
 	if cb == nil {
 		x.xCanReach = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackCanReach gets the callback function.
-func (x *NetworkMonitorInterface) GetCallbackCanReach() func(NetworkMonitor, SocketConnectable, *Cancellable) bool {
+// GetCanReach gets the callback function.
+func (x *NetworkMonitorInterface) GetCanReach() func(NetworkMonitor, SocketConnectable, *Cancellable) bool {
 	if x.xCanReach == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		return rawCallback(MonitorVar.GoPointer(), ConnectableVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackCanReachAsync sets the callback function.
-func (x *NetworkMonitorInterface) SetCallbackCanReachAsync(cb func(NetworkMonitor, SocketConnectable, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideCanReachAsync sets the callback function.
+func (x *NetworkMonitorInterface) OverrideCanReachAsync(cb func(NetworkMonitor, SocketConnectable, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xCanReachAsync = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackCanReachAsync gets the callback function.
-func (x *NetworkMonitorInterface) GetCallbackCanReachAsync() func(NetworkMonitor, SocketConnectable, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetCanReachAsync gets the callback function.
+func (x *NetworkMonitorInterface) GetCanReachAsync() func(NetworkMonitor, SocketConnectable, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xCanReachAsync == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback(MonitorVar.GoPointer(), ConnectableVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackCanReachFinish sets the callback function.
-func (x *NetworkMonitorInterface) SetCallbackCanReachFinish(cb func(NetworkMonitor, AsyncResult) bool) {
+// OverrideCanReachFinish sets the callback function.
+func (x *NetworkMonitorInterface) OverrideCanReachFinish(cb func(NetworkMonitor, AsyncResult) bool) {
 	if cb == nil {
 		x.xCanReachFinish = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackCanReachFinish gets the callback function.
-func (x *NetworkMonitorInterface) GetCallbackCanReachFinish() func(NetworkMonitor, AsyncResult) bool {
+// GetCanReachFinish gets the callback function.
+func (x *NetworkMonitorInterface) GetCanReachFinish() func(NetworkMonitor, AsyncResult) bool {
 	if x.xCanReachFinish == 0 {
 		return nil
 	}
diff --git a/v4/gio/goutputstream.go b/v4/gio/goutputstream.go
index 69b7e0dd5cdc56fee02391729342aec473dcedbb..de8cd1b456a9a90ddfcbefff674554a30b4b30be 100644
--- a/v4/gio/goutputstream.go
+++ b/v4/gio/goutputstream.go
@@ -62,8 +62,8 @@ func (x *OutputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackWriteFn sets the callback function.
-func (x *OutputStreamClass) SetCallbackWriteFn(cb func(*OutputStream, []byte, uint, *Cancellable) int) {
+// OverrideWriteFn sets the callback function.
+func (x *OutputStreamClass) OverrideWriteFn(cb func(*OutputStream, []byte, uint, *Cancellable) int) {
 	if cb == nil {
 		x.xWriteFn = 0
 	} else {
@@ -73,8 +73,8 @@ 		})
 	}
 }
 
-// GetCallbackWriteFn gets the callback function.
-func (x *OutputStreamClass) GetCallbackWriteFn() func(*OutputStream, []byte, uint, *Cancellable) int {
+// GetWriteFn gets the callback function.
+func (x *OutputStreamClass) GetWriteFn() func(*OutputStream, []byte, uint, *Cancellable) int {
 	if x.xWriteFn == 0 {
 		return nil
 	}
@@ -85,8 +85,8 @@ 		return rawCallback(StreamVar.GoPointer(), BufferVar, CountVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackSplice sets the callback function.
-func (x *OutputStreamClass) SetCallbackSplice(cb func(*OutputStream, *InputStream, OutputStreamSpliceFlags, *Cancellable) int) {
+// OverrideSplice sets the callback function.
+func (x *OutputStreamClass) OverrideSplice(cb func(*OutputStream, *InputStream, OutputStreamSpliceFlags, *Cancellable) int) {
 	if cb == nil {
 		x.xSplice = 0
 	} else {
@@ -96,8 +96,8 @@ 		})
 	}
 }
 
-// GetCallbackSplice gets the callback function.
-func (x *OutputStreamClass) GetCallbackSplice() func(*OutputStream, *InputStream, OutputStreamSpliceFlags, *Cancellable) int {
+// GetSplice gets the callback function.
+func (x *OutputStreamClass) GetSplice() func(*OutputStream, *InputStream, OutputStreamSpliceFlags, *Cancellable) int {
 	if x.xSplice == 0 {
 		return nil
 	}
@@ -108,8 +108,8 @@ 		return rawCallback(StreamVar.GoPointer(), SourceVar.GoPointer(), FlagsVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackFlush sets the callback function.
-func (x *OutputStreamClass) SetCallbackFlush(cb func(*OutputStream, *Cancellable) bool) {
+// OverrideFlush sets the callback function.
+func (x *OutputStreamClass) OverrideFlush(cb func(*OutputStream, *Cancellable) bool) {
 	if cb == nil {
 		x.xFlush = 0
 	} else {
@@ -119,8 +119,8 @@ 		})
 	}
 }
 
-// GetCallbackFlush gets the callback function.
-func (x *OutputStreamClass) GetCallbackFlush() func(*OutputStream, *Cancellable) bool {
+// GetFlush gets the callback function.
+func (x *OutputStreamClass) GetFlush() func(*OutputStream, *Cancellable) bool {
 	if x.xFlush == 0 {
 		return nil
 	}
@@ -131,8 +131,8 @@ 		return rawCallback(StreamVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackCloseFn sets the callback function.
-func (x *OutputStreamClass) SetCallbackCloseFn(cb func(*OutputStream, *Cancellable) bool) {
+// OverrideCloseFn sets the callback function.
+func (x *OutputStreamClass) OverrideCloseFn(cb func(*OutputStream, *Cancellable) bool) {
 	if cb == nil {
 		x.xCloseFn = 0
 	} else {
@@ -142,8 +142,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseFn gets the callback function.
-func (x *OutputStreamClass) GetCallbackCloseFn() func(*OutputStream, *Cancellable) bool {
+// GetCloseFn gets the callback function.
+func (x *OutputStreamClass) GetCloseFn() func(*OutputStream, *Cancellable) bool {
 	if x.xCloseFn == 0 {
 		return nil
 	}
@@ -154,8 +154,8 @@ 		return rawCallback(StreamVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackWriteAsync sets the callback function.
-func (x *OutputStreamClass) SetCallbackWriteAsync(cb func(*OutputStream, []byte, uint, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideWriteAsync sets the callback function.
+func (x *OutputStreamClass) OverrideWriteAsync(cb func(*OutputStream, []byte, uint, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xWriteAsync = 0
 	} else {
@@ -165,8 +165,8 @@ 		})
 	}
 }
 
-// GetCallbackWriteAsync gets the callback function.
-func (x *OutputStreamClass) GetCallbackWriteAsync() func(*OutputStream, []byte, uint, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetWriteAsync gets the callback function.
+func (x *OutputStreamClass) GetWriteAsync() func(*OutputStream, []byte, uint, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xWriteAsync == 0 {
 		return nil
 	}
@@ -177,8 +177,8 @@ 		rawCallback(StreamVar.GoPointer(), BufferVar, CountVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackWriteFinish sets the callback function.
-func (x *OutputStreamClass) SetCallbackWriteFinish(cb func(*OutputStream, AsyncResult) int) {
+// OverrideWriteFinish sets the callback function.
+func (x *OutputStreamClass) OverrideWriteFinish(cb func(*OutputStream, AsyncResult) int) {
 	if cb == nil {
 		x.xWriteFinish = 0
 	} else {
@@ -188,8 +188,8 @@ 		})
 	}
 }
 
-// GetCallbackWriteFinish gets the callback function.
-func (x *OutputStreamClass) GetCallbackWriteFinish() func(*OutputStream, AsyncResult) int {
+// GetWriteFinish gets the callback function.
+func (x *OutputStreamClass) GetWriteFinish() func(*OutputStream, AsyncResult) int {
 	if x.xWriteFinish == 0 {
 		return nil
 	}
@@ -200,8 +200,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackSpliceAsync sets the callback function.
-func (x *OutputStreamClass) SetCallbackSpliceAsync(cb func(*OutputStream, *InputStream, OutputStreamSpliceFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideSpliceAsync sets the callback function.
+func (x *OutputStreamClass) OverrideSpliceAsync(cb func(*OutputStream, *InputStream, OutputStreamSpliceFlags, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xSpliceAsync = 0
 	} else {
@@ -211,8 +211,8 @@ 		})
 	}
 }
 
-// GetCallbackSpliceAsync gets the callback function.
-func (x *OutputStreamClass) GetCallbackSpliceAsync() func(*OutputStream, *InputStream, OutputStreamSpliceFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetSpliceAsync gets the callback function.
+func (x *OutputStreamClass) GetSpliceAsync() func(*OutputStream, *InputStream, OutputStreamSpliceFlags, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xSpliceAsync == 0 {
 		return nil
 	}
@@ -223,8 +223,8 @@ 		rawCallback(StreamVar.GoPointer(), SourceVar.GoPointer(), FlagsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackSpliceFinish sets the callback function.
-func (x *OutputStreamClass) SetCallbackSpliceFinish(cb func(*OutputStream, AsyncResult) int) {
+// OverrideSpliceFinish sets the callback function.
+func (x *OutputStreamClass) OverrideSpliceFinish(cb func(*OutputStream, AsyncResult) int) {
 	if cb == nil {
 		x.xSpliceFinish = 0
 	} else {
@@ -234,8 +234,8 @@ 		})
 	}
 }
 
-// GetCallbackSpliceFinish gets the callback function.
-func (x *OutputStreamClass) GetCallbackSpliceFinish() func(*OutputStream, AsyncResult) int {
+// GetSpliceFinish gets the callback function.
+func (x *OutputStreamClass) GetSpliceFinish() func(*OutputStream, AsyncResult) int {
 	if x.xSpliceFinish == 0 {
 		return nil
 	}
@@ -246,8 +246,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackFlushAsync sets the callback function.
-func (x *OutputStreamClass) SetCallbackFlushAsync(cb func(*OutputStream, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideFlushAsync sets the callback function.
+func (x *OutputStreamClass) OverrideFlushAsync(cb func(*OutputStream, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xFlushAsync = 0
 	} else {
@@ -257,8 +257,8 @@ 		})
 	}
 }
 
-// GetCallbackFlushAsync gets the callback function.
-func (x *OutputStreamClass) GetCallbackFlushAsync() func(*OutputStream, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetFlushAsync gets the callback function.
+func (x *OutputStreamClass) GetFlushAsync() func(*OutputStream, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xFlushAsync == 0 {
 		return nil
 	}
@@ -269,8 +269,8 @@ 		rawCallback(StreamVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackFlushFinish sets the callback function.
-func (x *OutputStreamClass) SetCallbackFlushFinish(cb func(*OutputStream, AsyncResult) bool) {
+// OverrideFlushFinish sets the callback function.
+func (x *OutputStreamClass) OverrideFlushFinish(cb func(*OutputStream, AsyncResult) bool) {
 	if cb == nil {
 		x.xFlushFinish = 0
 	} else {
@@ -280,8 +280,8 @@ 		})
 	}
 }
 
-// GetCallbackFlushFinish gets the callback function.
-func (x *OutputStreamClass) GetCallbackFlushFinish() func(*OutputStream, AsyncResult) bool {
+// GetFlushFinish gets the callback function.
+func (x *OutputStreamClass) GetFlushFinish() func(*OutputStream, AsyncResult) bool {
 	if x.xFlushFinish == 0 {
 		return nil
 	}
@@ -292,8 +292,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackCloseAsync sets the callback function.
-func (x *OutputStreamClass) SetCallbackCloseAsync(cb func(*OutputStream, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideCloseAsync sets the callback function.
+func (x *OutputStreamClass) OverrideCloseAsync(cb func(*OutputStream, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xCloseAsync = 0
 	} else {
@@ -303,8 +303,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseAsync gets the callback function.
-func (x *OutputStreamClass) GetCallbackCloseAsync() func(*OutputStream, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetCloseAsync gets the callback function.
+func (x *OutputStreamClass) GetCloseAsync() func(*OutputStream, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xCloseAsync == 0 {
 		return nil
 	}
@@ -315,8 +315,8 @@ 		rawCallback(StreamVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackCloseFinish sets the callback function.
-func (x *OutputStreamClass) SetCallbackCloseFinish(cb func(*OutputStream, AsyncResult) bool) {
+// OverrideCloseFinish sets the callback function.
+func (x *OutputStreamClass) OverrideCloseFinish(cb func(*OutputStream, AsyncResult) bool) {
 	if cb == nil {
 		x.xCloseFinish = 0
 	} else {
@@ -326,8 +326,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseFinish gets the callback function.
-func (x *OutputStreamClass) GetCallbackCloseFinish() func(*OutputStream, AsyncResult) bool {
+// GetCloseFinish gets the callback function.
+func (x *OutputStreamClass) GetCloseFinish() func(*OutputStream, AsyncResult) bool {
 	if x.xCloseFinish == 0 {
 		return nil
 	}
@@ -338,8 +338,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackWritevFn sets the callback function.
-func (x *OutputStreamClass) SetCallbackWritevFn(cb func(*OutputStream, []OutputVector, uint, uint, *Cancellable) bool) {
+// OverrideWritevFn sets the callback function.
+func (x *OutputStreamClass) OverrideWritevFn(cb func(*OutputStream, []OutputVector, uint, uint, *Cancellable) bool) {
 	if cb == nil {
 		x.xWritevFn = 0
 	} else {
@@ -349,8 +349,8 @@ 		})
 	}
 }
 
-// GetCallbackWritevFn gets the callback function.
-func (x *OutputStreamClass) GetCallbackWritevFn() func(*OutputStream, []OutputVector, uint, uint, *Cancellable) bool {
+// GetWritevFn gets the callback function.
+func (x *OutputStreamClass) GetWritevFn() func(*OutputStream, []OutputVector, uint, uint, *Cancellable) bool {
 	if x.xWritevFn == 0 {
 		return nil
 	}
@@ -361,8 +361,8 @@ 		return rawCallback(StreamVar.GoPointer(), VectorsVar, NVectorsVar, BytesWrittenVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackWritevAsync sets the callback function.
-func (x *OutputStreamClass) SetCallbackWritevAsync(cb func(*OutputStream, []OutputVector, uint, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideWritevAsync sets the callback function.
+func (x *OutputStreamClass) OverrideWritevAsync(cb func(*OutputStream, []OutputVector, uint, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xWritevAsync = 0
 	} else {
@@ -372,8 +372,8 @@ 		})
 	}
 }
 
-// GetCallbackWritevAsync gets the callback function.
-func (x *OutputStreamClass) GetCallbackWritevAsync() func(*OutputStream, []OutputVector, uint, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetWritevAsync gets the callback function.
+func (x *OutputStreamClass) GetWritevAsync() func(*OutputStream, []OutputVector, uint, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xWritevAsync == 0 {
 		return nil
 	}
@@ -384,8 +384,8 @@ 		rawCallback(StreamVar.GoPointer(), VectorsVar, NVectorsVar, IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackWritevFinish sets the callback function.
-func (x *OutputStreamClass) SetCallbackWritevFinish(cb func(*OutputStream, AsyncResult, uint) bool) {
+// OverrideWritevFinish sets the callback function.
+func (x *OutputStreamClass) OverrideWritevFinish(cb func(*OutputStream, AsyncResult, uint) bool) {
 	if cb == nil {
 		x.xWritevFinish = 0
 	} else {
@@ -395,8 +395,8 @@ 		})
 	}
 }
 
-// GetCallbackWritevFinish gets the callback function.
-func (x *OutputStreamClass) GetCallbackWritevFinish() func(*OutputStream, AsyncResult, uint) bool {
+// GetWritevFinish gets the callback function.
+func (x *OutputStreamClass) GetWritevFinish() func(*OutputStream, AsyncResult, uint) bool {
 	if x.xWritevFinish == 0 {
 		return nil
 	}
@@ -407,8 +407,8 @@ 		return rawCallback(StreamVar.GoPointer(), ResultVar.GoPointer(), BytesWrittenVar)
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *OutputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *OutputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -418,8 +418,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *OutputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *OutputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -430,8 +430,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *OutputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *OutputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -441,8 +441,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *OutputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *OutputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -453,8 +453,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *OutputStreamClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *OutputStreamClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -464,8 +464,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *OutputStreamClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *OutputStreamClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
@@ -476,8 +476,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved7 sets the callback function.
-func (x *OutputStreamClass) SetCallbackGReserved7(cb func()) {
+// OverrideGReserved7 sets the callback function.
+func (x *OutputStreamClass) OverrideGReserved7(cb func()) {
 	if cb == nil {
 		x.xGReserved7 = 0
 	} else {
@@ -487,8 +487,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved7 gets the callback function.
-func (x *OutputStreamClass) GetCallbackGReserved7() func() {
+// GetGReserved7 gets the callback function.
+func (x *OutputStreamClass) GetGReserved7() func() {
 	if x.xGReserved7 == 0 {
 		return nil
 	}
@@ -499,8 +499,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved8 sets the callback function.
-func (x *OutputStreamClass) SetCallbackGReserved8(cb func()) {
+// OverrideGReserved8 sets the callback function.
+func (x *OutputStreamClass) OverrideGReserved8(cb func()) {
 	if cb == nil {
 		x.xGReserved8 = 0
 	} else {
@@ -510,8 +510,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved8 gets the callback function.
-func (x *OutputStreamClass) GetCallbackGReserved8() func() {
+// GetGReserved8 gets the callback function.
+func (x *OutputStreamClass) GetGReserved8() func() {
 	if x.xGReserved8 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gpermission.go b/v4/gio/gpermission.go
index 2928e7881a84e08b987c25a8ef7732dd61b60ef2..398589d203e85c1566b8604c7677f700d613bc4a 100644
--- a/v4/gio/gpermission.go
+++ b/v4/gio/gpermission.go
@@ -36,8 +36,8 @@ func (x *PermissionClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackAcquire sets the callback function.
-func (x *PermissionClass) SetCallbackAcquire(cb func(*Permission, *Cancellable) bool) {
+// OverrideAcquire sets the callback function.
+func (x *PermissionClass) OverrideAcquire(cb func(*Permission, *Cancellable) bool) {
 	if cb == nil {
 		x.xAcquire = 0
 	} else {
@@ -47,8 +47,8 @@ 		})
 	}
 }
 
-// GetCallbackAcquire gets the callback function.
-func (x *PermissionClass) GetCallbackAcquire() func(*Permission, *Cancellable) bool {
+// GetAcquire gets the callback function.
+func (x *PermissionClass) GetAcquire() func(*Permission, *Cancellable) bool {
 	if x.xAcquire == 0 {
 		return nil
 	}
@@ -59,8 +59,8 @@ 		return rawCallback(PermissionVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackAcquireAsync sets the callback function.
-func (x *PermissionClass) SetCallbackAcquireAsync(cb func(*Permission, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideAcquireAsync sets the callback function.
+func (x *PermissionClass) OverrideAcquireAsync(cb func(*Permission, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xAcquireAsync = 0
 	} else {
@@ -70,8 +70,8 @@ 		})
 	}
 }
 
-// GetCallbackAcquireAsync gets the callback function.
-func (x *PermissionClass) GetCallbackAcquireAsync() func(*Permission, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetAcquireAsync gets the callback function.
+func (x *PermissionClass) GetAcquireAsync() func(*Permission, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xAcquireAsync == 0 {
 		return nil
 	}
@@ -82,8 +82,8 @@ 		rawCallback(PermissionVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackAcquireFinish sets the callback function.
-func (x *PermissionClass) SetCallbackAcquireFinish(cb func(*Permission, AsyncResult) bool) {
+// OverrideAcquireFinish sets the callback function.
+func (x *PermissionClass) OverrideAcquireFinish(cb func(*Permission, AsyncResult) bool) {
 	if cb == nil {
 		x.xAcquireFinish = 0
 	} else {
@@ -93,8 +93,8 @@ 		})
 	}
 }
 
-// GetCallbackAcquireFinish gets the callback function.
-func (x *PermissionClass) GetCallbackAcquireFinish() func(*Permission, AsyncResult) bool {
+// GetAcquireFinish gets the callback function.
+func (x *PermissionClass) GetAcquireFinish() func(*Permission, AsyncResult) bool {
 	if x.xAcquireFinish == 0 {
 		return nil
 	}
@@ -105,8 +105,8 @@ 		return rawCallback(PermissionVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackRelease sets the callback function.
-func (x *PermissionClass) SetCallbackRelease(cb func(*Permission, *Cancellable) bool) {
+// OverrideRelease sets the callback function.
+func (x *PermissionClass) OverrideRelease(cb func(*Permission, *Cancellable) bool) {
 	if cb == nil {
 		x.xRelease = 0
 	} else {
@@ -116,8 +116,8 @@ 		})
 	}
 }
 
-// GetCallbackRelease gets the callback function.
-func (x *PermissionClass) GetCallbackRelease() func(*Permission, *Cancellable) bool {
+// GetRelease gets the callback function.
+func (x *PermissionClass) GetRelease() func(*Permission, *Cancellable) bool {
 	if x.xRelease == 0 {
 		return nil
 	}
@@ -128,8 +128,8 @@ 		return rawCallback(PermissionVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackReleaseAsync sets the callback function.
-func (x *PermissionClass) SetCallbackReleaseAsync(cb func(*Permission, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideReleaseAsync sets the callback function.
+func (x *PermissionClass) OverrideReleaseAsync(cb func(*Permission, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xReleaseAsync = 0
 	} else {
@@ -139,8 +139,8 @@ 		})
 	}
 }
 
-// GetCallbackReleaseAsync gets the callback function.
-func (x *PermissionClass) GetCallbackReleaseAsync() func(*Permission, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetReleaseAsync gets the callback function.
+func (x *PermissionClass) GetReleaseAsync() func(*Permission, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xReleaseAsync == 0 {
 		return nil
 	}
@@ -151,8 +151,8 @@ 		rawCallback(PermissionVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackReleaseFinish sets the callback function.
-func (x *PermissionClass) SetCallbackReleaseFinish(cb func(*Permission, AsyncResult) bool) {
+// OverrideReleaseFinish sets the callback function.
+func (x *PermissionClass) OverrideReleaseFinish(cb func(*Permission, AsyncResult) bool) {
 	if cb == nil {
 		x.xReleaseFinish = 0
 	} else {
@@ -162,8 +162,8 @@ 		})
 	}
 }
 
-// GetCallbackReleaseFinish gets the callback function.
-func (x *PermissionClass) GetCallbackReleaseFinish() func(*Permission, AsyncResult) bool {
+// GetReleaseFinish gets the callback function.
+func (x *PermissionClass) GetReleaseFinish() func(*Permission, AsyncResult) bool {
 	if x.xReleaseFinish == 0 {
 		return nil
 	}
diff --git a/v4/gio/gpollableinputstream.go b/v4/gio/gpollableinputstream.go
index 12b95e0f4f0c23fa8092a94430f6241ef0cb5034..2168a07ab1945151108d40a905f9bc530da87822 100644
--- a/v4/gio/gpollableinputstream.go
+++ b/v4/gio/gpollableinputstream.go
@@ -39,8 +39,8 @@ func (x *PollableInputStreamInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackCanPoll sets the callback function.
-func (x *PollableInputStreamInterface) SetCallbackCanPoll(cb func(PollableInputStream) bool) {
+// OverrideCanPoll sets the callback function.
+func (x *PollableInputStreamInterface) OverrideCanPoll(cb func(PollableInputStream) bool) {
 	if cb == nil {
 		x.xCanPoll = 0
 	} else {
@@ -50,8 +50,8 @@ 		})
 	}
 }
 
-// GetCallbackCanPoll gets the callback function.
-func (x *PollableInputStreamInterface) GetCallbackCanPoll() func(PollableInputStream) bool {
+// GetCanPoll gets the callback function.
+func (x *PollableInputStreamInterface) GetCanPoll() func(PollableInputStream) bool {
 	if x.xCanPoll == 0 {
 		return nil
 	}
@@ -62,8 +62,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackIsReadable sets the callback function.
-func (x *PollableInputStreamInterface) SetCallbackIsReadable(cb func(PollableInputStream) bool) {
+// OverrideIsReadable sets the callback function.
+func (x *PollableInputStreamInterface) OverrideIsReadable(cb func(PollableInputStream) bool) {
 	if cb == nil {
 		x.xIsReadable = 0
 	} else {
@@ -73,8 +73,8 @@ 		})
 	}
 }
 
-// GetCallbackIsReadable gets the callback function.
-func (x *PollableInputStreamInterface) GetCallbackIsReadable() func(PollableInputStream) bool {
+// GetIsReadable gets the callback function.
+func (x *PollableInputStreamInterface) GetIsReadable() func(PollableInputStream) bool {
 	if x.xIsReadable == 0 {
 		return nil
 	}
@@ -85,8 +85,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackCreateSource sets the callback function.
-func (x *PollableInputStreamInterface) SetCallbackCreateSource(cb func(PollableInputStream, *Cancellable) *glib.Source) {
+// OverrideCreateSource sets the callback function.
+func (x *PollableInputStreamInterface) OverrideCreateSource(cb func(PollableInputStream, *Cancellable) *glib.Source) {
 	if cb == nil {
 		x.xCreateSource = 0
 	} else {
@@ -96,8 +96,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateSource gets the callback function.
-func (x *PollableInputStreamInterface) GetCallbackCreateSource() func(PollableInputStream, *Cancellable) *glib.Source {
+// GetCreateSource gets the callback function.
+func (x *PollableInputStreamInterface) GetCreateSource() func(PollableInputStream, *Cancellable) *glib.Source {
 	if x.xCreateSource == 0 {
 		return nil
 	}
@@ -108,8 +108,8 @@ 		return rawCallback(StreamVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackReadNonblocking sets the callback function.
-func (x *PollableInputStreamInterface) SetCallbackReadNonblocking(cb func(PollableInputStream, []byte, uint) int) {
+// OverrideReadNonblocking sets the callback function.
+func (x *PollableInputStreamInterface) OverrideReadNonblocking(cb func(PollableInputStream, []byte, uint) int) {
 	if cb == nil {
 		x.xReadNonblocking = 0
 	} else {
@@ -119,8 +119,8 @@ 		})
 	}
 }
 
-// GetCallbackReadNonblocking gets the callback function.
-func (x *PollableInputStreamInterface) GetCallbackReadNonblocking() func(PollableInputStream, []byte, uint) int {
+// GetReadNonblocking gets the callback function.
+func (x *PollableInputStreamInterface) GetReadNonblocking() func(PollableInputStream, []byte, uint) int {
 	if x.xReadNonblocking == 0 {
 		return nil
 	}
diff --git a/v4/gio/gpollableoutputstream.go b/v4/gio/gpollableoutputstream.go
index 5389b8e463f87957181f9594135b04af97223f3c..0cd9942b158c71240e297fbbc9a7e3dbb85292de 100644
--- a/v4/gio/gpollableoutputstream.go
+++ b/v4/gio/gpollableoutputstream.go
@@ -47,8 +47,8 @@ func (x *PollableOutputStreamInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackCanPoll sets the callback function.
-func (x *PollableOutputStreamInterface) SetCallbackCanPoll(cb func(PollableOutputStream) bool) {
+// OverrideCanPoll sets the callback function.
+func (x *PollableOutputStreamInterface) OverrideCanPoll(cb func(PollableOutputStream) bool) {
 	if cb == nil {
 		x.xCanPoll = 0
 	} else {
@@ -58,8 +58,8 @@ 		})
 	}
 }
 
-// GetCallbackCanPoll gets the callback function.
-func (x *PollableOutputStreamInterface) GetCallbackCanPoll() func(PollableOutputStream) bool {
+// GetCanPoll gets the callback function.
+func (x *PollableOutputStreamInterface) GetCanPoll() func(PollableOutputStream) bool {
 	if x.xCanPoll == 0 {
 		return nil
 	}
@@ -70,8 +70,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackIsWritable sets the callback function.
-func (x *PollableOutputStreamInterface) SetCallbackIsWritable(cb func(PollableOutputStream) bool) {
+// OverrideIsWritable sets the callback function.
+func (x *PollableOutputStreamInterface) OverrideIsWritable(cb func(PollableOutputStream) bool) {
 	if cb == nil {
 		x.xIsWritable = 0
 	} else {
@@ -81,8 +81,8 @@ 		})
 	}
 }
 
-// GetCallbackIsWritable gets the callback function.
-func (x *PollableOutputStreamInterface) GetCallbackIsWritable() func(PollableOutputStream) bool {
+// GetIsWritable gets the callback function.
+func (x *PollableOutputStreamInterface) GetIsWritable() func(PollableOutputStream) bool {
 	if x.xIsWritable == 0 {
 		return nil
 	}
@@ -93,8 +93,8 @@ 		return rawCallback(StreamVar.GoPointer())
 	}
 }
 
-// SetCallbackCreateSource sets the callback function.
-func (x *PollableOutputStreamInterface) SetCallbackCreateSource(cb func(PollableOutputStream, *Cancellable) *glib.Source) {
+// OverrideCreateSource sets the callback function.
+func (x *PollableOutputStreamInterface) OverrideCreateSource(cb func(PollableOutputStream, *Cancellable) *glib.Source) {
 	if cb == nil {
 		x.xCreateSource = 0
 	} else {
@@ -104,8 +104,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateSource gets the callback function.
-func (x *PollableOutputStreamInterface) GetCallbackCreateSource() func(PollableOutputStream, *Cancellable) *glib.Source {
+// GetCreateSource gets the callback function.
+func (x *PollableOutputStreamInterface) GetCreateSource() func(PollableOutputStream, *Cancellable) *glib.Source {
 	if x.xCreateSource == 0 {
 		return nil
 	}
@@ -116,8 +116,8 @@ 		return rawCallback(StreamVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackWriteNonblocking sets the callback function.
-func (x *PollableOutputStreamInterface) SetCallbackWriteNonblocking(cb func(PollableOutputStream, []byte, uint) int) {
+// OverrideWriteNonblocking sets the callback function.
+func (x *PollableOutputStreamInterface) OverrideWriteNonblocking(cb func(PollableOutputStream, []byte, uint) int) {
 	if cb == nil {
 		x.xWriteNonblocking = 0
 	} else {
@@ -127,8 +127,8 @@ 		})
 	}
 }
 
-// GetCallbackWriteNonblocking gets the callback function.
-func (x *PollableOutputStreamInterface) GetCallbackWriteNonblocking() func(PollableOutputStream, []byte, uint) int {
+// GetWriteNonblocking gets the callback function.
+func (x *PollableOutputStreamInterface) GetWriteNonblocking() func(PollableOutputStream, []byte, uint) int {
 	if x.xWriteNonblocking == 0 {
 		return nil
 	}
@@ -139,8 +139,8 @@ 		return rawCallback(StreamVar.GoPointer(), BufferVar, CountVar)
 	}
 }
 
-// SetCallbackWritevNonblocking sets the callback function.
-func (x *PollableOutputStreamInterface) SetCallbackWritevNonblocking(cb func(PollableOutputStream, []OutputVector, uint, uint) PollableReturn) {
+// OverrideWritevNonblocking sets the callback function.
+func (x *PollableOutputStreamInterface) OverrideWritevNonblocking(cb func(PollableOutputStream, []OutputVector, uint, uint) PollableReturn) {
 	if cb == nil {
 		x.xWritevNonblocking = 0
 	} else {
@@ -150,8 +150,8 @@ 		})
 	}
 }
 
-// GetCallbackWritevNonblocking gets the callback function.
-func (x *PollableOutputStreamInterface) GetCallbackWritevNonblocking() func(PollableOutputStream, []OutputVector, uint, uint) PollableReturn {
+// GetWritevNonblocking gets the callback function.
+func (x *PollableOutputStreamInterface) GetWritevNonblocking() func(PollableOutputStream, []OutputVector, uint, uint) PollableReturn {
 	if x.xWritevNonblocking == 0 {
 		return nil
 	}
diff --git a/v4/gio/gproxy.go b/v4/gio/gproxy.go
index 089d3f429efe47aac3f610352274d18234c5e330..d5a556e51415ab5dda385ad4bf51059ca4889c8a 100644
--- a/v4/gio/gproxy.go
+++ b/v4/gio/gproxy.go
@@ -30,8 +30,8 @@ func (x *ProxyInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackConnect sets the callback function.
-func (x *ProxyInterface) SetCallbackConnect(cb func(Proxy, *IOStream, *ProxyAddress, *Cancellable) *IOStream) {
+// OverrideConnect sets the callback function.
+func (x *ProxyInterface) OverrideConnect(cb func(Proxy, *IOStream, *ProxyAddress, *Cancellable) *IOStream) {
 	if cb == nil {
 		x.xConnect = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackConnect gets the callback function.
-func (x *ProxyInterface) GetCallbackConnect() func(Proxy, *IOStream, *ProxyAddress, *Cancellable) *IOStream {
+// GetConnect gets the callback function.
+func (x *ProxyInterface) GetConnect() func(Proxy, *IOStream, *ProxyAddress, *Cancellable) *IOStream {
 	if x.xConnect == 0 {
 		return nil
 	}
@@ -63,8 +63,8 @@ 		return ret
 	}
 }
 
-// SetCallbackConnectAsync sets the callback function.
-func (x *ProxyInterface) SetCallbackConnectAsync(cb func(Proxy, *IOStream, *ProxyAddress, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideConnectAsync sets the callback function.
+func (x *ProxyInterface) OverrideConnectAsync(cb func(Proxy, *IOStream, *ProxyAddress, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xConnectAsync = 0
 	} else {
@@ -74,8 +74,8 @@ 		})
 	}
 }
 
-// GetCallbackConnectAsync gets the callback function.
-func (x *ProxyInterface) GetCallbackConnectAsync() func(Proxy, *IOStream, *ProxyAddress, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetConnectAsync gets the callback function.
+func (x *ProxyInterface) GetConnectAsync() func(Proxy, *IOStream, *ProxyAddress, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xConnectAsync == 0 {
 		return nil
 	}
@@ -86,8 +86,8 @@ 		rawCallback(ProxyVar.GoPointer(), ConnectionVar.GoPointer(), ProxyAddressVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackConnectFinish sets the callback function.
-func (x *ProxyInterface) SetCallbackConnectFinish(cb func(Proxy, AsyncResult) *IOStream) {
+// OverrideConnectFinish sets the callback function.
+func (x *ProxyInterface) OverrideConnectFinish(cb func(Proxy, AsyncResult) *IOStream) {
 	if cb == nil {
 		x.xConnectFinish = 0
 	} else {
@@ -101,8 +101,8 @@ 		})
 	}
 }
 
-// GetCallbackConnectFinish gets the callback function.
-func (x *ProxyInterface) GetCallbackConnectFinish() func(Proxy, AsyncResult) *IOStream {
+// GetConnectFinish gets the callback function.
+func (x *ProxyInterface) GetConnectFinish() func(Proxy, AsyncResult) *IOStream {
 	if x.xConnectFinish == 0 {
 		return nil
 	}
@@ -119,8 +119,8 @@ 		return ret
 	}
 }
 
-// SetCallbackSupportsHostname sets the callback function.
-func (x *ProxyInterface) SetCallbackSupportsHostname(cb func(Proxy) bool) {
+// OverrideSupportsHostname sets the callback function.
+func (x *ProxyInterface) OverrideSupportsHostname(cb func(Proxy) bool) {
 	if cb == nil {
 		x.xSupportsHostname = 0
 	} else {
@@ -130,8 +130,8 @@ 		})
 	}
 }
 
-// GetCallbackSupportsHostname gets the callback function.
-func (x *ProxyInterface) GetCallbackSupportsHostname() func(Proxy) bool {
+// GetSupportsHostname gets the callback function.
+func (x *ProxyInterface) GetSupportsHostname() func(Proxy) bool {
 	if x.xSupportsHostname == 0 {
 		return nil
 	}
diff --git a/v4/gio/gproxyaddressenumerator.go b/v4/gio/gproxyaddressenumerator.go
index 886dae27d0c90c5f3f61c1475d3a21f59e22a3e0..dd31058ce059b6fc3de21fd9be2f9212b29c46f9 100644
--- a/v4/gio/gproxyaddressenumerator.go
+++ b/v4/gio/gproxyaddressenumerator.go
@@ -34,8 +34,8 @@ func (x *ProxyAddressEnumeratorClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *ProxyAddressEnumeratorClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *ProxyAddressEnumeratorClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *ProxyAddressEnumeratorClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *ProxyAddressEnumeratorClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -57,8 +57,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *ProxyAddressEnumeratorClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *ProxyAddressEnumeratorClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -68,8 +68,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *ProxyAddressEnumeratorClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *ProxyAddressEnumeratorClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -80,8 +80,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *ProxyAddressEnumeratorClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *ProxyAddressEnumeratorClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -91,8 +91,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *ProxyAddressEnumeratorClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *ProxyAddressEnumeratorClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -103,8 +103,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *ProxyAddressEnumeratorClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *ProxyAddressEnumeratorClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -114,8 +114,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *ProxyAddressEnumeratorClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *ProxyAddressEnumeratorClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -126,8 +126,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *ProxyAddressEnumeratorClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *ProxyAddressEnumeratorClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -137,8 +137,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *ProxyAddressEnumeratorClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *ProxyAddressEnumeratorClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -149,8 +149,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *ProxyAddressEnumeratorClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *ProxyAddressEnumeratorClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -160,8 +160,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *ProxyAddressEnumeratorClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *ProxyAddressEnumeratorClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
@@ -172,8 +172,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved7 sets the callback function.
-func (x *ProxyAddressEnumeratorClass) SetCallbackGReserved7(cb func()) {
+// OverrideGReserved7 sets the callback function.
+func (x *ProxyAddressEnumeratorClass) OverrideGReserved7(cb func()) {
 	if cb == nil {
 		x.xGReserved7 = 0
 	} else {
@@ -183,8 +183,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved7 gets the callback function.
-func (x *ProxyAddressEnumeratorClass) GetCallbackGReserved7() func() {
+// GetGReserved7 gets the callback function.
+func (x *ProxyAddressEnumeratorClass) GetGReserved7() func() {
 	if x.xGReserved7 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gproxyresolver.go b/v4/gio/gproxyresolver.go
index 9079d0dd70021e1cd08b5e879bb0ed71494637cd..8b58dbab428993465a4a4c561919e97782c0ef37 100644
--- a/v4/gio/gproxyresolver.go
+++ b/v4/gio/gproxyresolver.go
@@ -31,8 +31,8 @@ func (x *ProxyResolverInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackIsSupported sets the callback function.
-func (x *ProxyResolverInterface) SetCallbackIsSupported(cb func(ProxyResolver) bool) {
+// OverrideIsSupported sets the callback function.
+func (x *ProxyResolverInterface) OverrideIsSupported(cb func(ProxyResolver) bool) {
 	if cb == nil {
 		x.xIsSupported = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackIsSupported gets the callback function.
-func (x *ProxyResolverInterface) GetCallbackIsSupported() func(ProxyResolver) bool {
+// GetIsSupported gets the callback function.
+func (x *ProxyResolverInterface) GetIsSupported() func(ProxyResolver) bool {
 	if x.xIsSupported == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		return rawCallback(ResolverVar.GoPointer())
 	}
 }
 
-// SetCallbackLookup sets the callback function.
-func (x *ProxyResolverInterface) SetCallbackLookup(cb func(ProxyResolver, string, *Cancellable) []string) {
+// OverrideLookup sets the callback function.
+func (x *ProxyResolverInterface) OverrideLookup(cb func(ProxyResolver, string, *Cancellable) []string) {
 	if cb == nil {
 		x.xLookup = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackLookup gets the callback function.
-func (x *ProxyResolverInterface) GetCallbackLookup() func(ProxyResolver, string, *Cancellable) []string {
+// GetLookup gets the callback function.
+func (x *ProxyResolverInterface) GetLookup() func(ProxyResolver, string, *Cancellable) []string {
 	if x.xLookup == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		return rawCallback(ResolverVar.GoPointer(), UriVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupAsync sets the callback function.
-func (x *ProxyResolverInterface) SetCallbackLookupAsync(cb func(ProxyResolver, string, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLookupAsync sets the callback function.
+func (x *ProxyResolverInterface) OverrideLookupAsync(cb func(ProxyResolver, string, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLookupAsync = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupAsync gets the callback function.
-func (x *ProxyResolverInterface) GetCallbackLookupAsync() func(ProxyResolver, string, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLookupAsync gets the callback function.
+func (x *ProxyResolverInterface) GetLookupAsync() func(ProxyResolver, string, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLookupAsync == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback(ResolverVar.GoPointer(), UriVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLookupFinish sets the callback function.
-func (x *ProxyResolverInterface) SetCallbackLookupFinish(cb func(ProxyResolver, AsyncResult) []string) {
+// OverrideLookupFinish sets the callback function.
+func (x *ProxyResolverInterface) OverrideLookupFinish(cb func(ProxyResolver, AsyncResult) []string) {
 	if cb == nil {
 		x.xLookupFinish = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupFinish gets the callback function.
-func (x *ProxyResolverInterface) GetCallbackLookupFinish() func(ProxyResolver, AsyncResult) []string {
+// GetLookupFinish gets the callback function.
+func (x *ProxyResolverInterface) GetLookupFinish() func(ProxyResolver, AsyncResult) []string {
 	if x.xLookupFinish == 0 {
 		return nil
 	}
diff --git a/v4/gio/gremoteactiongroup.go b/v4/gio/gremoteactiongroup.go
index d06292f60341de3e709979b2ac2a2df40ab2b838..8e00dd5a863c32665f0a5a18a613487d130bc71d 100644
--- a/v4/gio/gremoteactiongroup.go
+++ b/v4/gio/gremoteactiongroup.go
@@ -26,8 +26,8 @@ func (x *RemoteActionGroupInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackActivateActionFull sets the callback function.
-func (x *RemoteActionGroupInterface) SetCallbackActivateActionFull(cb func(RemoteActionGroup, string, *glib.Variant, *glib.Variant)) {
+// OverrideActivateActionFull sets the callback function.
+func (x *RemoteActionGroupInterface) OverrideActivateActionFull(cb func(RemoteActionGroup, string, *glib.Variant, *glib.Variant)) {
 	if cb == nil {
 		x.xActivateActionFull = 0
 	} else {
@@ -37,8 +37,8 @@ 		})
 	}
 }
 
-// GetCallbackActivateActionFull gets the callback function.
-func (x *RemoteActionGroupInterface) GetCallbackActivateActionFull() func(RemoteActionGroup, string, *glib.Variant, *glib.Variant) {
+// GetActivateActionFull gets the callback function.
+func (x *RemoteActionGroupInterface) GetActivateActionFull() func(RemoteActionGroup, string, *glib.Variant, *glib.Variant) {
 	if x.xActivateActionFull == 0 {
 		return nil
 	}
@@ -49,8 +49,8 @@ 		rawCallback(RemoteVar.GoPointer(), ActionNameVar, ParameterVar, PlatformDataVar)
 	}
 }
 
-// SetCallbackChangeActionStateFull sets the callback function.
-func (x *RemoteActionGroupInterface) SetCallbackChangeActionStateFull(cb func(RemoteActionGroup, string, *glib.Variant, *glib.Variant)) {
+// OverrideChangeActionStateFull sets the callback function.
+func (x *RemoteActionGroupInterface) OverrideChangeActionStateFull(cb func(RemoteActionGroup, string, *glib.Variant, *glib.Variant)) {
 	if cb == nil {
 		x.xChangeActionStateFull = 0
 	} else {
@@ -60,8 +60,8 @@ 		})
 	}
 }
 
-// GetCallbackChangeActionStateFull gets the callback function.
-func (x *RemoteActionGroupInterface) GetCallbackChangeActionStateFull() func(RemoteActionGroup, string, *glib.Variant, *glib.Variant) {
+// GetChangeActionStateFull gets the callback function.
+func (x *RemoteActionGroupInterface) GetChangeActionStateFull() func(RemoteActionGroup, string, *glib.Variant, *glib.Variant) {
 	if x.xChangeActionStateFull == 0 {
 		return nil
 	}
diff --git a/v4/gio/gresolver.go b/v4/gio/gresolver.go
index 90404e8611d2f7045eca6e750e7880a3dfc0cf9d..83e084d308e3a1b07e6a0de64dd8ff432a0b10d7 100644
--- a/v4/gio/gresolver.go
+++ b/v4/gio/gresolver.go
@@ -54,8 +54,8 @@ func (x *ResolverClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackReload sets the callback function.
-func (x *ResolverClass) SetCallbackReload(cb func(*Resolver)) {
+// OverrideReload sets the callback function.
+func (x *ResolverClass) OverrideReload(cb func(*Resolver)) {
 	if cb == nil {
 		x.xReload = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackReload gets the callback function.
-func (x *ResolverClass) GetCallbackReload() func(*Resolver) {
+// GetReload gets the callback function.
+func (x *ResolverClass) GetReload() func(*Resolver) {
 	if x.xReload == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback(ResolverVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupByName sets the callback function.
-func (x *ResolverClass) SetCallbackLookupByName(cb func(*Resolver, string, *Cancellable) *glib.List) {
+// OverrideLookupByName sets the callback function.
+func (x *ResolverClass) OverrideLookupByName(cb func(*Resolver, string, *Cancellable) *glib.List) {
 	if cb == nil {
 		x.xLookupByName = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupByName gets the callback function.
-func (x *ResolverClass) GetCallbackLookupByName() func(*Resolver, string, *Cancellable) *glib.List {
+// GetLookupByName gets the callback function.
+func (x *ResolverClass) GetLookupByName() func(*Resolver, string, *Cancellable) *glib.List {
 	if x.xLookupByName == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		return rawCallback(ResolverVar.GoPointer(), HostnameVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupByNameAsync sets the callback function.
-func (x *ResolverClass) SetCallbackLookupByNameAsync(cb func(*Resolver, string, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLookupByNameAsync sets the callback function.
+func (x *ResolverClass) OverrideLookupByNameAsync(cb func(*Resolver, string, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLookupByNameAsync = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupByNameAsync gets the callback function.
-func (x *ResolverClass) GetCallbackLookupByNameAsync() func(*Resolver, string, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLookupByNameAsync gets the callback function.
+func (x *ResolverClass) GetLookupByNameAsync() func(*Resolver, string, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLookupByNameAsync == 0 {
 		return nil
 	}
@@ -123,8 +123,8 @@ 		rawCallback(ResolverVar.GoPointer(), HostnameVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLookupByNameFinish sets the callback function.
-func (x *ResolverClass) SetCallbackLookupByNameFinish(cb func(*Resolver, AsyncResult) *glib.List) {
+// OverrideLookupByNameFinish sets the callback function.
+func (x *ResolverClass) OverrideLookupByNameFinish(cb func(*Resolver, AsyncResult) *glib.List) {
 	if cb == nil {
 		x.xLookupByNameFinish = 0
 	} else {
@@ -134,8 +134,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupByNameFinish gets the callback function.
-func (x *ResolverClass) GetCallbackLookupByNameFinish() func(*Resolver, AsyncResult) *glib.List {
+// GetLookupByNameFinish gets the callback function.
+func (x *ResolverClass) GetLookupByNameFinish() func(*Resolver, AsyncResult) *glib.List {
 	if x.xLookupByNameFinish == 0 {
 		return nil
 	}
@@ -146,8 +146,8 @@ 		return rawCallback(ResolverVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupByAddress sets the callback function.
-func (x *ResolverClass) SetCallbackLookupByAddress(cb func(*Resolver, *InetAddress, *Cancellable) string) {
+// OverrideLookupByAddress sets the callback function.
+func (x *ResolverClass) OverrideLookupByAddress(cb func(*Resolver, *InetAddress, *Cancellable) string) {
 	if cb == nil {
 		x.xLookupByAddress = 0
 	} else {
@@ -157,8 +157,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupByAddress gets the callback function.
-func (x *ResolverClass) GetCallbackLookupByAddress() func(*Resolver, *InetAddress, *Cancellable) string {
+// GetLookupByAddress gets the callback function.
+func (x *ResolverClass) GetLookupByAddress() func(*Resolver, *InetAddress, *Cancellable) string {
 	if x.xLookupByAddress == 0 {
 		return nil
 	}
@@ -169,8 +169,8 @@ 		return rawCallback(ResolverVar.GoPointer(), AddressVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupByAddressAsync sets the callback function.
-func (x *ResolverClass) SetCallbackLookupByAddressAsync(cb func(*Resolver, *InetAddress, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLookupByAddressAsync sets the callback function.
+func (x *ResolverClass) OverrideLookupByAddressAsync(cb func(*Resolver, *InetAddress, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLookupByAddressAsync = 0
 	} else {
@@ -180,8 +180,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupByAddressAsync gets the callback function.
-func (x *ResolverClass) GetCallbackLookupByAddressAsync() func(*Resolver, *InetAddress, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLookupByAddressAsync gets the callback function.
+func (x *ResolverClass) GetLookupByAddressAsync() func(*Resolver, *InetAddress, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLookupByAddressAsync == 0 {
 		return nil
 	}
@@ -192,8 +192,8 @@ 		rawCallback(ResolverVar.GoPointer(), AddressVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLookupByAddressFinish sets the callback function.
-func (x *ResolverClass) SetCallbackLookupByAddressFinish(cb func(*Resolver, AsyncResult) string) {
+// OverrideLookupByAddressFinish sets the callback function.
+func (x *ResolverClass) OverrideLookupByAddressFinish(cb func(*Resolver, AsyncResult) string) {
 	if cb == nil {
 		x.xLookupByAddressFinish = 0
 	} else {
@@ -203,8 +203,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupByAddressFinish gets the callback function.
-func (x *ResolverClass) GetCallbackLookupByAddressFinish() func(*Resolver, AsyncResult) string {
+// GetLookupByAddressFinish gets the callback function.
+func (x *ResolverClass) GetLookupByAddressFinish() func(*Resolver, AsyncResult) string {
 	if x.xLookupByAddressFinish == 0 {
 		return nil
 	}
@@ -215,8 +215,8 @@ 		return rawCallback(ResolverVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupService sets the callback function.
-func (x *ResolverClass) SetCallbackLookupService(cb func(*Resolver, string, *Cancellable) *glib.List) {
+// OverrideLookupService sets the callback function.
+func (x *ResolverClass) OverrideLookupService(cb func(*Resolver, string, *Cancellable) *glib.List) {
 	if cb == nil {
 		x.xLookupService = 0
 	} else {
@@ -226,8 +226,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupService gets the callback function.
-func (x *ResolverClass) GetCallbackLookupService() func(*Resolver, string, *Cancellable) *glib.List {
+// GetLookupService gets the callback function.
+func (x *ResolverClass) GetLookupService() func(*Resolver, string, *Cancellable) *glib.List {
 	if x.xLookupService == 0 {
 		return nil
 	}
@@ -238,8 +238,8 @@ 		return rawCallback(ResolverVar.GoPointer(), RrnameVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupServiceAsync sets the callback function.
-func (x *ResolverClass) SetCallbackLookupServiceAsync(cb func(*Resolver, string, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLookupServiceAsync sets the callback function.
+func (x *ResolverClass) OverrideLookupServiceAsync(cb func(*Resolver, string, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLookupServiceAsync = 0
 	} else {
@@ -249,8 +249,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupServiceAsync gets the callback function.
-func (x *ResolverClass) GetCallbackLookupServiceAsync() func(*Resolver, string, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLookupServiceAsync gets the callback function.
+func (x *ResolverClass) GetLookupServiceAsync() func(*Resolver, string, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLookupServiceAsync == 0 {
 		return nil
 	}
@@ -261,8 +261,8 @@ 		rawCallback(ResolverVar.GoPointer(), RrnameVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLookupServiceFinish sets the callback function.
-func (x *ResolverClass) SetCallbackLookupServiceFinish(cb func(*Resolver, AsyncResult) *glib.List) {
+// OverrideLookupServiceFinish sets the callback function.
+func (x *ResolverClass) OverrideLookupServiceFinish(cb func(*Resolver, AsyncResult) *glib.List) {
 	if cb == nil {
 		x.xLookupServiceFinish = 0
 	} else {
@@ -272,8 +272,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupServiceFinish gets the callback function.
-func (x *ResolverClass) GetCallbackLookupServiceFinish() func(*Resolver, AsyncResult) *glib.List {
+// GetLookupServiceFinish gets the callback function.
+func (x *ResolverClass) GetLookupServiceFinish() func(*Resolver, AsyncResult) *glib.List {
 	if x.xLookupServiceFinish == 0 {
 		return nil
 	}
@@ -284,8 +284,8 @@ 		return rawCallback(ResolverVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupRecords sets the callback function.
-func (x *ResolverClass) SetCallbackLookupRecords(cb func(*Resolver, string, ResolverRecordType, *Cancellable) *glib.List) {
+// OverrideLookupRecords sets the callback function.
+func (x *ResolverClass) OverrideLookupRecords(cb func(*Resolver, string, ResolverRecordType, *Cancellable) *glib.List) {
 	if cb == nil {
 		x.xLookupRecords = 0
 	} else {
@@ -295,8 +295,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupRecords gets the callback function.
-func (x *ResolverClass) GetCallbackLookupRecords() func(*Resolver, string, ResolverRecordType, *Cancellable) *glib.List {
+// GetLookupRecords gets the callback function.
+func (x *ResolverClass) GetLookupRecords() func(*Resolver, string, ResolverRecordType, *Cancellable) *glib.List {
 	if x.xLookupRecords == 0 {
 		return nil
 	}
@@ -307,8 +307,8 @@ 		return rawCallback(ResolverVar.GoPointer(), RrnameVar, RecordTypeVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupRecordsAsync sets the callback function.
-func (x *ResolverClass) SetCallbackLookupRecordsAsync(cb func(*Resolver, string, ResolverRecordType, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLookupRecordsAsync sets the callback function.
+func (x *ResolverClass) OverrideLookupRecordsAsync(cb func(*Resolver, string, ResolverRecordType, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLookupRecordsAsync = 0
 	} else {
@@ -318,8 +318,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupRecordsAsync gets the callback function.
-func (x *ResolverClass) GetCallbackLookupRecordsAsync() func(*Resolver, string, ResolverRecordType, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLookupRecordsAsync gets the callback function.
+func (x *ResolverClass) GetLookupRecordsAsync() func(*Resolver, string, ResolverRecordType, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLookupRecordsAsync == 0 {
 		return nil
 	}
@@ -330,8 +330,8 @@ 		rawCallback(ResolverVar.GoPointer(), RrnameVar, RecordTypeVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLookupRecordsFinish sets the callback function.
-func (x *ResolverClass) SetCallbackLookupRecordsFinish(cb func(*Resolver, AsyncResult) *glib.List) {
+// OverrideLookupRecordsFinish sets the callback function.
+func (x *ResolverClass) OverrideLookupRecordsFinish(cb func(*Resolver, AsyncResult) *glib.List) {
 	if cb == nil {
 		x.xLookupRecordsFinish = 0
 	} else {
@@ -341,8 +341,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupRecordsFinish gets the callback function.
-func (x *ResolverClass) GetCallbackLookupRecordsFinish() func(*Resolver, AsyncResult) *glib.List {
+// GetLookupRecordsFinish gets the callback function.
+func (x *ResolverClass) GetLookupRecordsFinish() func(*Resolver, AsyncResult) *glib.List {
 	if x.xLookupRecordsFinish == 0 {
 		return nil
 	}
@@ -353,8 +353,8 @@ 		return rawCallback(ResolverVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupByNameWithFlagsAsync sets the callback function.
-func (x *ResolverClass) SetCallbackLookupByNameWithFlagsAsync(cb func(*Resolver, string, ResolverNameLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLookupByNameWithFlagsAsync sets the callback function.
+func (x *ResolverClass) OverrideLookupByNameWithFlagsAsync(cb func(*Resolver, string, ResolverNameLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLookupByNameWithFlagsAsync = 0
 	} else {
@@ -364,8 +364,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupByNameWithFlagsAsync gets the callback function.
-func (x *ResolverClass) GetCallbackLookupByNameWithFlagsAsync() func(*Resolver, string, ResolverNameLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLookupByNameWithFlagsAsync gets the callback function.
+func (x *ResolverClass) GetLookupByNameWithFlagsAsync() func(*Resolver, string, ResolverNameLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLookupByNameWithFlagsAsync == 0 {
 		return nil
 	}
@@ -376,8 +376,8 @@ 		rawCallback(ResolverVar.GoPointer(), HostnameVar, FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLookupByNameWithFlagsFinish sets the callback function.
-func (x *ResolverClass) SetCallbackLookupByNameWithFlagsFinish(cb func(*Resolver, AsyncResult) *glib.List) {
+// OverrideLookupByNameWithFlagsFinish sets the callback function.
+func (x *ResolverClass) OverrideLookupByNameWithFlagsFinish(cb func(*Resolver, AsyncResult) *glib.List) {
 	if cb == nil {
 		x.xLookupByNameWithFlagsFinish = 0
 	} else {
@@ -387,8 +387,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupByNameWithFlagsFinish gets the callback function.
-func (x *ResolverClass) GetCallbackLookupByNameWithFlagsFinish() func(*Resolver, AsyncResult) *glib.List {
+// GetLookupByNameWithFlagsFinish gets the callback function.
+func (x *ResolverClass) GetLookupByNameWithFlagsFinish() func(*Resolver, AsyncResult) *glib.List {
 	if x.xLookupByNameWithFlagsFinish == 0 {
 		return nil
 	}
@@ -399,8 +399,8 @@ 		return rawCallback(ResolverVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupByNameWithFlags sets the callback function.
-func (x *ResolverClass) SetCallbackLookupByNameWithFlags(cb func(*Resolver, string, ResolverNameLookupFlags, *Cancellable) *glib.List) {
+// OverrideLookupByNameWithFlags sets the callback function.
+func (x *ResolverClass) OverrideLookupByNameWithFlags(cb func(*Resolver, string, ResolverNameLookupFlags, *Cancellable) *glib.List) {
 	if cb == nil {
 		x.xLookupByNameWithFlags = 0
 	} else {
@@ -410,8 +410,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupByNameWithFlags gets the callback function.
-func (x *ResolverClass) GetCallbackLookupByNameWithFlags() func(*Resolver, string, ResolverNameLookupFlags, *Cancellable) *glib.List {
+// GetLookupByNameWithFlags gets the callback function.
+func (x *ResolverClass) GetLookupByNameWithFlags() func(*Resolver, string, ResolverNameLookupFlags, *Cancellable) *glib.List {
 	if x.xLookupByNameWithFlags == 0 {
 		return nil
 	}
diff --git a/v4/gio/gseekable.go b/v4/gio/gseekable.go
index aafe963305cda12e539b7d2a0fa2ba6aee0763ad..ef85c05a3c183294be423059691dafe34b4a56f0 100644
--- a/v4/gio/gseekable.go
+++ b/v4/gio/gseekable.go
@@ -32,8 +32,8 @@ func (x *SeekableIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackTell sets the callback function.
-func (x *SeekableIface) SetCallbackTell(cb func(Seekable) int64) {
+// OverrideTell sets the callback function.
+func (x *SeekableIface) OverrideTell(cb func(Seekable) int64) {
 	if cb == nil {
 		x.xTell = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackTell gets the callback function.
-func (x *SeekableIface) GetCallbackTell() func(Seekable) int64 {
+// GetTell gets the callback function.
+func (x *SeekableIface) GetTell() func(Seekable) int64 {
 	if x.xTell == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		return rawCallback(SeekableVar.GoPointer())
 	}
 }
 
-// SetCallbackCanSeek sets the callback function.
-func (x *SeekableIface) SetCallbackCanSeek(cb func(Seekable) bool) {
+// OverrideCanSeek sets the callback function.
+func (x *SeekableIface) OverrideCanSeek(cb func(Seekable) bool) {
 	if cb == nil {
 		x.xCanSeek = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackCanSeek gets the callback function.
-func (x *SeekableIface) GetCallbackCanSeek() func(Seekable) bool {
+// GetCanSeek gets the callback function.
+func (x *SeekableIface) GetCanSeek() func(Seekable) bool {
 	if x.xCanSeek == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		return rawCallback(SeekableVar.GoPointer())
 	}
 }
 
-// SetCallbackSeek sets the callback function.
-func (x *SeekableIface) SetCallbackSeek(cb func(Seekable, int64, glib.SeekType, *Cancellable) bool) {
+// OverrideSeek sets the callback function.
+func (x *SeekableIface) OverrideSeek(cb func(Seekable, int64, glib.SeekType, *Cancellable) bool) {
 	if cb == nil {
 		x.xSeek = 0
 	} else {
@@ -89,8 +89,8 @@ 		})
 	}
 }
 
-// GetCallbackSeek gets the callback function.
-func (x *SeekableIface) GetCallbackSeek() func(Seekable, int64, glib.SeekType, *Cancellable) bool {
+// GetSeek gets the callback function.
+func (x *SeekableIface) GetSeek() func(Seekable, int64, glib.SeekType, *Cancellable) bool {
 	if x.xSeek == 0 {
 		return nil
 	}
@@ -101,8 +101,8 @@ 		return rawCallback(SeekableVar.GoPointer(), OffsetVar, TypeVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackCanTruncate sets the callback function.
-func (x *SeekableIface) SetCallbackCanTruncate(cb func(Seekable) bool) {
+// OverrideCanTruncate sets the callback function.
+func (x *SeekableIface) OverrideCanTruncate(cb func(Seekable) bool) {
 	if cb == nil {
 		x.xCanTruncate = 0
 	} else {
@@ -112,8 +112,8 @@ 		})
 	}
 }
 
-// GetCallbackCanTruncate gets the callback function.
-func (x *SeekableIface) GetCallbackCanTruncate() func(Seekable) bool {
+// GetCanTruncate gets the callback function.
+func (x *SeekableIface) GetCanTruncate() func(Seekable) bool {
 	if x.xCanTruncate == 0 {
 		return nil
 	}
@@ -124,8 +124,8 @@ 		return rawCallback(SeekableVar.GoPointer())
 	}
 }
 
-// SetCallbackTruncateFn sets the callback function.
-func (x *SeekableIface) SetCallbackTruncateFn(cb func(Seekable, int64, *Cancellable) bool) {
+// OverrideTruncateFn sets the callback function.
+func (x *SeekableIface) OverrideTruncateFn(cb func(Seekable, int64, *Cancellable) bool) {
 	if cb == nil {
 		x.xTruncateFn = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackTruncateFn gets the callback function.
-func (x *SeekableIface) GetCallbackTruncateFn() func(Seekable, int64, *Cancellable) bool {
+// GetTruncateFn gets the callback function.
+func (x *SeekableIface) GetTruncateFn() func(Seekable, int64, *Cancellable) bool {
 	if x.xTruncateFn == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsettings.go b/v4/gio/gsettings.go
index 34eb13a020fb5d02ca525a5351a68e9c5707502b..dcb87efa945030a32243ecd1d2344579d6981bfb 100644
--- a/v4/gio/gsettings.go
+++ b/v4/gio/gsettings.go
@@ -53,8 +53,8 @@ func (x *SettingsClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackWritableChanged sets the callback function.
-func (x *SettingsClass) SetCallbackWritableChanged(cb func(*Settings, string)) {
+// OverrideWritableChanged sets the callback function.
+func (x *SettingsClass) OverrideWritableChanged(cb func(*Settings, string)) {
 	if cb == nil {
 		x.xWritableChanged = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackWritableChanged gets the callback function.
-func (x *SettingsClass) GetCallbackWritableChanged() func(*Settings, string) {
+// GetWritableChanged gets the callback function.
+func (x *SettingsClass) GetWritableChanged() func(*Settings, string) {
 	if x.xWritableChanged == 0 {
 		return nil
 	}
@@ -76,8 +76,8 @@ 		rawCallback(SettingsVar.GoPointer(), KeyVar)
 	}
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *SettingsClass) SetCallbackChanged(cb func(*Settings, string)) {
+// OverrideChanged sets the callback function.
+func (x *SettingsClass) OverrideChanged(cb func(*Settings, string)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *SettingsClass) GetCallbackChanged() func(*Settings, string) {
+// GetChanged gets the callback function.
+func (x *SettingsClass) GetChanged() func(*Settings, string) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -99,8 +99,8 @@ 		rawCallback(SettingsVar.GoPointer(), KeyVar)
 	}
 }
 
-// SetCallbackWritableChangeEvent sets the callback function.
-func (x *SettingsClass) SetCallbackWritableChangeEvent(cb func(*Settings, glib.Quark) bool) {
+// OverrideWritableChangeEvent sets the callback function.
+func (x *SettingsClass) OverrideWritableChangeEvent(cb func(*Settings, glib.Quark) bool) {
 	if cb == nil {
 		x.xWritableChangeEvent = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackWritableChangeEvent gets the callback function.
-func (x *SettingsClass) GetCallbackWritableChangeEvent() func(*Settings, glib.Quark) bool {
+// GetWritableChangeEvent gets the callback function.
+func (x *SettingsClass) GetWritableChangeEvent() func(*Settings, glib.Quark) bool {
 	if x.xWritableChangeEvent == 0 {
 		return nil
 	}
@@ -122,8 +122,8 @@ 		return rawCallback(SettingsVar.GoPointer(), KeyVar)
 	}
 }
 
-// SetCallbackChangeEvent sets the callback function.
-func (x *SettingsClass) SetCallbackChangeEvent(cb func(*Settings, *glib.Quark, int) bool) {
+// OverrideChangeEvent sets the callback function.
+func (x *SettingsClass) OverrideChangeEvent(cb func(*Settings, *glib.Quark, int) bool) {
 	if cb == nil {
 		x.xChangeEvent = 0
 	} else {
@@ -133,8 +133,8 @@ 		})
 	}
 }
 
-// GetCallbackChangeEvent gets the callback function.
-func (x *SettingsClass) GetCallbackChangeEvent() func(*Settings, *glib.Quark, int) bool {
+// GetChangeEvent gets the callback function.
+func (x *SettingsClass) GetChangeEvent() func(*Settings, *glib.Quark, int) bool {
 	if x.xChangeEvent == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsettingsbackend.go b/v4/gio/gsettingsbackend.go
index 7c97b5ef500b38ebe38657d3bc555c0120c22239..cc109627138d02d2a5a0067e7989e3c2ed01b4e1 100644
--- a/v4/gio/gsettingsbackend.go
+++ b/v4/gio/gsettingsbackend.go
@@ -45,8 +45,8 @@ func (x *SettingsBackendClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackRead sets the callback function.
-func (x *SettingsBackendClass) SetCallbackRead(cb func(*SettingsBackend, string, *glib.VariantType, bool) *glib.Variant) {
+// OverrideRead sets the callback function.
+func (x *SettingsBackendClass) OverrideRead(cb func(*SettingsBackend, string, *glib.VariantType, bool) *glib.Variant) {
 	if cb == nil {
 		x.xRead = 0
 	} else {
@@ -56,8 +56,8 @@ 		})
 	}
 }
 
-// GetCallbackRead gets the callback function.
-func (x *SettingsBackendClass) GetCallbackRead() func(*SettingsBackend, string, *glib.VariantType, bool) *glib.Variant {
+// GetRead gets the callback function.
+func (x *SettingsBackendClass) GetRead() func(*SettingsBackend, string, *glib.VariantType, bool) *glib.Variant {
 	if x.xRead == 0 {
 		return nil
 	}
@@ -68,8 +68,8 @@ 		return rawCallback(BackendVar.GoPointer(), KeyVar, ExpectedTypeVar, DefaultValueVar)
 	}
 }
 
-// SetCallbackGetWritable sets the callback function.
-func (x *SettingsBackendClass) SetCallbackGetWritable(cb func(*SettingsBackend, string) bool) {
+// OverrideGetWritable sets the callback function.
+func (x *SettingsBackendClass) OverrideGetWritable(cb func(*SettingsBackend, string) bool) {
 	if cb == nil {
 		x.xGetWritable = 0
 	} else {
@@ -79,8 +79,8 @@ 		})
 	}
 }
 
-// GetCallbackGetWritable gets the callback function.
-func (x *SettingsBackendClass) GetCallbackGetWritable() func(*SettingsBackend, string) bool {
+// GetGetWritable gets the callback function.
+func (x *SettingsBackendClass) GetGetWritable() func(*SettingsBackend, string) bool {
 	if x.xGetWritable == 0 {
 		return nil
 	}
@@ -91,8 +91,8 @@ 		return rawCallback(BackendVar.GoPointer(), KeyVar)
 	}
 }
 
-// SetCallbackWrite sets the callback function.
-func (x *SettingsBackendClass) SetCallbackWrite(cb func(*SettingsBackend, string, *glib.Variant, uintptr) bool) {
+// OverrideWrite sets the callback function.
+func (x *SettingsBackendClass) OverrideWrite(cb func(*SettingsBackend, string, *glib.Variant, uintptr) bool) {
 	if cb == nil {
 		x.xWrite = 0
 	} else {
@@ -102,8 +102,8 @@ 		})
 	}
 }
 
-// GetCallbackWrite gets the callback function.
-func (x *SettingsBackendClass) GetCallbackWrite() func(*SettingsBackend, string, *glib.Variant, uintptr) bool {
+// GetWrite gets the callback function.
+func (x *SettingsBackendClass) GetWrite() func(*SettingsBackend, string, *glib.Variant, uintptr) bool {
 	if x.xWrite == 0 {
 		return nil
 	}
@@ -114,8 +114,8 @@ 		return rawCallback(BackendVar.GoPointer(), KeyVar, ValueVar, OriginTagVar)
 	}
 }
 
-// SetCallbackWriteTree sets the callback function.
-func (x *SettingsBackendClass) SetCallbackWriteTree(cb func(*SettingsBackend, *glib.Tree, uintptr) bool) {
+// OverrideWriteTree sets the callback function.
+func (x *SettingsBackendClass) OverrideWriteTree(cb func(*SettingsBackend, *glib.Tree, uintptr) bool) {
 	if cb == nil {
 		x.xWriteTree = 0
 	} else {
@@ -125,8 +125,8 @@ 		})
 	}
 }
 
-// GetCallbackWriteTree gets the callback function.
-func (x *SettingsBackendClass) GetCallbackWriteTree() func(*SettingsBackend, *glib.Tree, uintptr) bool {
+// GetWriteTree gets the callback function.
+func (x *SettingsBackendClass) GetWriteTree() func(*SettingsBackend, *glib.Tree, uintptr) bool {
 	if x.xWriteTree == 0 {
 		return nil
 	}
@@ -137,8 +137,8 @@ 		return rawCallback(BackendVar.GoPointer(), TreeVar, OriginTagVar)
 	}
 }
 
-// SetCallbackReset sets the callback function.
-func (x *SettingsBackendClass) SetCallbackReset(cb func(*SettingsBackend, string, uintptr)) {
+// OverrideReset sets the callback function.
+func (x *SettingsBackendClass) OverrideReset(cb func(*SettingsBackend, string, uintptr)) {
 	if cb == nil {
 		x.xReset = 0
 	} else {
@@ -148,8 +148,8 @@ 		})
 	}
 }
 
-// GetCallbackReset gets the callback function.
-func (x *SettingsBackendClass) GetCallbackReset() func(*SettingsBackend, string, uintptr) {
+// GetReset gets the callback function.
+func (x *SettingsBackendClass) GetReset() func(*SettingsBackend, string, uintptr) {
 	if x.xReset == 0 {
 		return nil
 	}
@@ -160,8 +160,8 @@ 		rawCallback(BackendVar.GoPointer(), KeyVar, OriginTagVar)
 	}
 }
 
-// SetCallbackSubscribe sets the callback function.
-func (x *SettingsBackendClass) SetCallbackSubscribe(cb func(*SettingsBackend, string)) {
+// OverrideSubscribe sets the callback function.
+func (x *SettingsBackendClass) OverrideSubscribe(cb func(*SettingsBackend, string)) {
 	if cb == nil {
 		x.xSubscribe = 0
 	} else {
@@ -171,8 +171,8 @@ 		})
 	}
 }
 
-// GetCallbackSubscribe gets the callback function.
-func (x *SettingsBackendClass) GetCallbackSubscribe() func(*SettingsBackend, string) {
+// GetSubscribe gets the callback function.
+func (x *SettingsBackendClass) GetSubscribe() func(*SettingsBackend, string) {
 	if x.xSubscribe == 0 {
 		return nil
 	}
@@ -183,8 +183,8 @@ 		rawCallback(BackendVar.GoPointer(), NameVar)
 	}
 }
 
-// SetCallbackUnsubscribe sets the callback function.
-func (x *SettingsBackendClass) SetCallbackUnsubscribe(cb func(*SettingsBackend, string)) {
+// OverrideUnsubscribe sets the callback function.
+func (x *SettingsBackendClass) OverrideUnsubscribe(cb func(*SettingsBackend, string)) {
 	if cb == nil {
 		x.xUnsubscribe = 0
 	} else {
@@ -194,8 +194,8 @@ 		})
 	}
 }
 
-// GetCallbackUnsubscribe gets the callback function.
-func (x *SettingsBackendClass) GetCallbackUnsubscribe() func(*SettingsBackend, string) {
+// GetUnsubscribe gets the callback function.
+func (x *SettingsBackendClass) GetUnsubscribe() func(*SettingsBackend, string) {
 	if x.xUnsubscribe == 0 {
 		return nil
 	}
@@ -206,8 +206,8 @@ 		rawCallback(BackendVar.GoPointer(), NameVar)
 	}
 }
 
-// SetCallbackSync sets the callback function.
-func (x *SettingsBackendClass) SetCallbackSync(cb func(*SettingsBackend)) {
+// OverrideSync sets the callback function.
+func (x *SettingsBackendClass) OverrideSync(cb func(*SettingsBackend)) {
 	if cb == nil {
 		x.xSync = 0
 	} else {
@@ -217,8 +217,8 @@ 		})
 	}
 }
 
-// GetCallbackSync gets the callback function.
-func (x *SettingsBackendClass) GetCallbackSync() func(*SettingsBackend) {
+// GetSync gets the callback function.
+func (x *SettingsBackendClass) GetSync() func(*SettingsBackend) {
 	if x.xSync == 0 {
 		return nil
 	}
@@ -229,8 +229,8 @@ 		rawCallback(BackendVar.GoPointer())
 	}
 }
 
-// SetCallbackGetPermission sets the callback function.
-func (x *SettingsBackendClass) SetCallbackGetPermission(cb func(*SettingsBackend, string) *Permission) {
+// OverrideGetPermission sets the callback function.
+func (x *SettingsBackendClass) OverrideGetPermission(cb func(*SettingsBackend, string) *Permission) {
 	if cb == nil {
 		x.xGetPermission = 0
 	} else {
@@ -244,8 +244,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPermission gets the callback function.
-func (x *SettingsBackendClass) GetCallbackGetPermission() func(*SettingsBackend, string) *Permission {
+// GetGetPermission gets the callback function.
+func (x *SettingsBackendClass) GetGetPermission() func(*SettingsBackend, string) *Permission {
 	if x.xGetPermission == 0 {
 		return nil
 	}
@@ -262,8 +262,8 @@ 		return ret
 	}
 }
 
-// SetCallbackReadUserValue sets the callback function.
-func (x *SettingsBackendClass) SetCallbackReadUserValue(cb func(*SettingsBackend, string, *glib.VariantType) *glib.Variant) {
+// OverrideReadUserValue sets the callback function.
+func (x *SettingsBackendClass) OverrideReadUserValue(cb func(*SettingsBackend, string, *glib.VariantType) *glib.Variant) {
 	if cb == nil {
 		x.xReadUserValue = 0
 	} else {
@@ -273,8 +273,8 @@ 		})
 	}
 }
 
-// GetCallbackReadUserValue gets the callback function.
-func (x *SettingsBackendClass) GetCallbackReadUserValue() func(*SettingsBackend, string, *glib.VariantType) *glib.Variant {
+// GetReadUserValue gets the callback function.
+func (x *SettingsBackendClass) GetReadUserValue() func(*SettingsBackend, string, *glib.VariantType) *glib.Variant {
 	if x.xReadUserValue == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsimpleproxyresolver.go b/v4/gio/gsimpleproxyresolver.go
index 7a1131fcb4ad847133647020bf583ee79651e8cb..5ff859a1213081975c10a62eeefc1d910bf18350 100644
--- a/v4/gio/gsimpleproxyresolver.go
+++ b/v4/gio/gsimpleproxyresolver.go
@@ -32,8 +32,8 @@ func (x *SimpleProxyResolverClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *SimpleProxyResolverClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *SimpleProxyResolverClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *SimpleProxyResolverClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *SimpleProxyResolverClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *SimpleProxyResolverClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *SimpleProxyResolverClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *SimpleProxyResolverClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *SimpleProxyResolverClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *SimpleProxyResolverClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *SimpleProxyResolverClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -89,8 +89,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *SimpleProxyResolverClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *SimpleProxyResolverClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -101,8 +101,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *SimpleProxyResolverClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *SimpleProxyResolverClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -112,8 +112,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *SimpleProxyResolverClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *SimpleProxyResolverClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -124,8 +124,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *SimpleProxyResolverClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *SimpleProxyResolverClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *SimpleProxyResolverClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *SimpleProxyResolverClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsocket.go b/v4/gio/gsocket.go
index 5c591fd78047c751234d0a8a3df45fd452e75103..ef36fa9e382399a537efc18adea2ac7e14f3c5e1 100644
--- a/v4/gio/gsocket.go
+++ b/v4/gio/gsocket.go
@@ -42,8 +42,8 @@ func (x *SocketClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *SocketClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -53,8 +53,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *SocketClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -65,8 +65,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *SocketClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -76,8 +76,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *SocketClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -88,8 +88,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *SocketClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -99,8 +99,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *SocketClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -111,8 +111,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *SocketClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -122,8 +122,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *SocketClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -134,8 +134,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *SocketClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -145,8 +145,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *SocketClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -157,8 +157,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *SocketClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -168,8 +168,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *SocketClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
@@ -180,8 +180,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved7 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved7(cb func()) {
+// OverrideGReserved7 sets the callback function.
+func (x *SocketClass) OverrideGReserved7(cb func()) {
 	if cb == nil {
 		x.xGReserved7 = 0
 	} else {
@@ -191,8 +191,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved7 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved7() func() {
+// GetGReserved7 gets the callback function.
+func (x *SocketClass) GetGReserved7() func() {
 	if x.xGReserved7 == 0 {
 		return nil
 	}
@@ -203,8 +203,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved8 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved8(cb func()) {
+// OverrideGReserved8 sets the callback function.
+func (x *SocketClass) OverrideGReserved8(cb func()) {
 	if cb == nil {
 		x.xGReserved8 = 0
 	} else {
@@ -214,8 +214,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved8 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved8() func() {
+// GetGReserved8 gets the callback function.
+func (x *SocketClass) GetGReserved8() func() {
 	if x.xGReserved8 == 0 {
 		return nil
 	}
@@ -226,8 +226,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved9 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved9(cb func()) {
+// OverrideGReserved9 sets the callback function.
+func (x *SocketClass) OverrideGReserved9(cb func()) {
 	if cb == nil {
 		x.xGReserved9 = 0
 	} else {
@@ -237,8 +237,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved9 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved9() func() {
+// GetGReserved9 gets the callback function.
+func (x *SocketClass) GetGReserved9() func() {
 	if x.xGReserved9 == 0 {
 		return nil
 	}
@@ -249,8 +249,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved10 sets the callback function.
-func (x *SocketClass) SetCallbackGReserved10(cb func()) {
+// OverrideGReserved10 sets the callback function.
+func (x *SocketClass) OverrideGReserved10(cb func()) {
 	if cb == nil {
 		x.xGReserved10 = 0
 	} else {
@@ -260,8 +260,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved10 gets the callback function.
-func (x *SocketClass) GetCallbackGReserved10() func() {
+// GetGReserved10 gets the callback function.
+func (x *SocketClass) GetGReserved10() func() {
 	if x.xGReserved10 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsocketaddress.go b/v4/gio/gsocketaddress.go
index 62d93dbf83b8a7f54be1f0c591718b81e3f6f0ee..7ac7209602cd8a5e174f186ed2f59dd6d2f98342 100644
--- a/v4/gio/gsocketaddress.go
+++ b/v4/gio/gsocketaddress.go
@@ -28,8 +28,8 @@ func (x *SocketAddressClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetFamily sets the callback function.
-func (x *SocketAddressClass) SetCallbackGetFamily(cb func(*SocketAddress) SocketFamily) {
+// OverrideGetFamily sets the callback function.
+func (x *SocketAddressClass) OverrideGetFamily(cb func(*SocketAddress) SocketFamily) {
 	if cb == nil {
 		x.xGetFamily = 0
 	} else {
@@ -39,8 +39,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFamily gets the callback function.
-func (x *SocketAddressClass) GetCallbackGetFamily() func(*SocketAddress) SocketFamily {
+// GetGetFamily gets the callback function.
+func (x *SocketAddressClass) GetGetFamily() func(*SocketAddress) SocketFamily {
 	if x.xGetFamily == 0 {
 		return nil
 	}
@@ -51,8 +51,8 @@ 		return rawCallback(AddressVar.GoPointer())
 	}
 }
 
-// SetCallbackGetNativeSize sets the callback function.
-func (x *SocketAddressClass) SetCallbackGetNativeSize(cb func(*SocketAddress) int) {
+// OverrideGetNativeSize sets the callback function.
+func (x *SocketAddressClass) OverrideGetNativeSize(cb func(*SocketAddress) int) {
 	if cb == nil {
 		x.xGetNativeSize = 0
 	} else {
@@ -62,8 +62,8 @@ 		})
 	}
 }
 
-// GetCallbackGetNativeSize gets the callback function.
-func (x *SocketAddressClass) GetCallbackGetNativeSize() func(*SocketAddress) int {
+// GetGetNativeSize gets the callback function.
+func (x *SocketAddressClass) GetGetNativeSize() func(*SocketAddress) int {
 	if x.xGetNativeSize == 0 {
 		return nil
 	}
@@ -74,8 +74,8 @@ 		return rawCallback(AddressVar.GoPointer())
 	}
 }
 
-// SetCallbackToNative sets the callback function.
-func (x *SocketAddressClass) SetCallbackToNative(cb func(*SocketAddress, uintptr, uint) bool) {
+// OverrideToNative sets the callback function.
+func (x *SocketAddressClass) OverrideToNative(cb func(*SocketAddress, uintptr, uint) bool) {
 	if cb == nil {
 		x.xToNative = 0
 	} else {
@@ -85,8 +85,8 @@ 		})
 	}
 }
 
-// GetCallbackToNative gets the callback function.
-func (x *SocketAddressClass) GetCallbackToNative() func(*SocketAddress, uintptr, uint) bool {
+// GetToNative gets the callback function.
+func (x *SocketAddressClass) GetToNative() func(*SocketAddress, uintptr, uint) bool {
 	if x.xToNative == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsocketaddressenumerator.go b/v4/gio/gsocketaddressenumerator.go
index 2ab5a7707778dd069686257922b907565ace5535..ca8805c702a0556a4012870dc9981be73b277479 100644
--- a/v4/gio/gsocketaddressenumerator.go
+++ b/v4/gio/gsocketaddressenumerator.go
@@ -29,8 +29,8 @@ func (x *SocketAddressEnumeratorClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackNext sets the callback function.
-func (x *SocketAddressEnumeratorClass) SetCallbackNext(cb func(*SocketAddressEnumerator, *Cancellable) *SocketAddress) {
+// OverrideNext sets the callback function.
+func (x *SocketAddressEnumeratorClass) OverrideNext(cb func(*SocketAddressEnumerator, *Cancellable) *SocketAddress) {
 	if cb == nil {
 		x.xNext = 0
 	} else {
@@ -44,8 +44,8 @@ 		})
 	}
 }
 
-// GetCallbackNext gets the callback function.
-func (x *SocketAddressEnumeratorClass) GetCallbackNext() func(*SocketAddressEnumerator, *Cancellable) *SocketAddress {
+// GetNext gets the callback function.
+func (x *SocketAddressEnumeratorClass) GetNext() func(*SocketAddressEnumerator, *Cancellable) *SocketAddress {
 	if x.xNext == 0 {
 		return nil
 	}
@@ -62,8 +62,8 @@ 		return ret
 	}
 }
 
-// SetCallbackNextAsync sets the callback function.
-func (x *SocketAddressEnumeratorClass) SetCallbackNextAsync(cb func(*SocketAddressEnumerator, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideNextAsync sets the callback function.
+func (x *SocketAddressEnumeratorClass) OverrideNextAsync(cb func(*SocketAddressEnumerator, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xNextAsync = 0
 	} else {
@@ -73,8 +73,8 @@ 		})
 	}
 }
 
-// GetCallbackNextAsync gets the callback function.
-func (x *SocketAddressEnumeratorClass) GetCallbackNextAsync() func(*SocketAddressEnumerator, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetNextAsync gets the callback function.
+func (x *SocketAddressEnumeratorClass) GetNextAsync() func(*SocketAddressEnumerator, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xNextAsync == 0 {
 		return nil
 	}
@@ -85,8 +85,8 @@ 		rawCallback(EnumeratorVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackNextFinish sets the callback function.
-func (x *SocketAddressEnumeratorClass) SetCallbackNextFinish(cb func(*SocketAddressEnumerator, AsyncResult) *SocketAddress) {
+// OverrideNextFinish sets the callback function.
+func (x *SocketAddressEnumeratorClass) OverrideNextFinish(cb func(*SocketAddressEnumerator, AsyncResult) *SocketAddress) {
 	if cb == nil {
 		x.xNextFinish = 0
 	} else {
@@ -100,8 +100,8 @@ 		})
 	}
 }
 
-// GetCallbackNextFinish gets the callback function.
-func (x *SocketAddressEnumeratorClass) GetCallbackNextFinish() func(*SocketAddressEnumerator, AsyncResult) *SocketAddress {
+// GetNextFinish gets the callback function.
+func (x *SocketAddressEnumeratorClass) GetNextFinish() func(*SocketAddressEnumerator, AsyncResult) *SocketAddress {
 	if x.xNextFinish == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsocketclient.go b/v4/gio/gsocketclient.go
index 5c0360bbf69a4218300b8528c62416cc05c5ac46..1d6486a64a746d991fb887759458ecae91784f3d 100644
--- a/v4/gio/gsocketclient.go
+++ b/v4/gio/gsocketclient.go
@@ -32,8 +32,8 @@ func (x *SocketClientClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackEvent sets the callback function.
-func (x *SocketClientClass) SetCallbackEvent(cb func(*SocketClient, SocketClientEvent, SocketConnectable, *IOStream)) {
+// OverrideEvent sets the callback function.
+func (x *SocketClientClass) OverrideEvent(cb func(*SocketClient, SocketClientEvent, SocketConnectable, *IOStream)) {
 	if cb == nil {
 		x.xEvent = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackEvent gets the callback function.
-func (x *SocketClientClass) GetCallbackEvent() func(*SocketClient, SocketClientEvent, SocketConnectable, *IOStream) {
+// GetEvent gets the callback function.
+func (x *SocketClientClass) GetEvent() func(*SocketClient, SocketClientEvent, SocketConnectable, *IOStream) {
 	if x.xEvent == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		rawCallback(ClientVar.GoPointer(), EventVar, ConnectableVar.GoPointer(), ConnectionVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *SocketClientClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *SocketClientClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *SocketClientClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *SocketClientClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *SocketClientClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *SocketClientClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -89,8 +89,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *SocketClientClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *SocketClientClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -101,8 +101,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *SocketClientClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *SocketClientClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -112,8 +112,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *SocketClientClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *SocketClientClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -124,8 +124,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *SocketClientClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *SocketClientClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *SocketClientClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *SocketClientClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsocketconnectable.go b/v4/gio/gsocketconnectable.go
index 10ad5f8a2a355e3bb0191552e7789f2e05f0ff3c..fa675866a1ae255eae095c05a89f061587d217ea 100644
--- a/v4/gio/gsocketconnectable.go
+++ b/v4/gio/gsocketconnectable.go
@@ -28,8 +28,8 @@ func (x *SocketConnectableIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackEnumerate sets the callback function.
-func (x *SocketConnectableIface) SetCallbackEnumerate(cb func(SocketConnectable) *SocketAddressEnumerator) {
+// OverrideEnumerate sets the callback function.
+func (x *SocketConnectableIface) OverrideEnumerate(cb func(SocketConnectable) *SocketAddressEnumerator) {
 	if cb == nil {
 		x.xEnumerate = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackEnumerate gets the callback function.
-func (x *SocketConnectableIface) GetCallbackEnumerate() func(SocketConnectable) *SocketAddressEnumerator {
+// GetEnumerate gets the callback function.
+func (x *SocketConnectableIface) GetEnumerate() func(SocketConnectable) *SocketAddressEnumerator {
 	if x.xEnumerate == 0 {
 		return nil
 	}
@@ -61,8 +61,8 @@ 		return ret
 	}
 }
 
-// SetCallbackProxyEnumerate sets the callback function.
-func (x *SocketConnectableIface) SetCallbackProxyEnumerate(cb func(SocketConnectable) *SocketAddressEnumerator) {
+// OverrideProxyEnumerate sets the callback function.
+func (x *SocketConnectableIface) OverrideProxyEnumerate(cb func(SocketConnectable) *SocketAddressEnumerator) {
 	if cb == nil {
 		x.xProxyEnumerate = 0
 	} else {
@@ -76,8 +76,8 @@ 		})
 	}
 }
 
-// GetCallbackProxyEnumerate gets the callback function.
-func (x *SocketConnectableIface) GetCallbackProxyEnumerate() func(SocketConnectable) *SocketAddressEnumerator {
+// GetProxyEnumerate gets the callback function.
+func (x *SocketConnectableIface) GetProxyEnumerate() func(SocketConnectable) *SocketAddressEnumerator {
 	if x.xProxyEnumerate == 0 {
 		return nil
 	}
@@ -94,8 +94,8 @@ 		return ret
 	}
 }
 
-// SetCallbackToString sets the callback function.
-func (x *SocketConnectableIface) SetCallbackToString(cb func(SocketConnectable) string) {
+// OverrideToString sets the callback function.
+func (x *SocketConnectableIface) OverrideToString(cb func(SocketConnectable) string) {
 	if cb == nil {
 		x.xToString = 0
 	} else {
@@ -105,8 +105,8 @@ 		})
 	}
 }
 
-// GetCallbackToString gets the callback function.
-func (x *SocketConnectableIface) GetCallbackToString() func(SocketConnectable) string {
+// GetToString gets the callback function.
+func (x *SocketConnectableIface) GetToString() func(SocketConnectable) string {
 	if x.xToString == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsocketconnection.go b/v4/gio/gsocketconnection.go
index 3d610a3494d6dfcc5431d09ef6d8119927e9d666..96b86b78988ee233ac320e2c5b9c58d3e6e030bf 100644
--- a/v4/gio/gsocketconnection.go
+++ b/v4/gio/gsocketconnection.go
@@ -34,8 +34,8 @@ func (x *SocketConnectionClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *SocketConnectionClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *SocketConnectionClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *SocketConnectionClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *SocketConnectionClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -57,8 +57,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *SocketConnectionClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *SocketConnectionClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -68,8 +68,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *SocketConnectionClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *SocketConnectionClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -80,8 +80,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *SocketConnectionClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *SocketConnectionClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -91,8 +91,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *SocketConnectionClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *SocketConnectionClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -103,8 +103,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *SocketConnectionClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *SocketConnectionClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -114,8 +114,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *SocketConnectionClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *SocketConnectionClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -126,8 +126,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *SocketConnectionClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *SocketConnectionClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -137,8 +137,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *SocketConnectionClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *SocketConnectionClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -149,8 +149,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *SocketConnectionClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *SocketConnectionClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -160,8 +160,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *SocketConnectionClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *SocketConnectionClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsocketcontrolmessage.go b/v4/gio/gsocketcontrolmessage.go
index d5156569c848f79adc8865478cb0da16b157744b..ce09558192fe75ebbac780fca926fc829de2974f 100644
--- a/v4/gio/gsocketcontrolmessage.go
+++ b/v4/gio/gsocketcontrolmessage.go
@@ -42,8 +42,8 @@ func (x *SocketControlMessageClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetSize sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackGetSize(cb func(*SocketControlMessage) uint) {
+// OverrideGetSize sets the callback function.
+func (x *SocketControlMessageClass) OverrideGetSize(cb func(*SocketControlMessage) uint) {
 	if cb == nil {
 		x.xGetSize = 0
 	} else {
@@ -53,8 +53,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSize gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackGetSize() func(*SocketControlMessage) uint {
+// GetGetSize gets the callback function.
+func (x *SocketControlMessageClass) GetGetSize() func(*SocketControlMessage) uint {
 	if x.xGetSize == 0 {
 		return nil
 	}
@@ -65,8 +65,8 @@ 		return rawCallback(MessageVar.GoPointer())
 	}
 }
 
-// SetCallbackGetLevel sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackGetLevel(cb func(*SocketControlMessage) int) {
+// OverrideGetLevel sets the callback function.
+func (x *SocketControlMessageClass) OverrideGetLevel(cb func(*SocketControlMessage) int) {
 	if cb == nil {
 		x.xGetLevel = 0
 	} else {
@@ -76,8 +76,8 @@ 		})
 	}
 }
 
-// GetCallbackGetLevel gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackGetLevel() func(*SocketControlMessage) int {
+// GetGetLevel gets the callback function.
+func (x *SocketControlMessageClass) GetGetLevel() func(*SocketControlMessage) int {
 	if x.xGetLevel == 0 {
 		return nil
 	}
@@ -88,8 +88,8 @@ 		return rawCallback(MessageVar.GoPointer())
 	}
 }
 
-// SetCallbackGetType sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackGetType(cb func(*SocketControlMessage) int) {
+// OverrideGetType sets the callback function.
+func (x *SocketControlMessageClass) OverrideGetType(cb func(*SocketControlMessage) int) {
 	if cb == nil {
 		x.xGetType = 0
 	} else {
@@ -99,8 +99,8 @@ 		})
 	}
 }
 
-// GetCallbackGetType gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackGetType() func(*SocketControlMessage) int {
+// GetGetType gets the callback function.
+func (x *SocketControlMessageClass) GetGetType() func(*SocketControlMessage) int {
 	if x.xGetType == 0 {
 		return nil
 	}
@@ -111,8 +111,8 @@ 		return rawCallback(MessageVar.GoPointer())
 	}
 }
 
-// SetCallbackSerialize sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackSerialize(cb func(*SocketControlMessage, uintptr)) {
+// OverrideSerialize sets the callback function.
+func (x *SocketControlMessageClass) OverrideSerialize(cb func(*SocketControlMessage, uintptr)) {
 	if cb == nil {
 		x.xSerialize = 0
 	} else {
@@ -122,8 +122,8 @@ 		})
 	}
 }
 
-// GetCallbackSerialize gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackSerialize() func(*SocketControlMessage, uintptr) {
+// GetSerialize gets the callback function.
+func (x *SocketControlMessageClass) GetSerialize() func(*SocketControlMessage, uintptr) {
 	if x.xSerialize == 0 {
 		return nil
 	}
@@ -134,8 +134,8 @@ 		rawCallback(MessageVar.GoPointer(), DataVar)
 	}
 }
 
-// SetCallbackDeserialize sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackDeserialize(cb func(int, int, uint, uintptr) *SocketControlMessage) {
+// OverrideDeserialize sets the callback function.
+func (x *SocketControlMessageClass) OverrideDeserialize(cb func(int, int, uint, uintptr) *SocketControlMessage) {
 	if cb == nil {
 		x.xDeserialize = 0
 	} else {
@@ -149,8 +149,8 @@ 		})
 	}
 }
 
-// GetCallbackDeserialize gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackDeserialize() func(int, int, uint, uintptr) *SocketControlMessage {
+// GetDeserialize gets the callback function.
+func (x *SocketControlMessageClass) GetDeserialize() func(int, int, uint, uintptr) *SocketControlMessage {
 	if x.xDeserialize == 0 {
 		return nil
 	}
@@ -167,8 +167,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *SocketControlMessageClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -178,8 +178,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *SocketControlMessageClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -190,8 +190,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *SocketControlMessageClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -201,8 +201,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *SocketControlMessageClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -213,8 +213,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *SocketControlMessageClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -224,8 +224,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *SocketControlMessageClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -236,8 +236,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *SocketControlMessageClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -247,8 +247,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *SocketControlMessageClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -259,8 +259,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *SocketControlMessageClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *SocketControlMessageClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -270,8 +270,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *SocketControlMessageClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *SocketControlMessageClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsocketlistener.go b/v4/gio/gsocketlistener.go
index e5430d502c7b13cda4678ce64f388ad2de1a0cbb..5f5a4debaad6f1dc2bcf172214244fae7c309de3 100644
--- a/v4/gio/gsocketlistener.go
+++ b/v4/gio/gsocketlistener.go
@@ -37,8 +37,8 @@ func (x *SocketListenerClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *SocketListenerClass) SetCallbackChanged(cb func(*SocketListener)) {
+// OverrideChanged sets the callback function.
+func (x *SocketListenerClass) OverrideChanged(cb func(*SocketListener)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -48,8 +48,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *SocketListenerClass) GetCallbackChanged() func(*SocketListener) {
+// GetChanged gets the callback function.
+func (x *SocketListenerClass) GetChanged() func(*SocketListener) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -60,8 +60,8 @@ 		rawCallback(ListenerVar.GoPointer())
 	}
 }
 
-// SetCallbackEvent sets the callback function.
-func (x *SocketListenerClass) SetCallbackEvent(cb func(*SocketListener, SocketListenerEvent, *Socket)) {
+// OverrideEvent sets the callback function.
+func (x *SocketListenerClass) OverrideEvent(cb func(*SocketListener, SocketListenerEvent, *Socket)) {
 	if cb == nil {
 		x.xEvent = 0
 	} else {
@@ -71,8 +71,8 @@ 		})
 	}
 }
 
-// GetCallbackEvent gets the callback function.
-func (x *SocketListenerClass) GetCallbackEvent() func(*SocketListener, SocketListenerEvent, *Socket) {
+// GetEvent gets the callback function.
+func (x *SocketListenerClass) GetEvent() func(*SocketListener, SocketListenerEvent, *Socket) {
 	if x.xEvent == 0 {
 		return nil
 	}
@@ -83,8 +83,8 @@ 		rawCallback(ListenerVar.GoPointer(), EventVar, SocketVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *SocketListenerClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *SocketListenerClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -94,8 +94,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *SocketListenerClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *SocketListenerClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -106,8 +106,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *SocketListenerClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *SocketListenerClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -117,8 +117,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *SocketListenerClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *SocketListenerClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -129,8 +129,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *SocketListenerClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *SocketListenerClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -140,8 +140,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *SocketListenerClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *SocketListenerClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -152,8 +152,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *SocketListenerClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *SocketListenerClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -163,8 +163,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *SocketListenerClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *SocketListenerClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -175,8 +175,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *SocketListenerClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *SocketListenerClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -186,8 +186,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *SocketListenerClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *SocketListenerClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gsocketservice.go b/v4/gio/gsocketservice.go
index b510b533c1345a96b7f5280708c85165d44dc856..ea75a6e96943cc752ff49867a202bf8e8875fac7 100644
--- a/v4/gio/gsocketservice.go
+++ b/v4/gio/gsocketservice.go
@@ -37,8 +37,8 @@ func (x *SocketServiceClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackIncoming sets the callback function.
-func (x *SocketServiceClass) SetCallbackIncoming(cb func(*SocketService, *SocketConnection, *gobject.Object) bool) {
+// OverrideIncoming sets the callback function.
+func (x *SocketServiceClass) OverrideIncoming(cb func(*SocketService, *SocketConnection, *gobject.Object) bool) {
 	if cb == nil {
 		x.xIncoming = 0
 	} else {
@@ -48,8 +48,8 @@ 		})
 	}
 }
 
-// GetCallbackIncoming gets the callback function.
-func (x *SocketServiceClass) GetCallbackIncoming() func(*SocketService, *SocketConnection, *gobject.Object) bool {
+// GetIncoming gets the callback function.
+func (x *SocketServiceClass) GetIncoming() func(*SocketService, *SocketConnection, *gobject.Object) bool {
 	if x.xIncoming == 0 {
 		return nil
 	}
@@ -60,8 +60,8 @@ 		return rawCallback(ServiceVar.GoPointer(), ConnectionVar.GoPointer(), SourceObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *SocketServiceClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *SocketServiceClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -71,8 +71,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *SocketServiceClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *SocketServiceClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -83,8 +83,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *SocketServiceClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *SocketServiceClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -94,8 +94,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *SocketServiceClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *SocketServiceClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -106,8 +106,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *SocketServiceClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *SocketServiceClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -117,8 +117,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *SocketServiceClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *SocketServiceClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -129,8 +129,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *SocketServiceClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *SocketServiceClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -140,8 +140,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *SocketServiceClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *SocketServiceClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -152,8 +152,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *SocketServiceClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *SocketServiceClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -163,8 +163,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *SocketServiceClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *SocketServiceClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -175,8 +175,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *SocketServiceClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *SocketServiceClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -186,8 +186,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *SocketServiceClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *SocketServiceClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gthreadedsocketservice.go b/v4/gio/gthreadedsocketservice.go
index 1e82b303b648a9cf165d0497a693ee822aa1070f..d83e04ebaf6d21adea39ff8c7f4c1b6c5b23092f 100644
--- a/v4/gio/gthreadedsocketservice.go
+++ b/v4/gio/gthreadedsocketservice.go
@@ -34,8 +34,8 @@ func (x *ThreadedSocketServiceClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackRun sets the callback function.
-func (x *ThreadedSocketServiceClass) SetCallbackRun(cb func(*ThreadedSocketService, *SocketConnection, *gobject.Object) bool) {
+// OverrideRun sets the callback function.
+func (x *ThreadedSocketServiceClass) OverrideRun(cb func(*ThreadedSocketService, *SocketConnection, *gobject.Object) bool) {
 	if cb == nil {
 		x.xRun = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackRun gets the callback function.
-func (x *ThreadedSocketServiceClass) GetCallbackRun() func(*ThreadedSocketService, *SocketConnection, *gobject.Object) bool {
+// GetRun gets the callback function.
+func (x *ThreadedSocketServiceClass) GetRun() func(*ThreadedSocketService, *SocketConnection, *gobject.Object) bool {
 	if x.xRun == 0 {
 		return nil
 	}
@@ -57,8 +57,8 @@ 		return rawCallback(ServiceVar.GoPointer(), ConnectionVar.GoPointer(), SourceObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *ThreadedSocketServiceClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *ThreadedSocketServiceClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -68,8 +68,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *ThreadedSocketServiceClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *ThreadedSocketServiceClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -80,8 +80,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *ThreadedSocketServiceClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *ThreadedSocketServiceClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -91,8 +91,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *ThreadedSocketServiceClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *ThreadedSocketServiceClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -103,8 +103,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *ThreadedSocketServiceClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *ThreadedSocketServiceClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -114,8 +114,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *ThreadedSocketServiceClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *ThreadedSocketServiceClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -126,8 +126,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *ThreadedSocketServiceClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *ThreadedSocketServiceClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -137,8 +137,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *ThreadedSocketServiceClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *ThreadedSocketServiceClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -149,8 +149,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *ThreadedSocketServiceClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *ThreadedSocketServiceClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -160,8 +160,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *ThreadedSocketServiceClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *ThreadedSocketServiceClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gtlsbackend.go b/v4/gio/gtlsbackend.go
index da29fde8c8a46466e08d8586906ca8f04593aaff..131149c1351ab378c9a44530a5bafdec236909ac 100644
--- a/v4/gio/gtlsbackend.go
+++ b/v4/gio/gtlsbackend.go
@@ -40,8 +40,8 @@ func (x *TlsBackendInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackSupportsTls sets the callback function.
-func (x *TlsBackendInterface) SetCallbackSupportsTls(cb func(TlsBackend) bool) {
+// OverrideSupportsTls sets the callback function.
+func (x *TlsBackendInterface) OverrideSupportsTls(cb func(TlsBackend) bool) {
 	if cb == nil {
 		x.xSupportsTls = 0
 	} else {
@@ -51,8 +51,8 @@ 		})
 	}
 }
 
-// GetCallbackSupportsTls gets the callback function.
-func (x *TlsBackendInterface) GetCallbackSupportsTls() func(TlsBackend) bool {
+// GetSupportsTls gets the callback function.
+func (x *TlsBackendInterface) GetSupportsTls() func(TlsBackend) bool {
 	if x.xSupportsTls == 0 {
 		return nil
 	}
@@ -63,8 +63,8 @@ 		return rawCallback(BackendVar.GoPointer())
 	}
 }
 
-// SetCallbackGetCertificateType sets the callback function.
-func (x *TlsBackendInterface) SetCallbackGetCertificateType(cb func() types.GType) {
+// OverrideGetCertificateType sets the callback function.
+func (x *TlsBackendInterface) OverrideGetCertificateType(cb func() types.GType) {
 	if cb == nil {
 		x.xGetCertificateType = 0
 	} else {
@@ -74,8 +74,8 @@ 		})
 	}
 }
 
-// GetCallbackGetCertificateType gets the callback function.
-func (x *TlsBackendInterface) GetCallbackGetCertificateType() func() types.GType {
+// GetGetCertificateType gets the callback function.
+func (x *TlsBackendInterface) GetGetCertificateType() func() types.GType {
 	if x.xGetCertificateType == 0 {
 		return nil
 	}
@@ -86,8 +86,8 @@ 		return rawCallback()
 	}
 }
 
-// SetCallbackGetClientConnectionType sets the callback function.
-func (x *TlsBackendInterface) SetCallbackGetClientConnectionType(cb func() types.GType) {
+// OverrideGetClientConnectionType sets the callback function.
+func (x *TlsBackendInterface) OverrideGetClientConnectionType(cb func() types.GType) {
 	if cb == nil {
 		x.xGetClientConnectionType = 0
 	} else {
@@ -97,8 +97,8 @@ 		})
 	}
 }
 
-// GetCallbackGetClientConnectionType gets the callback function.
-func (x *TlsBackendInterface) GetCallbackGetClientConnectionType() func() types.GType {
+// GetGetClientConnectionType gets the callback function.
+func (x *TlsBackendInterface) GetGetClientConnectionType() func() types.GType {
 	if x.xGetClientConnectionType == 0 {
 		return nil
 	}
@@ -109,8 +109,8 @@ 		return rawCallback()
 	}
 }
 
-// SetCallbackGetServerConnectionType sets the callback function.
-func (x *TlsBackendInterface) SetCallbackGetServerConnectionType(cb func() types.GType) {
+// OverrideGetServerConnectionType sets the callback function.
+func (x *TlsBackendInterface) OverrideGetServerConnectionType(cb func() types.GType) {
 	if cb == nil {
 		x.xGetServerConnectionType = 0
 	} else {
@@ -120,8 +120,8 @@ 		})
 	}
 }
 
-// GetCallbackGetServerConnectionType gets the callback function.
-func (x *TlsBackendInterface) GetCallbackGetServerConnectionType() func() types.GType {
+// GetGetServerConnectionType gets the callback function.
+func (x *TlsBackendInterface) GetGetServerConnectionType() func() types.GType {
 	if x.xGetServerConnectionType == 0 {
 		return nil
 	}
@@ -132,8 +132,8 @@ 		return rawCallback()
 	}
 }
 
-// SetCallbackGetFileDatabaseType sets the callback function.
-func (x *TlsBackendInterface) SetCallbackGetFileDatabaseType(cb func() types.GType) {
+// OverrideGetFileDatabaseType sets the callback function.
+func (x *TlsBackendInterface) OverrideGetFileDatabaseType(cb func() types.GType) {
 	if cb == nil {
 		x.xGetFileDatabaseType = 0
 	} else {
@@ -143,8 +143,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFileDatabaseType gets the callback function.
-func (x *TlsBackendInterface) GetCallbackGetFileDatabaseType() func() types.GType {
+// GetGetFileDatabaseType gets the callback function.
+func (x *TlsBackendInterface) GetGetFileDatabaseType() func() types.GType {
 	if x.xGetFileDatabaseType == 0 {
 		return nil
 	}
@@ -155,8 +155,8 @@ 		return rawCallback()
 	}
 }
 
-// SetCallbackGetDefaultDatabase sets the callback function.
-func (x *TlsBackendInterface) SetCallbackGetDefaultDatabase(cb func(TlsBackend) *TlsDatabase) {
+// OverrideGetDefaultDatabase sets the callback function.
+func (x *TlsBackendInterface) OverrideGetDefaultDatabase(cb func(TlsBackend) *TlsDatabase) {
 	if cb == nil {
 		x.xGetDefaultDatabase = 0
 	} else {
@@ -170,8 +170,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDefaultDatabase gets the callback function.
-func (x *TlsBackendInterface) GetCallbackGetDefaultDatabase() func(TlsBackend) *TlsDatabase {
+// GetGetDefaultDatabase gets the callback function.
+func (x *TlsBackendInterface) GetGetDefaultDatabase() func(TlsBackend) *TlsDatabase {
 	if x.xGetDefaultDatabase == 0 {
 		return nil
 	}
@@ -188,8 +188,8 @@ 		return ret
 	}
 }
 
-// SetCallbackSupportsDtls sets the callback function.
-func (x *TlsBackendInterface) SetCallbackSupportsDtls(cb func(TlsBackend) bool) {
+// OverrideSupportsDtls sets the callback function.
+func (x *TlsBackendInterface) OverrideSupportsDtls(cb func(TlsBackend) bool) {
 	if cb == nil {
 		x.xSupportsDtls = 0
 	} else {
@@ -199,8 +199,8 @@ 		})
 	}
 }
 
-// GetCallbackSupportsDtls gets the callback function.
-func (x *TlsBackendInterface) GetCallbackSupportsDtls() func(TlsBackend) bool {
+// GetSupportsDtls gets the callback function.
+func (x *TlsBackendInterface) GetSupportsDtls() func(TlsBackend) bool {
 	if x.xSupportsDtls == 0 {
 		return nil
 	}
@@ -211,8 +211,8 @@ 		return rawCallback(BackendVar.GoPointer())
 	}
 }
 
-// SetCallbackGetDtlsClientConnectionType sets the callback function.
-func (x *TlsBackendInterface) SetCallbackGetDtlsClientConnectionType(cb func() types.GType) {
+// OverrideGetDtlsClientConnectionType sets the callback function.
+func (x *TlsBackendInterface) OverrideGetDtlsClientConnectionType(cb func() types.GType) {
 	if cb == nil {
 		x.xGetDtlsClientConnectionType = 0
 	} else {
@@ -222,8 +222,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDtlsClientConnectionType gets the callback function.
-func (x *TlsBackendInterface) GetCallbackGetDtlsClientConnectionType() func() types.GType {
+// GetGetDtlsClientConnectionType gets the callback function.
+func (x *TlsBackendInterface) GetGetDtlsClientConnectionType() func() types.GType {
 	if x.xGetDtlsClientConnectionType == 0 {
 		return nil
 	}
@@ -234,8 +234,8 @@ 		return rawCallback()
 	}
 }
 
-// SetCallbackGetDtlsServerConnectionType sets the callback function.
-func (x *TlsBackendInterface) SetCallbackGetDtlsServerConnectionType(cb func() types.GType) {
+// OverrideGetDtlsServerConnectionType sets the callback function.
+func (x *TlsBackendInterface) OverrideGetDtlsServerConnectionType(cb func() types.GType) {
 	if cb == nil {
 		x.xGetDtlsServerConnectionType = 0
 	} else {
@@ -245,8 +245,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDtlsServerConnectionType gets the callback function.
-func (x *TlsBackendInterface) GetCallbackGetDtlsServerConnectionType() func() types.GType {
+// GetGetDtlsServerConnectionType gets the callback function.
+func (x *TlsBackendInterface) GetGetDtlsServerConnectionType() func() types.GType {
 	if x.xGetDtlsServerConnectionType == 0 {
 		return nil
 	}
diff --git a/v4/gio/gtlscertificate.go b/v4/gio/gtlscertificate.go
index 1549a368f358322c40fd457d9ab97c770220f318..768cdf126a2a51062e13ad923e9e56f86514ed83 100644
--- a/v4/gio/gtlscertificate.go
+++ b/v4/gio/gtlscertificate.go
@@ -26,8 +26,8 @@ func (x *TlsCertificateClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackVerify sets the callback function.
-func (x *TlsCertificateClass) SetCallbackVerify(cb func(*TlsCertificate, SocketConnectable, *TlsCertificate) TlsCertificateFlags) {
+// OverrideVerify sets the callback function.
+func (x *TlsCertificateClass) OverrideVerify(cb func(*TlsCertificate, SocketConnectable, *TlsCertificate) TlsCertificateFlags) {
 	if cb == nil {
 		x.xVerify = 0
 	} else {
@@ -37,8 +37,8 @@ 		})
 	}
 }
 
-// GetCallbackVerify gets the callback function.
-func (x *TlsCertificateClass) GetCallbackVerify() func(*TlsCertificate, SocketConnectable, *TlsCertificate) TlsCertificateFlags {
+// GetVerify gets the callback function.
+func (x *TlsCertificateClass) GetVerify() func(*TlsCertificate, SocketConnectable, *TlsCertificate) TlsCertificateFlags {
 	if x.xVerify == 0 {
 		return nil
 	}
diff --git a/v4/gio/gtlsclientconnection.go b/v4/gio/gtlsclientconnection.go
index ba51f63d9b4d50703ff9de877983f0cdcd1c0369..8f1de2e44d7454d1722f93ed5fdc98d64b273745 100644
--- a/v4/gio/gtlsclientconnection.go
+++ b/v4/gio/gtlsclientconnection.go
@@ -25,8 +25,8 @@ func (x *TlsClientConnectionInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackCopySessionState sets the callback function.
-func (x *TlsClientConnectionInterface) SetCallbackCopySessionState(cb func(TlsClientConnection, TlsClientConnection)) {
+// OverrideCopySessionState sets the callback function.
+func (x *TlsClientConnectionInterface) OverrideCopySessionState(cb func(TlsClientConnection, TlsClientConnection)) {
 	if cb == nil {
 		x.xCopySessionState = 0
 	} else {
@@ -36,8 +36,8 @@ 		})
 	}
 }
 
-// GetCallbackCopySessionState gets the callback function.
-func (x *TlsClientConnectionInterface) GetCallbackCopySessionState() func(TlsClientConnection, TlsClientConnection) {
+// GetCopySessionState gets the callback function.
+func (x *TlsClientConnectionInterface) GetCopySessionState() func(TlsClientConnection, TlsClientConnection) {
 	if x.xCopySessionState == 0 {
 		return nil
 	}
diff --git a/v4/gio/gtlsconnection.go b/v4/gio/gtlsconnection.go
index e7dbdb7562e8c24792a4fed799776189e3840aba..92de57338d03c80ae9d51a208368b19ac1704b60 100644
--- a/v4/gio/gtlsconnection.go
+++ b/v4/gio/gtlsconnection.go
@@ -37,8 +37,8 @@ func (x *TlsConnectionClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackAcceptCertificate sets the callback function.
-func (x *TlsConnectionClass) SetCallbackAcceptCertificate(cb func(*TlsConnection, *TlsCertificate, TlsCertificateFlags) bool) {
+// OverrideAcceptCertificate sets the callback function.
+func (x *TlsConnectionClass) OverrideAcceptCertificate(cb func(*TlsConnection, *TlsCertificate, TlsCertificateFlags) bool) {
 	if cb == nil {
 		x.xAcceptCertificate = 0
 	} else {
@@ -48,8 +48,8 @@ 		})
 	}
 }
 
-// GetCallbackAcceptCertificate gets the callback function.
-func (x *TlsConnectionClass) GetCallbackAcceptCertificate() func(*TlsConnection, *TlsCertificate, TlsCertificateFlags) bool {
+// GetAcceptCertificate gets the callback function.
+func (x *TlsConnectionClass) GetAcceptCertificate() func(*TlsConnection, *TlsCertificate, TlsCertificateFlags) bool {
 	if x.xAcceptCertificate == 0 {
 		return nil
 	}
@@ -60,8 +60,8 @@ 		return rawCallback(ConnectionVar.GoPointer(), PeerCertVar.GoPointer(), ErrorsVar)
 	}
 }
 
-// SetCallbackHandshake sets the callback function.
-func (x *TlsConnectionClass) SetCallbackHandshake(cb func(*TlsConnection, *Cancellable) bool) {
+// OverrideHandshake sets the callback function.
+func (x *TlsConnectionClass) OverrideHandshake(cb func(*TlsConnection, *Cancellable) bool) {
 	if cb == nil {
 		x.xHandshake = 0
 	} else {
@@ -71,8 +71,8 @@ 		})
 	}
 }
 
-// GetCallbackHandshake gets the callback function.
-func (x *TlsConnectionClass) GetCallbackHandshake() func(*TlsConnection, *Cancellable) bool {
+// GetHandshake gets the callback function.
+func (x *TlsConnectionClass) GetHandshake() func(*TlsConnection, *Cancellable) bool {
 	if x.xHandshake == 0 {
 		return nil
 	}
@@ -83,8 +83,8 @@ 		return rawCallback(ConnVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackHandshakeAsync sets the callback function.
-func (x *TlsConnectionClass) SetCallbackHandshakeAsync(cb func(*TlsConnection, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideHandshakeAsync sets the callback function.
+func (x *TlsConnectionClass) OverrideHandshakeAsync(cb func(*TlsConnection, int, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xHandshakeAsync = 0
 	} else {
@@ -94,8 +94,8 @@ 		})
 	}
 }
 
-// GetCallbackHandshakeAsync gets the callback function.
-func (x *TlsConnectionClass) GetCallbackHandshakeAsync() func(*TlsConnection, int, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetHandshakeAsync gets the callback function.
+func (x *TlsConnectionClass) GetHandshakeAsync() func(*TlsConnection, int, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xHandshakeAsync == 0 {
 		return nil
 	}
@@ -106,8 +106,8 @@ 		rawCallback(ConnVar.GoPointer(), IoPriorityVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackHandshakeFinish sets the callback function.
-func (x *TlsConnectionClass) SetCallbackHandshakeFinish(cb func(*TlsConnection, AsyncResult) bool) {
+// OverrideHandshakeFinish sets the callback function.
+func (x *TlsConnectionClass) OverrideHandshakeFinish(cb func(*TlsConnection, AsyncResult) bool) {
 	if cb == nil {
 		x.xHandshakeFinish = 0
 	} else {
@@ -117,8 +117,8 @@ 		})
 	}
 }
 
-// GetCallbackHandshakeFinish gets the callback function.
-func (x *TlsConnectionClass) GetCallbackHandshakeFinish() func(*TlsConnection, AsyncResult) bool {
+// GetHandshakeFinish gets the callback function.
+func (x *TlsConnectionClass) GetHandshakeFinish() func(*TlsConnection, AsyncResult) bool {
 	if x.xHandshakeFinish == 0 {
 		return nil
 	}
@@ -129,8 +129,8 @@ 		return rawCallback(ConnVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGetBindingData sets the callback function.
-func (x *TlsConnectionClass) SetCallbackGetBindingData(cb func(*TlsConnection, TlsChannelBindingType, []byte) bool) {
+// OverrideGetBindingData sets the callback function.
+func (x *TlsConnectionClass) OverrideGetBindingData(cb func(*TlsConnection, TlsChannelBindingType, []byte) bool) {
 	if cb == nil {
 		x.xGetBindingData = 0
 	} else {
@@ -140,8 +140,8 @@ 		})
 	}
 }
 
-// GetCallbackGetBindingData gets the callback function.
-func (x *TlsConnectionClass) GetCallbackGetBindingData() func(*TlsConnection, TlsChannelBindingType, []byte) bool {
+// GetGetBindingData gets the callback function.
+func (x *TlsConnectionClass) GetGetBindingData() func(*TlsConnection, TlsChannelBindingType, []byte) bool {
 	if x.xGetBindingData == 0 {
 		return nil
 	}
@@ -152,8 +152,8 @@ 		return rawCallback(ConnVar.GoPointer(), TypeVar, DataVar)
 	}
 }
 
-// SetCallbackGetNegotiatedProtocol sets the callback function.
-func (x *TlsConnectionClass) SetCallbackGetNegotiatedProtocol(cb func(*TlsConnection) string) {
+// OverrideGetNegotiatedProtocol sets the callback function.
+func (x *TlsConnectionClass) OverrideGetNegotiatedProtocol(cb func(*TlsConnection) string) {
 	if cb == nil {
 		x.xGetNegotiatedProtocol = 0
 	} else {
@@ -163,8 +163,8 @@ 		})
 	}
 }
 
-// GetCallbackGetNegotiatedProtocol gets the callback function.
-func (x *TlsConnectionClass) GetCallbackGetNegotiatedProtocol() func(*TlsConnection) string {
+// GetGetNegotiatedProtocol gets the callback function.
+func (x *TlsConnectionClass) GetGetNegotiatedProtocol() func(*TlsConnection) string {
 	if x.xGetNegotiatedProtocol == 0 {
 		return nil
 	}
diff --git a/v4/gio/gtlsdatabase.go b/v4/gio/gtlsdatabase.go
index 954e3e41809bec8747e9c985ec324ab9cbc46ed7..f0a4184b6d592e5f025792abb4093e605c93f627 100644
--- a/v4/gio/gtlsdatabase.go
+++ b/v4/gio/gtlsdatabase.go
@@ -53,8 +53,8 @@ func (x *TlsDatabaseClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackVerifyChain sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackVerifyChain(cb func(*TlsDatabase, *TlsCertificate, string, SocketConnectable, *TlsInteraction, TlsDatabaseVerifyFlags, *Cancellable) TlsCertificateFlags) {
+// OverrideVerifyChain sets the callback function.
+func (x *TlsDatabaseClass) OverrideVerifyChain(cb func(*TlsDatabase, *TlsCertificate, string, SocketConnectable, *TlsInteraction, TlsDatabaseVerifyFlags, *Cancellable) TlsCertificateFlags) {
 	if cb == nil {
 		x.xVerifyChain = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackVerifyChain gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackVerifyChain() func(*TlsDatabase, *TlsCertificate, string, SocketConnectable, *TlsInteraction, TlsDatabaseVerifyFlags, *Cancellable) TlsCertificateFlags {
+// GetVerifyChain gets the callback function.
+func (x *TlsDatabaseClass) GetVerifyChain() func(*TlsDatabase, *TlsCertificate, string, SocketConnectable, *TlsInteraction, TlsDatabaseVerifyFlags, *Cancellable) TlsCertificateFlags {
 	if x.xVerifyChain == 0 {
 		return nil
 	}
@@ -76,8 +76,8 @@ 		return rawCallback(SelfVar.GoPointer(), ChainVar.GoPointer(), PurposeVar, IdentityVar.GoPointer(), InteractionVar.GoPointer(), FlagsVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackVerifyChainAsync sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackVerifyChainAsync(cb func(*TlsDatabase, *TlsCertificate, string, SocketConnectable, *TlsInteraction, TlsDatabaseVerifyFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideVerifyChainAsync sets the callback function.
+func (x *TlsDatabaseClass) OverrideVerifyChainAsync(cb func(*TlsDatabase, *TlsCertificate, string, SocketConnectable, *TlsInteraction, TlsDatabaseVerifyFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xVerifyChainAsync = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackVerifyChainAsync gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackVerifyChainAsync() func(*TlsDatabase, *TlsCertificate, string, SocketConnectable, *TlsInteraction, TlsDatabaseVerifyFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetVerifyChainAsync gets the callback function.
+func (x *TlsDatabaseClass) GetVerifyChainAsync() func(*TlsDatabase, *TlsCertificate, string, SocketConnectable, *TlsInteraction, TlsDatabaseVerifyFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xVerifyChainAsync == 0 {
 		return nil
 	}
@@ -99,8 +99,8 @@ 		rawCallback(SelfVar.GoPointer(), ChainVar.GoPointer(), PurposeVar, IdentityVar.GoPointer(), InteractionVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackVerifyChainFinish sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackVerifyChainFinish(cb func(*TlsDatabase, AsyncResult) TlsCertificateFlags) {
+// OverrideVerifyChainFinish sets the callback function.
+func (x *TlsDatabaseClass) OverrideVerifyChainFinish(cb func(*TlsDatabase, AsyncResult) TlsCertificateFlags) {
 	if cb == nil {
 		x.xVerifyChainFinish = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackVerifyChainFinish gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackVerifyChainFinish() func(*TlsDatabase, AsyncResult) TlsCertificateFlags {
+// GetVerifyChainFinish gets the callback function.
+func (x *TlsDatabaseClass) GetVerifyChainFinish() func(*TlsDatabase, AsyncResult) TlsCertificateFlags {
 	if x.xVerifyChainFinish == 0 {
 		return nil
 	}
@@ -122,8 +122,8 @@ 		return rawCallback(SelfVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackCreateCertificateHandle sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackCreateCertificateHandle(cb func(*TlsDatabase, *TlsCertificate) string) {
+// OverrideCreateCertificateHandle sets the callback function.
+func (x *TlsDatabaseClass) OverrideCreateCertificateHandle(cb func(*TlsDatabase, *TlsCertificate) string) {
 	if cb == nil {
 		x.xCreateCertificateHandle = 0
 	} else {
@@ -133,8 +133,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateCertificateHandle gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackCreateCertificateHandle() func(*TlsDatabase, *TlsCertificate) string {
+// GetCreateCertificateHandle gets the callback function.
+func (x *TlsDatabaseClass) GetCreateCertificateHandle() func(*TlsDatabase, *TlsCertificate) string {
 	if x.xCreateCertificateHandle == 0 {
 		return nil
 	}
@@ -145,8 +145,8 @@ 		return rawCallback(SelfVar.GoPointer(), CertificateVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupCertificateForHandle sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackLookupCertificateForHandle(cb func(*TlsDatabase, string, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *TlsCertificate) {
+// OverrideLookupCertificateForHandle sets the callback function.
+func (x *TlsDatabaseClass) OverrideLookupCertificateForHandle(cb func(*TlsDatabase, string, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *TlsCertificate) {
 	if cb == nil {
 		x.xLookupCertificateForHandle = 0
 	} else {
@@ -160,8 +160,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupCertificateForHandle gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackLookupCertificateForHandle() func(*TlsDatabase, string, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *TlsCertificate {
+// GetLookupCertificateForHandle gets the callback function.
+func (x *TlsDatabaseClass) GetLookupCertificateForHandle() func(*TlsDatabase, string, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *TlsCertificate {
 	if x.xLookupCertificateForHandle == 0 {
 		return nil
 	}
@@ -178,8 +178,8 @@ 		return ret
 	}
 }
 
-// SetCallbackLookupCertificateForHandleAsync sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackLookupCertificateForHandleAsync(cb func(*TlsDatabase, string, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLookupCertificateForHandleAsync sets the callback function.
+func (x *TlsDatabaseClass) OverrideLookupCertificateForHandleAsync(cb func(*TlsDatabase, string, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLookupCertificateForHandleAsync = 0
 	} else {
@@ -189,8 +189,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupCertificateForHandleAsync gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackLookupCertificateForHandleAsync() func(*TlsDatabase, string, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLookupCertificateForHandleAsync gets the callback function.
+func (x *TlsDatabaseClass) GetLookupCertificateForHandleAsync() func(*TlsDatabase, string, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLookupCertificateForHandleAsync == 0 {
 		return nil
 	}
@@ -201,8 +201,8 @@ 		rawCallback(SelfVar.GoPointer(), HandleVar, InteractionVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLookupCertificateForHandleFinish sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackLookupCertificateForHandleFinish(cb func(*TlsDatabase, AsyncResult) *TlsCertificate) {
+// OverrideLookupCertificateForHandleFinish sets the callback function.
+func (x *TlsDatabaseClass) OverrideLookupCertificateForHandleFinish(cb func(*TlsDatabase, AsyncResult) *TlsCertificate) {
 	if cb == nil {
 		x.xLookupCertificateForHandleFinish = 0
 	} else {
@@ -216,8 +216,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupCertificateForHandleFinish gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackLookupCertificateForHandleFinish() func(*TlsDatabase, AsyncResult) *TlsCertificate {
+// GetLookupCertificateForHandleFinish gets the callback function.
+func (x *TlsDatabaseClass) GetLookupCertificateForHandleFinish() func(*TlsDatabase, AsyncResult) *TlsCertificate {
 	if x.xLookupCertificateForHandleFinish == 0 {
 		return nil
 	}
@@ -234,8 +234,8 @@ 		return ret
 	}
 }
 
-// SetCallbackLookupCertificateIssuer sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackLookupCertificateIssuer(cb func(*TlsDatabase, *TlsCertificate, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *TlsCertificate) {
+// OverrideLookupCertificateIssuer sets the callback function.
+func (x *TlsDatabaseClass) OverrideLookupCertificateIssuer(cb func(*TlsDatabase, *TlsCertificate, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *TlsCertificate) {
 	if cb == nil {
 		x.xLookupCertificateIssuer = 0
 	} else {
@@ -249,8 +249,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupCertificateIssuer gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackLookupCertificateIssuer() func(*TlsDatabase, *TlsCertificate, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *TlsCertificate {
+// GetLookupCertificateIssuer gets the callback function.
+func (x *TlsDatabaseClass) GetLookupCertificateIssuer() func(*TlsDatabase, *TlsCertificate, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *TlsCertificate {
 	if x.xLookupCertificateIssuer == 0 {
 		return nil
 	}
@@ -267,8 +267,8 @@ 		return ret
 	}
 }
 
-// SetCallbackLookupCertificateIssuerAsync sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackLookupCertificateIssuerAsync(cb func(*TlsDatabase, *TlsCertificate, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLookupCertificateIssuerAsync sets the callback function.
+func (x *TlsDatabaseClass) OverrideLookupCertificateIssuerAsync(cb func(*TlsDatabase, *TlsCertificate, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLookupCertificateIssuerAsync = 0
 	} else {
@@ -278,8 +278,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupCertificateIssuerAsync gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackLookupCertificateIssuerAsync() func(*TlsDatabase, *TlsCertificate, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLookupCertificateIssuerAsync gets the callback function.
+func (x *TlsDatabaseClass) GetLookupCertificateIssuerAsync() func(*TlsDatabase, *TlsCertificate, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLookupCertificateIssuerAsync == 0 {
 		return nil
 	}
@@ -290,8 +290,8 @@ 		rawCallback(SelfVar.GoPointer(), CertificateVar.GoPointer(), InteractionVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLookupCertificateIssuerFinish sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackLookupCertificateIssuerFinish(cb func(*TlsDatabase, AsyncResult) *TlsCertificate) {
+// OverrideLookupCertificateIssuerFinish sets the callback function.
+func (x *TlsDatabaseClass) OverrideLookupCertificateIssuerFinish(cb func(*TlsDatabase, AsyncResult) *TlsCertificate) {
 	if cb == nil {
 		x.xLookupCertificateIssuerFinish = 0
 	} else {
@@ -305,8 +305,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupCertificateIssuerFinish gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackLookupCertificateIssuerFinish() func(*TlsDatabase, AsyncResult) *TlsCertificate {
+// GetLookupCertificateIssuerFinish gets the callback function.
+func (x *TlsDatabaseClass) GetLookupCertificateIssuerFinish() func(*TlsDatabase, AsyncResult) *TlsCertificate {
 	if x.xLookupCertificateIssuerFinish == 0 {
 		return nil
 	}
@@ -323,8 +323,8 @@ 		return ret
 	}
 }
 
-// SetCallbackLookupCertificatesIssuedBy sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackLookupCertificatesIssuedBy(cb func(*TlsDatabase, []byte, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *glib.List) {
+// OverrideLookupCertificatesIssuedBy sets the callback function.
+func (x *TlsDatabaseClass) OverrideLookupCertificatesIssuedBy(cb func(*TlsDatabase, []byte, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *glib.List) {
 	if cb == nil {
 		x.xLookupCertificatesIssuedBy = 0
 	} else {
@@ -334,8 +334,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupCertificatesIssuedBy gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackLookupCertificatesIssuedBy() func(*TlsDatabase, []byte, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *glib.List {
+// GetLookupCertificatesIssuedBy gets the callback function.
+func (x *TlsDatabaseClass) GetLookupCertificatesIssuedBy() func(*TlsDatabase, []byte, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable) *glib.List {
 	if x.xLookupCertificatesIssuedBy == 0 {
 		return nil
 	}
@@ -346,8 +346,8 @@ 		return rawCallback(SelfVar.GoPointer(), IssuerRawDnVar, InteractionVar.GoPointer(), FlagsVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackLookupCertificatesIssuedByAsync sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackLookupCertificatesIssuedByAsync(cb func(*TlsDatabase, []byte, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideLookupCertificatesIssuedByAsync sets the callback function.
+func (x *TlsDatabaseClass) OverrideLookupCertificatesIssuedByAsync(cb func(*TlsDatabase, []byte, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xLookupCertificatesIssuedByAsync = 0
 	} else {
@@ -357,8 +357,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupCertificatesIssuedByAsync gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackLookupCertificatesIssuedByAsync() func(*TlsDatabase, []byte, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetLookupCertificatesIssuedByAsync gets the callback function.
+func (x *TlsDatabaseClass) GetLookupCertificatesIssuedByAsync() func(*TlsDatabase, []byte, *TlsInteraction, TlsDatabaseLookupFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xLookupCertificatesIssuedByAsync == 0 {
 		return nil
 	}
@@ -369,8 +369,8 @@ 		rawCallback(SelfVar.GoPointer(), IssuerRawDnVar, InteractionVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackLookupCertificatesIssuedByFinish sets the callback function.
-func (x *TlsDatabaseClass) SetCallbackLookupCertificatesIssuedByFinish(cb func(*TlsDatabase, AsyncResult) *glib.List) {
+// OverrideLookupCertificatesIssuedByFinish sets the callback function.
+func (x *TlsDatabaseClass) OverrideLookupCertificatesIssuedByFinish(cb func(*TlsDatabase, AsyncResult) *glib.List) {
 	if cb == nil {
 		x.xLookupCertificatesIssuedByFinish = 0
 	} else {
@@ -380,8 +380,8 @@ 		})
 	}
 }
 
-// GetCallbackLookupCertificatesIssuedByFinish gets the callback function.
-func (x *TlsDatabaseClass) GetCallbackLookupCertificatesIssuedByFinish() func(*TlsDatabase, AsyncResult) *glib.List {
+// GetLookupCertificatesIssuedByFinish gets the callback function.
+func (x *TlsDatabaseClass) GetLookupCertificatesIssuedByFinish() func(*TlsDatabase, AsyncResult) *glib.List {
 	if x.xLookupCertificatesIssuedByFinish == 0 {
 		return nil
 	}
diff --git a/v4/gio/gtlsinteraction.go b/v4/gio/gtlsinteraction.go
index 7bd7bcc948348876762f6b0854311289c6339dd7..92dbf6235804182a491b8592beb3a289af1f5317 100644
--- a/v4/gio/gtlsinteraction.go
+++ b/v4/gio/gtlsinteraction.go
@@ -50,8 +50,8 @@ func (x *TlsInteractionClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackAskPassword sets the callback function.
-func (x *TlsInteractionClass) SetCallbackAskPassword(cb func(*TlsInteraction, *TlsPassword, *Cancellable) TlsInteractionResult) {
+// OverrideAskPassword sets the callback function.
+func (x *TlsInteractionClass) OverrideAskPassword(cb func(*TlsInteraction, *TlsPassword, *Cancellable) TlsInteractionResult) {
 	if cb == nil {
 		x.xAskPassword = 0
 	} else {
@@ -61,8 +61,8 @@ 		})
 	}
 }
 
-// GetCallbackAskPassword gets the callback function.
-func (x *TlsInteractionClass) GetCallbackAskPassword() func(*TlsInteraction, *TlsPassword, *Cancellable) TlsInteractionResult {
+// GetAskPassword gets the callback function.
+func (x *TlsInteractionClass) GetAskPassword() func(*TlsInteraction, *TlsPassword, *Cancellable) TlsInteractionResult {
 	if x.xAskPassword == 0 {
 		return nil
 	}
@@ -73,8 +73,8 @@ 		return rawCallback(InteractionVar.GoPointer(), PasswordVar.GoPointer(), CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackAskPasswordAsync sets the callback function.
-func (x *TlsInteractionClass) SetCallbackAskPasswordAsync(cb func(*TlsInteraction, *TlsPassword, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideAskPasswordAsync sets the callback function.
+func (x *TlsInteractionClass) OverrideAskPasswordAsync(cb func(*TlsInteraction, *TlsPassword, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xAskPasswordAsync = 0
 	} else {
@@ -84,8 +84,8 @@ 		})
 	}
 }
 
-// GetCallbackAskPasswordAsync gets the callback function.
-func (x *TlsInteractionClass) GetCallbackAskPasswordAsync() func(*TlsInteraction, *TlsPassword, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetAskPasswordAsync gets the callback function.
+func (x *TlsInteractionClass) GetAskPasswordAsync() func(*TlsInteraction, *TlsPassword, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xAskPasswordAsync == 0 {
 		return nil
 	}
@@ -96,8 +96,8 @@ 		rawCallback(InteractionVar.GoPointer(), PasswordVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackAskPasswordFinish sets the callback function.
-func (x *TlsInteractionClass) SetCallbackAskPasswordFinish(cb func(*TlsInteraction, AsyncResult) TlsInteractionResult) {
+// OverrideAskPasswordFinish sets the callback function.
+func (x *TlsInteractionClass) OverrideAskPasswordFinish(cb func(*TlsInteraction, AsyncResult) TlsInteractionResult) {
 	if cb == nil {
 		x.xAskPasswordFinish = 0
 	} else {
@@ -107,8 +107,8 @@ 		})
 	}
 }
 
-// GetCallbackAskPasswordFinish gets the callback function.
-func (x *TlsInteractionClass) GetCallbackAskPasswordFinish() func(*TlsInteraction, AsyncResult) TlsInteractionResult {
+// GetAskPasswordFinish gets the callback function.
+func (x *TlsInteractionClass) GetAskPasswordFinish() func(*TlsInteraction, AsyncResult) TlsInteractionResult {
 	if x.xAskPasswordFinish == 0 {
 		return nil
 	}
@@ -119,8 +119,8 @@ 		return rawCallback(InteractionVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackRequestCertificate sets the callback function.
-func (x *TlsInteractionClass) SetCallbackRequestCertificate(cb func(*TlsInteraction, *TlsConnection, TlsCertificateRequestFlags, *Cancellable) TlsInteractionResult) {
+// OverrideRequestCertificate sets the callback function.
+func (x *TlsInteractionClass) OverrideRequestCertificate(cb func(*TlsInteraction, *TlsConnection, TlsCertificateRequestFlags, *Cancellable) TlsInteractionResult) {
 	if cb == nil {
 		x.xRequestCertificate = 0
 	} else {
@@ -130,8 +130,8 @@ 		})
 	}
 }
 
-// GetCallbackRequestCertificate gets the callback function.
-func (x *TlsInteractionClass) GetCallbackRequestCertificate() func(*TlsInteraction, *TlsConnection, TlsCertificateRequestFlags, *Cancellable) TlsInteractionResult {
+// GetRequestCertificate gets the callback function.
+func (x *TlsInteractionClass) GetRequestCertificate() func(*TlsInteraction, *TlsConnection, TlsCertificateRequestFlags, *Cancellable) TlsInteractionResult {
 	if x.xRequestCertificate == 0 {
 		return nil
 	}
@@ -142,8 +142,8 @@ 		return rawCallback(InteractionVar.GoPointer(), ConnectionVar.GoPointer(), FlagsVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackRequestCertificateAsync sets the callback function.
-func (x *TlsInteractionClass) SetCallbackRequestCertificateAsync(cb func(*TlsInteraction, *TlsConnection, TlsCertificateRequestFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideRequestCertificateAsync sets the callback function.
+func (x *TlsInteractionClass) OverrideRequestCertificateAsync(cb func(*TlsInteraction, *TlsConnection, TlsCertificateRequestFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xRequestCertificateAsync = 0
 	} else {
@@ -153,8 +153,8 @@ 		})
 	}
 }
 
-// GetCallbackRequestCertificateAsync gets the callback function.
-func (x *TlsInteractionClass) GetCallbackRequestCertificateAsync() func(*TlsInteraction, *TlsConnection, TlsCertificateRequestFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetRequestCertificateAsync gets the callback function.
+func (x *TlsInteractionClass) GetRequestCertificateAsync() func(*TlsInteraction, *TlsConnection, TlsCertificateRequestFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xRequestCertificateAsync == 0 {
 		return nil
 	}
@@ -165,8 +165,8 @@ 		rawCallback(InteractionVar.GoPointer(), ConnectionVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackRequestCertificateFinish sets the callback function.
-func (x *TlsInteractionClass) SetCallbackRequestCertificateFinish(cb func(*TlsInteraction, AsyncResult) TlsInteractionResult) {
+// OverrideRequestCertificateFinish sets the callback function.
+func (x *TlsInteractionClass) OverrideRequestCertificateFinish(cb func(*TlsInteraction, AsyncResult) TlsInteractionResult) {
 	if cb == nil {
 		x.xRequestCertificateFinish = 0
 	} else {
@@ -176,8 +176,8 @@ 		})
 	}
 }
 
-// GetCallbackRequestCertificateFinish gets the callback function.
-func (x *TlsInteractionClass) GetCallbackRequestCertificateFinish() func(*TlsInteraction, AsyncResult) TlsInteractionResult {
+// GetRequestCertificateFinish gets the callback function.
+func (x *TlsInteractionClass) GetRequestCertificateFinish() func(*TlsInteraction, AsyncResult) TlsInteractionResult {
 	if x.xRequestCertificateFinish == 0 {
 		return nil
 	}
diff --git a/v4/gio/gtlspassword.go b/v4/gio/gtlspassword.go
index e6aaf38d99e30f2e909f34b821274abb534cfcb9..1a91bda0c86773da4ce0c178cecb57a33758431f 100644
--- a/v4/gio/gtlspassword.go
+++ b/v4/gio/gtlspassword.go
@@ -31,8 +31,8 @@ func (x *TlsPasswordClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetValue sets the callback function.
-func (x *TlsPasswordClass) SetCallbackGetValue(cb func(*TlsPassword, uint) uintptr) {
+// OverrideGetValue sets the callback function.
+func (x *TlsPasswordClass) OverrideGetValue(cb func(*TlsPassword, uint) uintptr) {
 	if cb == nil {
 		x.xGetValue = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackGetValue gets the callback function.
-func (x *TlsPasswordClass) GetCallbackGetValue() func(*TlsPassword, uint) uintptr {
+// GetGetValue gets the callback function.
+func (x *TlsPasswordClass) GetGetValue() func(*TlsPassword, uint) uintptr {
 	if x.xGetValue == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		return rawCallback(PasswordVar.GoPointer(), LengthVar)
 	}
 }
 
-// SetCallbackSetValue sets the callback function.
-func (x *TlsPasswordClass) SetCallbackSetValue(cb func(*TlsPassword, []byte, int, *glib.DestroyNotify)) {
+// OverrideSetValue sets the callback function.
+func (x *TlsPasswordClass) OverrideSetValue(cb func(*TlsPassword, []byte, int, *glib.DestroyNotify)) {
 	if cb == nil {
 		x.xSetValue = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackSetValue gets the callback function.
-func (x *TlsPasswordClass) GetCallbackSetValue() func(*TlsPassword, []byte, int, *glib.DestroyNotify) {
+// GetSetValue gets the callback function.
+func (x *TlsPasswordClass) GetSetValue() func(*TlsPassword, []byte, int, *glib.DestroyNotify) {
 	if x.xSetValue == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback(PasswordVar.GoPointer(), ValueVar, LengthVar, glib.NewCallbackNullable(DestroyVar))
 	}
 }
 
-// SetCallbackGetDefaultWarning sets the callback function.
-func (x *TlsPasswordClass) SetCallbackGetDefaultWarning(cb func(*TlsPassword) string) {
+// OverrideGetDefaultWarning sets the callback function.
+func (x *TlsPasswordClass) OverrideGetDefaultWarning(cb func(*TlsPassword) string) {
 	if cb == nil {
 		x.xGetDefaultWarning = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDefaultWarning gets the callback function.
-func (x *TlsPasswordClass) GetCallbackGetDefaultWarning() func(*TlsPassword) string {
+// GetGetDefaultWarning gets the callback function.
+func (x *TlsPasswordClass) GetGetDefaultWarning() func(*TlsPassword) string {
 	if x.xGetDefaultWarning == 0 {
 		return nil
 	}
diff --git a/v4/gio/gunixcredentialsmessage.go b/v4/gio/gunixcredentialsmessage.go
index 8ae9a8e319e533b111c148e88e3b00ac943d41f4..427c109614704b6f463e66f62995d6c07b2dcc3a 100644
--- a/v4/gio/gunixcredentialsmessage.go
+++ b/v4/gio/gunixcredentialsmessage.go
@@ -26,8 +26,8 @@ func (x *UnixCredentialsMessageClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *UnixCredentialsMessageClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *UnixCredentialsMessageClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -37,8 +37,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *UnixCredentialsMessageClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *UnixCredentialsMessageClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -49,8 +49,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *UnixCredentialsMessageClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *UnixCredentialsMessageClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -60,8 +60,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *UnixCredentialsMessageClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *UnixCredentialsMessageClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gunixfdlist.go b/v4/gio/gunixfdlist.go
index ce4e84dbd23c62f9939cb281d8aa23e4d3ec93d6..4e6931ab7a7000199ca522d69dcca8f9494d8f11 100644
--- a/v4/gio/gunixfdlist.go
+++ b/v4/gio/gunixfdlist.go
@@ -32,8 +32,8 @@ func (x *UnixFDListClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *UnixFDListClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *UnixFDListClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *UnixFDListClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *UnixFDListClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *UnixFDListClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *UnixFDListClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *UnixFDListClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *UnixFDListClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *UnixFDListClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *UnixFDListClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -89,8 +89,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *UnixFDListClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *UnixFDListClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -101,8 +101,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *UnixFDListClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *UnixFDListClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -112,8 +112,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *UnixFDListClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *UnixFDListClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -124,8 +124,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *UnixFDListClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *UnixFDListClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *UnixFDListClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *UnixFDListClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gunixfdmessage.go b/v4/gio/gunixfdmessage.go
index dfcb6bd9f812a313d7807c3616fcc818d3d3f08f..24673f936ff7c60b0e273b353fb08abb04684483 100644
--- a/v4/gio/gunixfdmessage.go
+++ b/v4/gio/gunixfdmessage.go
@@ -26,8 +26,8 @@ func (x *UnixFDMessageClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *UnixFDMessageClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *UnixFDMessageClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -37,8 +37,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *UnixFDMessageClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *UnixFDMessageClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -49,8 +49,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *UnixFDMessageClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *UnixFDMessageClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -60,8 +60,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *UnixFDMessageClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *UnixFDMessageClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gunixinputstream.go b/v4/gio/gunixinputstream.go
index 31fe3a6f92fe6e64cfead9720acecf4dc07e9733..fa99374bc308b66f75689e36c1ff30416429227f 100644
--- a/v4/gio/gunixinputstream.go
+++ b/v4/gio/gunixinputstream.go
@@ -31,8 +31,8 @@ func (x *UnixInputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *UnixInputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *UnixInputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *UnixInputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *UnixInputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *UnixInputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *UnixInputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *UnixInputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *UnixInputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *UnixInputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *UnixInputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *UnixInputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *UnixInputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *UnixInputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *UnixInputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *UnixInputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *UnixInputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -123,8 +123,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *UnixInputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *UnixInputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -134,8 +134,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *UnixInputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *UnixInputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gunixoutputstream.go b/v4/gio/gunixoutputstream.go
index 1199749f0fd7de9e9e740e8d4c01b11e99d43ca5..58d1894bd92286044c0039b387e8d8cef03df2ff 100644
--- a/v4/gio/gunixoutputstream.go
+++ b/v4/gio/gunixoutputstream.go
@@ -31,8 +31,8 @@ func (x *UnixOutputStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *UnixOutputStreamClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *UnixOutputStreamClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *UnixOutputStreamClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *UnixOutputStreamClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *UnixOutputStreamClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *UnixOutputStreamClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *UnixOutputStreamClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *UnixOutputStreamClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *UnixOutputStreamClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *UnixOutputStreamClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *UnixOutputStreamClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *UnixOutputStreamClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *UnixOutputStreamClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *UnixOutputStreamClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *UnixOutputStreamClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *UnixOutputStreamClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -123,8 +123,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *UnixOutputStreamClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *UnixOutputStreamClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -134,8 +134,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *UnixOutputStreamClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *UnixOutputStreamClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gvfs.go b/v4/gio/gvfs.go
index 8c304a9ed544c0c0524cf2edf430ad2c5a49ca80..0d8b9bf62191c011aaa8fc41906ab7f9d017c6c2 100644
--- a/v4/gio/gvfs.go
+++ b/v4/gio/gvfs.go
@@ -64,8 +64,8 @@ func (x *VfsClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackIsActive sets the callback function.
-func (x *VfsClass) SetCallbackIsActive(cb func(*Vfs) bool) {
+// OverrideIsActive sets the callback function.
+func (x *VfsClass) OverrideIsActive(cb func(*Vfs) bool) {
 	if cb == nil {
 		x.xIsActive = 0
 	} else {
@@ -75,8 +75,8 @@ 		})
 	}
 }
 
-// GetCallbackIsActive gets the callback function.
-func (x *VfsClass) GetCallbackIsActive() func(*Vfs) bool {
+// GetIsActive gets the callback function.
+func (x *VfsClass) GetIsActive() func(*Vfs) bool {
 	if x.xIsActive == 0 {
 		return nil
 	}
@@ -87,8 +87,8 @@ 		return rawCallback(VfsVar.GoPointer())
 	}
 }
 
-// SetCallbackGetFileForPath sets the callback function.
-func (x *VfsClass) SetCallbackGetFileForPath(cb func(*Vfs, string) *FileBase) {
+// OverrideGetFileForPath sets the callback function.
+func (x *VfsClass) OverrideGetFileForPath(cb func(*Vfs, string) *FileBase) {
 	if cb == nil {
 		x.xGetFileForPath = 0
 	} else {
@@ -102,8 +102,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFileForPath gets the callback function.
-func (x *VfsClass) GetCallbackGetFileForPath() func(*Vfs, string) *FileBase {
+// GetGetFileForPath gets the callback function.
+func (x *VfsClass) GetGetFileForPath() func(*Vfs, string) *FileBase {
 	if x.xGetFileForPath == 0 {
 		return nil
 	}
@@ -120,8 +120,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetFileForUri sets the callback function.
-func (x *VfsClass) SetCallbackGetFileForUri(cb func(*Vfs, string) *FileBase) {
+// OverrideGetFileForUri sets the callback function.
+func (x *VfsClass) OverrideGetFileForUri(cb func(*Vfs, string) *FileBase) {
 	if cb == nil {
 		x.xGetFileForUri = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFileForUri gets the callback function.
-func (x *VfsClass) GetCallbackGetFileForUri() func(*Vfs, string) *FileBase {
+// GetGetFileForUri gets the callback function.
+func (x *VfsClass) GetGetFileForUri() func(*Vfs, string) *FileBase {
 	if x.xGetFileForUri == 0 {
 		return nil
 	}
@@ -153,8 +153,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetSupportedUriSchemes sets the callback function.
-func (x *VfsClass) SetCallbackGetSupportedUriSchemes(cb func(*Vfs) []string) {
+// OverrideGetSupportedUriSchemes sets the callback function.
+func (x *VfsClass) OverrideGetSupportedUriSchemes(cb func(*Vfs) []string) {
 	if cb == nil {
 		x.xGetSupportedUriSchemes = 0
 	} else {
@@ -164,8 +164,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSupportedUriSchemes gets the callback function.
-func (x *VfsClass) GetCallbackGetSupportedUriSchemes() func(*Vfs) []string {
+// GetGetSupportedUriSchemes gets the callback function.
+func (x *VfsClass) GetGetSupportedUriSchemes() func(*Vfs) []string {
 	if x.xGetSupportedUriSchemes == 0 {
 		return nil
 	}
@@ -176,8 +176,8 @@ 		return rawCallback(VfsVar.GoPointer())
 	}
 }
 
-// SetCallbackParseName sets the callback function.
-func (x *VfsClass) SetCallbackParseName(cb func(*Vfs, string) *FileBase) {
+// OverrideParseName sets the callback function.
+func (x *VfsClass) OverrideParseName(cb func(*Vfs, string) *FileBase) {
 	if cb == nil {
 		x.xParseName = 0
 	} else {
@@ -191,8 +191,8 @@ 		})
 	}
 }
 
-// GetCallbackParseName gets the callback function.
-func (x *VfsClass) GetCallbackParseName() func(*Vfs, string) *FileBase {
+// GetParseName gets the callback function.
+func (x *VfsClass) GetParseName() func(*Vfs, string) *FileBase {
 	if x.xParseName == 0 {
 		return nil
 	}
@@ -209,8 +209,8 @@ 		return ret
 	}
 }
 
-// SetCallbackLocalFileAddInfo sets the callback function.
-func (x *VfsClass) SetCallbackLocalFileAddInfo(cb func(*Vfs, string, uint64, *FileAttributeMatcher, *FileInfo, *Cancellable, uintptr, *glib.DestroyNotify)) {
+// OverrideLocalFileAddInfo sets the callback function.
+func (x *VfsClass) OverrideLocalFileAddInfo(cb func(*Vfs, string, uint64, *FileAttributeMatcher, *FileInfo, *Cancellable, uintptr, *glib.DestroyNotify)) {
 	if cb == nil {
 		x.xLocalFileAddInfo = 0
 	} else {
@@ -220,8 +220,8 @@ 		})
 	}
 }
 
-// GetCallbackLocalFileAddInfo gets the callback function.
-func (x *VfsClass) GetCallbackLocalFileAddInfo() func(*Vfs, string, uint64, *FileAttributeMatcher, *FileInfo, *Cancellable, uintptr, *glib.DestroyNotify) {
+// GetLocalFileAddInfo gets the callback function.
+func (x *VfsClass) GetLocalFileAddInfo() func(*Vfs, string, uint64, *FileAttributeMatcher, *FileInfo, *Cancellable, uintptr, *glib.DestroyNotify) {
 	if x.xLocalFileAddInfo == 0 {
 		return nil
 	}
@@ -232,8 +232,8 @@ 		rawCallback(VfsVar.GoPointer(), FilenameVar, DeviceVar, AttributeMatcherVar, InfoVar.GoPointer(), CancellableVar.GoPointer(), ExtraDataVar, glib.NewCallback(FreeExtraDataVar))
 	}
 }
 
-// SetCallbackAddWritableNamespaces sets the callback function.
-func (x *VfsClass) SetCallbackAddWritableNamespaces(cb func(*Vfs, *FileAttributeInfoList)) {
+// OverrideAddWritableNamespaces sets the callback function.
+func (x *VfsClass) OverrideAddWritableNamespaces(cb func(*Vfs, *FileAttributeInfoList)) {
 	if cb == nil {
 		x.xAddWritableNamespaces = 0
 	} else {
@@ -243,8 +243,8 @@ 		})
 	}
 }
 
-// GetCallbackAddWritableNamespaces gets the callback function.
-func (x *VfsClass) GetCallbackAddWritableNamespaces() func(*Vfs, *FileAttributeInfoList) {
+// GetAddWritableNamespaces gets the callback function.
+func (x *VfsClass) GetAddWritableNamespaces() func(*Vfs, *FileAttributeInfoList) {
 	if x.xAddWritableNamespaces == 0 {
 		return nil
 	}
@@ -255,8 +255,8 @@ 		rawCallback(VfsVar.GoPointer(), ListVar)
 	}
 }
 
-// SetCallbackLocalFileSetAttributes sets the callback function.
-func (x *VfsClass) SetCallbackLocalFileSetAttributes(cb func(*Vfs, string, *FileInfo, FileQueryInfoFlags, *Cancellable) bool) {
+// OverrideLocalFileSetAttributes sets the callback function.
+func (x *VfsClass) OverrideLocalFileSetAttributes(cb func(*Vfs, string, *FileInfo, FileQueryInfoFlags, *Cancellable) bool) {
 	if cb == nil {
 		x.xLocalFileSetAttributes = 0
 	} else {
@@ -266,8 +266,8 @@ 		})
 	}
 }
 
-// GetCallbackLocalFileSetAttributes gets the callback function.
-func (x *VfsClass) GetCallbackLocalFileSetAttributes() func(*Vfs, string, *FileInfo, FileQueryInfoFlags, *Cancellable) bool {
+// GetLocalFileSetAttributes gets the callback function.
+func (x *VfsClass) GetLocalFileSetAttributes() func(*Vfs, string, *FileInfo, FileQueryInfoFlags, *Cancellable) bool {
 	if x.xLocalFileSetAttributes == 0 {
 		return nil
 	}
@@ -278,8 +278,8 @@ 		return rawCallback(VfsVar.GoPointer(), FilenameVar, InfoVar.GoPointer(), FlagsVar, CancellableVar.GoPointer())
 	}
 }
 
-// SetCallbackLocalFileRemoved sets the callback function.
-func (x *VfsClass) SetCallbackLocalFileRemoved(cb func(*Vfs, string)) {
+// OverrideLocalFileRemoved sets the callback function.
+func (x *VfsClass) OverrideLocalFileRemoved(cb func(*Vfs, string)) {
 	if cb == nil {
 		x.xLocalFileRemoved = 0
 	} else {
@@ -289,8 +289,8 @@ 		})
 	}
 }
 
-// GetCallbackLocalFileRemoved gets the callback function.
-func (x *VfsClass) GetCallbackLocalFileRemoved() func(*Vfs, string) {
+// GetLocalFileRemoved gets the callback function.
+func (x *VfsClass) GetLocalFileRemoved() func(*Vfs, string) {
 	if x.xLocalFileRemoved == 0 {
 		return nil
 	}
@@ -301,8 +301,8 @@ 		rawCallback(VfsVar.GoPointer(), FilenameVar)
 	}
 }
 
-// SetCallbackLocalFileMoved sets the callback function.
-func (x *VfsClass) SetCallbackLocalFileMoved(cb func(*Vfs, string, string)) {
+// OverrideLocalFileMoved sets the callback function.
+func (x *VfsClass) OverrideLocalFileMoved(cb func(*Vfs, string, string)) {
 	if cb == nil {
 		x.xLocalFileMoved = 0
 	} else {
@@ -312,8 +312,8 @@ 		})
 	}
 }
 
-// GetCallbackLocalFileMoved gets the callback function.
-func (x *VfsClass) GetCallbackLocalFileMoved() func(*Vfs, string, string) {
+// GetLocalFileMoved gets the callback function.
+func (x *VfsClass) GetLocalFileMoved() func(*Vfs, string, string) {
 	if x.xLocalFileMoved == 0 {
 		return nil
 	}
@@ -324,8 +324,8 @@ 		rawCallback(VfsVar.GoPointer(), SourceVar, DestVar)
 	}
 }
 
-// SetCallbackDeserializeIcon sets the callback function.
-func (x *VfsClass) SetCallbackDeserializeIcon(cb func(*Vfs, *glib.Variant) *IconBase) {
+// OverrideDeserializeIcon sets the callback function.
+func (x *VfsClass) OverrideDeserializeIcon(cb func(*Vfs, *glib.Variant) *IconBase) {
 	if cb == nil {
 		x.xDeserializeIcon = 0
 	} else {
@@ -339,8 +339,8 @@ 		})
 	}
 }
 
-// GetCallbackDeserializeIcon gets the callback function.
-func (x *VfsClass) GetCallbackDeserializeIcon() func(*Vfs, *glib.Variant) *IconBase {
+// GetDeserializeIcon gets the callback function.
+func (x *VfsClass) GetDeserializeIcon() func(*Vfs, *glib.Variant) *IconBase {
 	if x.xDeserializeIcon == 0 {
 		return nil
 	}
@@ -357,8 +357,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *VfsClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *VfsClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -368,8 +368,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *VfsClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *VfsClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -380,8 +380,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *VfsClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *VfsClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -391,8 +391,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *VfsClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *VfsClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -403,8 +403,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *VfsClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *VfsClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -414,8 +414,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *VfsClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *VfsClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -426,8 +426,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *VfsClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *VfsClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -437,8 +437,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *VfsClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *VfsClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -449,8 +449,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *VfsClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *VfsClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -460,8 +460,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *VfsClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *VfsClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -472,8 +472,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *VfsClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *VfsClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -483,8 +483,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *VfsClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *VfsClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
diff --git a/v4/gio/gvolume.go b/v4/gio/gvolume.go
index 41c3c40db19276ee79be8f334c801d7a00a01dfd..7bcc408759e46ee8e5aa4afdfdc9472e454d71ea 100644
--- a/v4/gio/gvolume.go
+++ b/v4/gio/gvolume.go
@@ -64,8 +64,8 @@ func (x *VolumeIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *VolumeIface) SetCallbackChanged(cb func(Volume)) {
+// OverrideChanged sets the callback function.
+func (x *VolumeIface) OverrideChanged(cb func(Volume)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -75,8 +75,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *VolumeIface) GetCallbackChanged() func(Volume) {
+// GetChanged gets the callback function.
+func (x *VolumeIface) GetChanged() func(Volume) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -87,8 +87,8 @@ 		rawCallback(VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackRemoved sets the callback function.
-func (x *VolumeIface) SetCallbackRemoved(cb func(Volume)) {
+// OverrideRemoved sets the callback function.
+func (x *VolumeIface) OverrideRemoved(cb func(Volume)) {
 	if cb == nil {
 		x.xRemoved = 0
 	} else {
@@ -98,8 +98,8 @@ 		})
 	}
 }
 
-// GetCallbackRemoved gets the callback function.
-func (x *VolumeIface) GetCallbackRemoved() func(Volume) {
+// GetRemoved gets the callback function.
+func (x *VolumeIface) GetRemoved() func(Volume) {
 	if x.xRemoved == 0 {
 		return nil
 	}
@@ -110,8 +110,8 @@ 		rawCallback(VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackGetName sets the callback function.
-func (x *VolumeIface) SetCallbackGetName(cb func(Volume) string) {
+// OverrideGetName sets the callback function.
+func (x *VolumeIface) OverrideGetName(cb func(Volume) string) {
 	if cb == nil {
 		x.xGetName = 0
 	} else {
@@ -121,8 +121,8 @@ 		})
 	}
 }
 
-// GetCallbackGetName gets the callback function.
-func (x *VolumeIface) GetCallbackGetName() func(Volume) string {
+// GetGetName gets the callback function.
+func (x *VolumeIface) GetGetName() func(Volume) string {
 	if x.xGetName == 0 {
 		return nil
 	}
@@ -133,8 +133,8 @@ 		return rawCallback(VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackGetIcon sets the callback function.
-func (x *VolumeIface) SetCallbackGetIcon(cb func(Volume) *IconBase) {
+// OverrideGetIcon sets the callback function.
+func (x *VolumeIface) OverrideGetIcon(cb func(Volume) *IconBase) {
 	if cb == nil {
 		x.xGetIcon = 0
 	} else {
@@ -148,8 +148,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIcon gets the callback function.
-func (x *VolumeIface) GetCallbackGetIcon() func(Volume) *IconBase {
+// GetGetIcon gets the callback function.
+func (x *VolumeIface) GetGetIcon() func(Volume) *IconBase {
 	if x.xGetIcon == 0 {
 		return nil
 	}
@@ -166,8 +166,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetUuid sets the callback function.
-func (x *VolumeIface) SetCallbackGetUuid(cb func(Volume) string) {
+// OverrideGetUuid sets the callback function.
+func (x *VolumeIface) OverrideGetUuid(cb func(Volume) string) {
 	if cb == nil {
 		x.xGetUuid = 0
 	} else {
@@ -177,8 +177,8 @@ 		})
 	}
 }
 
-// GetCallbackGetUuid gets the callback function.
-func (x *VolumeIface) GetCallbackGetUuid() func(Volume) string {
+// GetGetUuid gets the callback function.
+func (x *VolumeIface) GetGetUuid() func(Volume) string {
 	if x.xGetUuid == 0 {
 		return nil
 	}
@@ -189,8 +189,8 @@ 		return rawCallback(VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackGetDrive sets the callback function.
-func (x *VolumeIface) SetCallbackGetDrive(cb func(Volume) *DriveBase) {
+// OverrideGetDrive sets the callback function.
+func (x *VolumeIface) OverrideGetDrive(cb func(Volume) *DriveBase) {
 	if cb == nil {
 		x.xGetDrive = 0
 	} else {
@@ -204,8 +204,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDrive gets the callback function.
-func (x *VolumeIface) GetCallbackGetDrive() func(Volume) *DriveBase {
+// GetGetDrive gets the callback function.
+func (x *VolumeIface) GetGetDrive() func(Volume) *DriveBase {
 	if x.xGetDrive == 0 {
 		return nil
 	}
@@ -222,8 +222,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetMount sets the callback function.
-func (x *VolumeIface) SetCallbackGetMount(cb func(Volume) *MountBase) {
+// OverrideGetMount sets the callback function.
+func (x *VolumeIface) OverrideGetMount(cb func(Volume) *MountBase) {
 	if cb == nil {
 		x.xGetMount = 0
 	} else {
@@ -237,8 +237,8 @@ 		})
 	}
 }
 
-// GetCallbackGetMount gets the callback function.
-func (x *VolumeIface) GetCallbackGetMount() func(Volume) *MountBase {
+// GetGetMount gets the callback function.
+func (x *VolumeIface) GetGetMount() func(Volume) *MountBase {
 	if x.xGetMount == 0 {
 		return nil
 	}
@@ -255,8 +255,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCanMount sets the callback function.
-func (x *VolumeIface) SetCallbackCanMount(cb func(Volume) bool) {
+// OverrideCanMount sets the callback function.
+func (x *VolumeIface) OverrideCanMount(cb func(Volume) bool) {
 	if cb == nil {
 		x.xCanMount = 0
 	} else {
@@ -266,8 +266,8 @@ 		})
 	}
 }
 
-// GetCallbackCanMount gets the callback function.
-func (x *VolumeIface) GetCallbackCanMount() func(Volume) bool {
+// GetCanMount gets the callback function.
+func (x *VolumeIface) GetCanMount() func(Volume) bool {
 	if x.xCanMount == 0 {
 		return nil
 	}
@@ -278,8 +278,8 @@ 		return rawCallback(VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackCanEject sets the callback function.
-func (x *VolumeIface) SetCallbackCanEject(cb func(Volume) bool) {
+// OverrideCanEject sets the callback function.
+func (x *VolumeIface) OverrideCanEject(cb func(Volume) bool) {
 	if cb == nil {
 		x.xCanEject = 0
 	} else {
@@ -289,8 +289,8 @@ 		})
 	}
 }
 
-// GetCallbackCanEject gets the callback function.
-func (x *VolumeIface) GetCallbackCanEject() func(Volume) bool {
+// GetCanEject gets the callback function.
+func (x *VolumeIface) GetCanEject() func(Volume) bool {
 	if x.xCanEject == 0 {
 		return nil
 	}
@@ -301,8 +301,8 @@ 		return rawCallback(VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackMountFn sets the callback function.
-func (x *VolumeIface) SetCallbackMountFn(cb func(Volume, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideMountFn sets the callback function.
+func (x *VolumeIface) OverrideMountFn(cb func(Volume, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xMountFn = 0
 	} else {
@@ -312,8 +312,8 @@ 		})
 	}
 }
 
-// GetCallbackMountFn gets the callback function.
-func (x *VolumeIface) GetCallbackMountFn() func(Volume, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetMountFn gets the callback function.
+func (x *VolumeIface) GetMountFn() func(Volume, MountMountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xMountFn == 0 {
 		return nil
 	}
@@ -324,8 +324,8 @@ 		rawCallback(VolumeVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackMountFinish sets the callback function.
-func (x *VolumeIface) SetCallbackMountFinish(cb func(Volume, AsyncResult) bool) {
+// OverrideMountFinish sets the callback function.
+func (x *VolumeIface) OverrideMountFinish(cb func(Volume, AsyncResult) bool) {
 	if cb == nil {
 		x.xMountFinish = 0
 	} else {
@@ -335,8 +335,8 @@ 		})
 	}
 }
 
-// GetCallbackMountFinish gets the callback function.
-func (x *VolumeIface) GetCallbackMountFinish() func(Volume, AsyncResult) bool {
+// GetMountFinish gets the callback function.
+func (x *VolumeIface) GetMountFinish() func(Volume, AsyncResult) bool {
 	if x.xMountFinish == 0 {
 		return nil
 	}
@@ -347,8 +347,8 @@ 		return rawCallback(VolumeVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackEject sets the callback function.
-func (x *VolumeIface) SetCallbackEject(cb func(Volume, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideEject sets the callback function.
+func (x *VolumeIface) OverrideEject(cb func(Volume, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xEject = 0
 	} else {
@@ -358,8 +358,8 @@ 		})
 	}
 }
 
-// GetCallbackEject gets the callback function.
-func (x *VolumeIface) GetCallbackEject() func(Volume, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetEject gets the callback function.
+func (x *VolumeIface) GetEject() func(Volume, MountUnmountFlags, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xEject == 0 {
 		return nil
 	}
@@ -370,8 +370,8 @@ 		rawCallback(VolumeVar.GoPointer(), FlagsVar, CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackEjectFinish sets the callback function.
-func (x *VolumeIface) SetCallbackEjectFinish(cb func(Volume, AsyncResult) bool) {
+// OverrideEjectFinish sets the callback function.
+func (x *VolumeIface) OverrideEjectFinish(cb func(Volume, AsyncResult) bool) {
 	if cb == nil {
 		x.xEjectFinish = 0
 	} else {
@@ -381,8 +381,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectFinish gets the callback function.
-func (x *VolumeIface) GetCallbackEjectFinish() func(Volume, AsyncResult) bool {
+// GetEjectFinish gets the callback function.
+func (x *VolumeIface) GetEjectFinish() func(Volume, AsyncResult) bool {
 	if x.xEjectFinish == 0 {
 		return nil
 	}
@@ -393,8 +393,8 @@ 		return rawCallback(VolumeVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGetIdentifier sets the callback function.
-func (x *VolumeIface) SetCallbackGetIdentifier(cb func(Volume, string) string) {
+// OverrideGetIdentifier sets the callback function.
+func (x *VolumeIface) OverrideGetIdentifier(cb func(Volume, string) string) {
 	if cb == nil {
 		x.xGetIdentifier = 0
 	} else {
@@ -404,8 +404,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIdentifier gets the callback function.
-func (x *VolumeIface) GetCallbackGetIdentifier() func(Volume, string) string {
+// GetGetIdentifier gets the callback function.
+func (x *VolumeIface) GetGetIdentifier() func(Volume, string) string {
 	if x.xGetIdentifier == 0 {
 		return nil
 	}
@@ -416,8 +416,8 @@ 		return rawCallback(VolumeVar.GoPointer(), KindVar)
 	}
 }
 
-// SetCallbackEnumerateIdentifiers sets the callback function.
-func (x *VolumeIface) SetCallbackEnumerateIdentifiers(cb func(Volume) []string) {
+// OverrideEnumerateIdentifiers sets the callback function.
+func (x *VolumeIface) OverrideEnumerateIdentifiers(cb func(Volume) []string) {
 	if cb == nil {
 		x.xEnumerateIdentifiers = 0
 	} else {
@@ -427,8 +427,8 @@ 		})
 	}
 }
 
-// GetCallbackEnumerateIdentifiers gets the callback function.
-func (x *VolumeIface) GetCallbackEnumerateIdentifiers() func(Volume) []string {
+// GetEnumerateIdentifiers gets the callback function.
+func (x *VolumeIface) GetEnumerateIdentifiers() func(Volume) []string {
 	if x.xEnumerateIdentifiers == 0 {
 		return nil
 	}
@@ -439,8 +439,8 @@ 		return rawCallback(VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackShouldAutomount sets the callback function.
-func (x *VolumeIface) SetCallbackShouldAutomount(cb func(Volume) bool) {
+// OverrideShouldAutomount sets the callback function.
+func (x *VolumeIface) OverrideShouldAutomount(cb func(Volume) bool) {
 	if cb == nil {
 		x.xShouldAutomount = 0
 	} else {
@@ -450,8 +450,8 @@ 		})
 	}
 }
 
-// GetCallbackShouldAutomount gets the callback function.
-func (x *VolumeIface) GetCallbackShouldAutomount() func(Volume) bool {
+// GetShouldAutomount gets the callback function.
+func (x *VolumeIface) GetShouldAutomount() func(Volume) bool {
 	if x.xShouldAutomount == 0 {
 		return nil
 	}
@@ -462,8 +462,8 @@ 		return rawCallback(VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackGetActivationRoot sets the callback function.
-func (x *VolumeIface) SetCallbackGetActivationRoot(cb func(Volume) *FileBase) {
+// OverrideGetActivationRoot sets the callback function.
+func (x *VolumeIface) OverrideGetActivationRoot(cb func(Volume) *FileBase) {
 	if cb == nil {
 		x.xGetActivationRoot = 0
 	} else {
@@ -477,8 +477,8 @@ 		})
 	}
 }
 
-// GetCallbackGetActivationRoot gets the callback function.
-func (x *VolumeIface) GetCallbackGetActivationRoot() func(Volume) *FileBase {
+// GetGetActivationRoot gets the callback function.
+func (x *VolumeIface) GetGetActivationRoot() func(Volume) *FileBase {
 	if x.xGetActivationRoot == 0 {
 		return nil
 	}
@@ -495,8 +495,8 @@ 		return ret
 	}
 }
 
-// SetCallbackEjectWithOperation sets the callback function.
-func (x *VolumeIface) SetCallbackEjectWithOperation(cb func(Volume, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
+// OverrideEjectWithOperation sets the callback function.
+func (x *VolumeIface) OverrideEjectWithOperation(cb func(Volume, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr)) {
 	if cb == nil {
 		x.xEjectWithOperation = 0
 	} else {
@@ -506,8 +506,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectWithOperation gets the callback function.
-func (x *VolumeIface) GetCallbackEjectWithOperation() func(Volume, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
+// GetEjectWithOperation gets the callback function.
+func (x *VolumeIface) GetEjectWithOperation() func(Volume, MountUnmountFlags, *MountOperation, *Cancellable, *AsyncReadyCallback, uintptr) {
 	if x.xEjectWithOperation == 0 {
 		return nil
 	}
@@ -518,8 +518,8 @@ 		rawCallback(VolumeVar.GoPointer(), FlagsVar, MountOperationVar.GoPointer(), CancellableVar.GoPointer(), glib.NewCallbackNullable(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackEjectWithOperationFinish sets the callback function.
-func (x *VolumeIface) SetCallbackEjectWithOperationFinish(cb func(Volume, AsyncResult) bool) {
+// OverrideEjectWithOperationFinish sets the callback function.
+func (x *VolumeIface) OverrideEjectWithOperationFinish(cb func(Volume, AsyncResult) bool) {
 	if cb == nil {
 		x.xEjectWithOperationFinish = 0
 	} else {
@@ -529,8 +529,8 @@ 		})
 	}
 }
 
-// GetCallbackEjectWithOperationFinish gets the callback function.
-func (x *VolumeIface) GetCallbackEjectWithOperationFinish() func(Volume, AsyncResult) bool {
+// GetEjectWithOperationFinish gets the callback function.
+func (x *VolumeIface) GetEjectWithOperationFinish() func(Volume, AsyncResult) bool {
 	if x.xEjectWithOperationFinish == 0 {
 		return nil
 	}
@@ -541,8 +541,8 @@ 		return rawCallback(VolumeVar.GoPointer(), ResultVar.GoPointer())
 	}
 }
 
-// SetCallbackGetSortKey sets the callback function.
-func (x *VolumeIface) SetCallbackGetSortKey(cb func(Volume) string) {
+// OverrideGetSortKey sets the callback function.
+func (x *VolumeIface) OverrideGetSortKey(cb func(Volume) string) {
 	if cb == nil {
 		x.xGetSortKey = 0
 	} else {
@@ -552,8 +552,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSortKey gets the callback function.
-func (x *VolumeIface) GetCallbackGetSortKey() func(Volume) string {
+// GetGetSortKey gets the callback function.
+func (x *VolumeIface) GetGetSortKey() func(Volume) string {
 	if x.xGetSortKey == 0 {
 		return nil
 	}
@@ -564,8 +564,8 @@ 		return rawCallback(VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackGetSymbolicIcon sets the callback function.
-func (x *VolumeIface) SetCallbackGetSymbolicIcon(cb func(Volume) *IconBase) {
+// OverrideGetSymbolicIcon sets the callback function.
+func (x *VolumeIface) OverrideGetSymbolicIcon(cb func(Volume) *IconBase) {
 	if cb == nil {
 		x.xGetSymbolicIcon = 0
 	} else {
@@ -579,8 +579,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSymbolicIcon gets the callback function.
-func (x *VolumeIface) GetCallbackGetSymbolicIcon() func(Volume) *IconBase {
+// GetGetSymbolicIcon gets the callback function.
+func (x *VolumeIface) GetGetSymbolicIcon() func(Volume) *IconBase {
 	if x.xGetSymbolicIcon == 0 {
 		return nil
 	}
diff --git a/v4/gio/gvolumemonitor.go b/v4/gio/gvolumemonitor.go
index 18df6308fa7043c6a2cd94b934996242a1be3663..7cbcdfd52688338749f7b65a3e3b2645f591cc2b 100644
--- a/v4/gio/gvolumemonitor.go
+++ b/v4/gio/gvolumemonitor.go
@@ -72,8 +72,8 @@ func (x *VolumeMonitorClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackVolumeAdded sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackVolumeAdded(cb func(*VolumeMonitor, Volume)) {
+// OverrideVolumeAdded sets the callback function.
+func (x *VolumeMonitorClass) OverrideVolumeAdded(cb func(*VolumeMonitor, Volume)) {
 	if cb == nil {
 		x.xVolumeAdded = 0
 	} else {
@@ -83,8 +83,8 @@ 		})
 	}
 }
 
-// GetCallbackVolumeAdded gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackVolumeAdded() func(*VolumeMonitor, Volume) {
+// GetVolumeAdded gets the callback function.
+func (x *VolumeMonitorClass) GetVolumeAdded() func(*VolumeMonitor, Volume) {
 	if x.xVolumeAdded == 0 {
 		return nil
 	}
@@ -95,8 +95,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackVolumeRemoved sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackVolumeRemoved(cb func(*VolumeMonitor, Volume)) {
+// OverrideVolumeRemoved sets the callback function.
+func (x *VolumeMonitorClass) OverrideVolumeRemoved(cb func(*VolumeMonitor, Volume)) {
 	if cb == nil {
 		x.xVolumeRemoved = 0
 	} else {
@@ -106,8 +106,8 @@ 		})
 	}
 }
 
-// GetCallbackVolumeRemoved gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackVolumeRemoved() func(*VolumeMonitor, Volume) {
+// GetVolumeRemoved gets the callback function.
+func (x *VolumeMonitorClass) GetVolumeRemoved() func(*VolumeMonitor, Volume) {
 	if x.xVolumeRemoved == 0 {
 		return nil
 	}
@@ -118,8 +118,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackVolumeChanged sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackVolumeChanged(cb func(*VolumeMonitor, Volume)) {
+// OverrideVolumeChanged sets the callback function.
+func (x *VolumeMonitorClass) OverrideVolumeChanged(cb func(*VolumeMonitor, Volume)) {
 	if cb == nil {
 		x.xVolumeChanged = 0
 	} else {
@@ -129,8 +129,8 @@ 		})
 	}
 }
 
-// GetCallbackVolumeChanged gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackVolumeChanged() func(*VolumeMonitor, Volume) {
+// GetVolumeChanged gets the callback function.
+func (x *VolumeMonitorClass) GetVolumeChanged() func(*VolumeMonitor, Volume) {
 	if x.xVolumeChanged == 0 {
 		return nil
 	}
@@ -141,8 +141,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), VolumeVar.GoPointer())
 	}
 }
 
-// SetCallbackMountAdded sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackMountAdded(cb func(*VolumeMonitor, Mount)) {
+// OverrideMountAdded sets the callback function.
+func (x *VolumeMonitorClass) OverrideMountAdded(cb func(*VolumeMonitor, Mount)) {
 	if cb == nil {
 		x.xMountAdded = 0
 	} else {
@@ -152,8 +152,8 @@ 		})
 	}
 }
 
-// GetCallbackMountAdded gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackMountAdded() func(*VolumeMonitor, Mount) {
+// GetMountAdded gets the callback function.
+func (x *VolumeMonitorClass) GetMountAdded() func(*VolumeMonitor, Mount) {
 	if x.xMountAdded == 0 {
 		return nil
 	}
@@ -164,8 +164,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), MountVar.GoPointer())
 	}
 }
 
-// SetCallbackMountRemoved sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackMountRemoved(cb func(*VolumeMonitor, Mount)) {
+// OverrideMountRemoved sets the callback function.
+func (x *VolumeMonitorClass) OverrideMountRemoved(cb func(*VolumeMonitor, Mount)) {
 	if cb == nil {
 		x.xMountRemoved = 0
 	} else {
@@ -175,8 +175,8 @@ 		})
 	}
 }
 
-// GetCallbackMountRemoved gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackMountRemoved() func(*VolumeMonitor, Mount) {
+// GetMountRemoved gets the callback function.
+func (x *VolumeMonitorClass) GetMountRemoved() func(*VolumeMonitor, Mount) {
 	if x.xMountRemoved == 0 {
 		return nil
 	}
@@ -187,8 +187,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), MountVar.GoPointer())
 	}
 }
 
-// SetCallbackMountPreUnmount sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackMountPreUnmount(cb func(*VolumeMonitor, Mount)) {
+// OverrideMountPreUnmount sets the callback function.
+func (x *VolumeMonitorClass) OverrideMountPreUnmount(cb func(*VolumeMonitor, Mount)) {
 	if cb == nil {
 		x.xMountPreUnmount = 0
 	} else {
@@ -198,8 +198,8 @@ 		})
 	}
 }
 
-// GetCallbackMountPreUnmount gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackMountPreUnmount() func(*VolumeMonitor, Mount) {
+// GetMountPreUnmount gets the callback function.
+func (x *VolumeMonitorClass) GetMountPreUnmount() func(*VolumeMonitor, Mount) {
 	if x.xMountPreUnmount == 0 {
 		return nil
 	}
@@ -210,8 +210,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), MountVar.GoPointer())
 	}
 }
 
-// SetCallbackMountChanged sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackMountChanged(cb func(*VolumeMonitor, Mount)) {
+// OverrideMountChanged sets the callback function.
+func (x *VolumeMonitorClass) OverrideMountChanged(cb func(*VolumeMonitor, Mount)) {
 	if cb == nil {
 		x.xMountChanged = 0
 	} else {
@@ -221,8 +221,8 @@ 		})
 	}
 }
 
-// GetCallbackMountChanged gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackMountChanged() func(*VolumeMonitor, Mount) {
+// GetMountChanged gets the callback function.
+func (x *VolumeMonitorClass) GetMountChanged() func(*VolumeMonitor, Mount) {
 	if x.xMountChanged == 0 {
 		return nil
 	}
@@ -233,8 +233,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), MountVar.GoPointer())
 	}
 }
 
-// SetCallbackDriveConnected sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackDriveConnected(cb func(*VolumeMonitor, Drive)) {
+// OverrideDriveConnected sets the callback function.
+func (x *VolumeMonitorClass) OverrideDriveConnected(cb func(*VolumeMonitor, Drive)) {
 	if cb == nil {
 		x.xDriveConnected = 0
 	} else {
@@ -244,8 +244,8 @@ 		})
 	}
 }
 
-// GetCallbackDriveConnected gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackDriveConnected() func(*VolumeMonitor, Drive) {
+// GetDriveConnected gets the callback function.
+func (x *VolumeMonitorClass) GetDriveConnected() func(*VolumeMonitor, Drive) {
 	if x.xDriveConnected == 0 {
 		return nil
 	}
@@ -256,8 +256,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackDriveDisconnected sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackDriveDisconnected(cb func(*VolumeMonitor, Drive)) {
+// OverrideDriveDisconnected sets the callback function.
+func (x *VolumeMonitorClass) OverrideDriveDisconnected(cb func(*VolumeMonitor, Drive)) {
 	if cb == nil {
 		x.xDriveDisconnected = 0
 	} else {
@@ -267,8 +267,8 @@ 		})
 	}
 }
 
-// GetCallbackDriveDisconnected gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackDriveDisconnected() func(*VolumeMonitor, Drive) {
+// GetDriveDisconnected gets the callback function.
+func (x *VolumeMonitorClass) GetDriveDisconnected() func(*VolumeMonitor, Drive) {
 	if x.xDriveDisconnected == 0 {
 		return nil
 	}
@@ -279,8 +279,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackDriveChanged sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackDriveChanged(cb func(*VolumeMonitor, Drive)) {
+// OverrideDriveChanged sets the callback function.
+func (x *VolumeMonitorClass) OverrideDriveChanged(cb func(*VolumeMonitor, Drive)) {
 	if cb == nil {
 		x.xDriveChanged = 0
 	} else {
@@ -290,8 +290,8 @@ 		})
 	}
 }
 
-// GetCallbackDriveChanged gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackDriveChanged() func(*VolumeMonitor, Drive) {
+// GetDriveChanged gets the callback function.
+func (x *VolumeMonitorClass) GetDriveChanged() func(*VolumeMonitor, Drive) {
 	if x.xDriveChanged == 0 {
 		return nil
 	}
@@ -302,8 +302,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackIsSupported sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackIsSupported(cb func() bool) {
+// OverrideIsSupported sets the callback function.
+func (x *VolumeMonitorClass) OverrideIsSupported(cb func() bool) {
 	if cb == nil {
 		x.xIsSupported = 0
 	} else {
@@ -313,8 +313,8 @@ 		})
 	}
 }
 
-// GetCallbackIsSupported gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackIsSupported() func() bool {
+// GetIsSupported gets the callback function.
+func (x *VolumeMonitorClass) GetIsSupported() func() bool {
 	if x.xIsSupported == 0 {
 		return nil
 	}
@@ -325,8 +325,8 @@ 		return rawCallback()
 	}
 }
 
-// SetCallbackGetConnectedDrives sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGetConnectedDrives(cb func(*VolumeMonitor) *glib.List) {
+// OverrideGetConnectedDrives sets the callback function.
+func (x *VolumeMonitorClass) OverrideGetConnectedDrives(cb func(*VolumeMonitor) *glib.List) {
 	if cb == nil {
 		x.xGetConnectedDrives = 0
 	} else {
@@ -336,8 +336,8 @@ 		})
 	}
 }
 
-// GetCallbackGetConnectedDrives gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGetConnectedDrives() func(*VolumeMonitor) *glib.List {
+// GetGetConnectedDrives gets the callback function.
+func (x *VolumeMonitorClass) GetGetConnectedDrives() func(*VolumeMonitor) *glib.List {
 	if x.xGetConnectedDrives == 0 {
 		return nil
 	}
@@ -348,8 +348,8 @@ 		return rawCallback(VolumeMonitorVar.GoPointer())
 	}
 }
 
-// SetCallbackGetVolumes sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGetVolumes(cb func(*VolumeMonitor) *glib.List) {
+// OverrideGetVolumes sets the callback function.
+func (x *VolumeMonitorClass) OverrideGetVolumes(cb func(*VolumeMonitor) *glib.List) {
 	if cb == nil {
 		x.xGetVolumes = 0
 	} else {
@@ -359,8 +359,8 @@ 		})
 	}
 }
 
-// GetCallbackGetVolumes gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGetVolumes() func(*VolumeMonitor) *glib.List {
+// GetGetVolumes gets the callback function.
+func (x *VolumeMonitorClass) GetGetVolumes() func(*VolumeMonitor) *glib.List {
 	if x.xGetVolumes == 0 {
 		return nil
 	}
@@ -371,8 +371,8 @@ 		return rawCallback(VolumeMonitorVar.GoPointer())
 	}
 }
 
-// SetCallbackGetMounts sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGetMounts(cb func(*VolumeMonitor) *glib.List) {
+// OverrideGetMounts sets the callback function.
+func (x *VolumeMonitorClass) OverrideGetMounts(cb func(*VolumeMonitor) *glib.List) {
 	if cb == nil {
 		x.xGetMounts = 0
 	} else {
@@ -382,8 +382,8 @@ 		})
 	}
 }
 
-// GetCallbackGetMounts gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGetMounts() func(*VolumeMonitor) *glib.List {
+// GetGetMounts gets the callback function.
+func (x *VolumeMonitorClass) GetGetMounts() func(*VolumeMonitor) *glib.List {
 	if x.xGetMounts == 0 {
 		return nil
 	}
@@ -394,8 +394,8 @@ 		return rawCallback(VolumeMonitorVar.GoPointer())
 	}
 }
 
-// SetCallbackGetVolumeForUuid sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGetVolumeForUuid(cb func(*VolumeMonitor, string) *VolumeBase) {
+// OverrideGetVolumeForUuid sets the callback function.
+func (x *VolumeMonitorClass) OverrideGetVolumeForUuid(cb func(*VolumeMonitor, string) *VolumeBase) {
 	if cb == nil {
 		x.xGetVolumeForUuid = 0
 	} else {
@@ -409,8 +409,8 @@ 		})
 	}
 }
 
-// GetCallbackGetVolumeForUuid gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGetVolumeForUuid() func(*VolumeMonitor, string) *VolumeBase {
+// GetGetVolumeForUuid gets the callback function.
+func (x *VolumeMonitorClass) GetGetVolumeForUuid() func(*VolumeMonitor, string) *VolumeBase {
 	if x.xGetVolumeForUuid == 0 {
 		return nil
 	}
@@ -427,8 +427,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetMountForUuid sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGetMountForUuid(cb func(*VolumeMonitor, string) *MountBase) {
+// OverrideGetMountForUuid sets the callback function.
+func (x *VolumeMonitorClass) OverrideGetMountForUuid(cb func(*VolumeMonitor, string) *MountBase) {
 	if cb == nil {
 		x.xGetMountForUuid = 0
 	} else {
@@ -442,8 +442,8 @@ 		})
 	}
 }
 
-// GetCallbackGetMountForUuid gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGetMountForUuid() func(*VolumeMonitor, string) *MountBase {
+// GetGetMountForUuid gets the callback function.
+func (x *VolumeMonitorClass) GetGetMountForUuid() func(*VolumeMonitor, string) *MountBase {
 	if x.xGetMountForUuid == 0 {
 		return nil
 	}
@@ -460,8 +460,8 @@ 		return ret
 	}
 }
 
-// SetCallbackAdoptOrphanMount sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackAdoptOrphanMount(cb func(Mount, *VolumeMonitor) *VolumeBase) {
+// OverrideAdoptOrphanMount sets the callback function.
+func (x *VolumeMonitorClass) OverrideAdoptOrphanMount(cb func(Mount, *VolumeMonitor) *VolumeBase) {
 	if cb == nil {
 		x.xAdoptOrphanMount = 0
 	} else {
@@ -475,8 +475,8 @@ 		})
 	}
 }
 
-// GetCallbackAdoptOrphanMount gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackAdoptOrphanMount() func(Mount, *VolumeMonitor) *VolumeBase {
+// GetAdoptOrphanMount gets the callback function.
+func (x *VolumeMonitorClass) GetAdoptOrphanMount() func(Mount, *VolumeMonitor) *VolumeBase {
 	if x.xAdoptOrphanMount == 0 {
 		return nil
 	}
@@ -493,8 +493,8 @@ 		return ret
 	}
 }
 
-// SetCallbackDriveEjectButton sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackDriveEjectButton(cb func(*VolumeMonitor, Drive)) {
+// OverrideDriveEjectButton sets the callback function.
+func (x *VolumeMonitorClass) OverrideDriveEjectButton(cb func(*VolumeMonitor, Drive)) {
 	if cb == nil {
 		x.xDriveEjectButton = 0
 	} else {
@@ -504,8 +504,8 @@ 		})
 	}
 }
 
-// GetCallbackDriveEjectButton gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackDriveEjectButton() func(*VolumeMonitor, Drive) {
+// GetDriveEjectButton gets the callback function.
+func (x *VolumeMonitorClass) GetDriveEjectButton() func(*VolumeMonitor, Drive) {
 	if x.xDriveEjectButton == 0 {
 		return nil
 	}
@@ -516,8 +516,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackDriveStopButton sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackDriveStopButton(cb func(*VolumeMonitor, Drive)) {
+// OverrideDriveStopButton sets the callback function.
+func (x *VolumeMonitorClass) OverrideDriveStopButton(cb func(*VolumeMonitor, Drive)) {
 	if cb == nil {
 		x.xDriveStopButton = 0
 	} else {
@@ -527,8 +527,8 @@ 		})
 	}
 }
 
-// GetCallbackDriveStopButton gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackDriveStopButton() func(*VolumeMonitor, Drive) {
+// GetDriveStopButton gets the callback function.
+func (x *VolumeMonitorClass) GetDriveStopButton() func(*VolumeMonitor, Drive) {
 	if x.xDriveStopButton == 0 {
 		return nil
 	}
@@ -539,8 +539,8 @@ 		rawCallback(VolumeMonitorVar.GoPointer(), DriveVar.GoPointer())
 	}
 }
 
-// SetCallbackGReserved1 sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGReserved1(cb func()) {
+// OverrideGReserved1 sets the callback function.
+func (x *VolumeMonitorClass) OverrideGReserved1(cb func()) {
 	if cb == nil {
 		x.xGReserved1 = 0
 	} else {
@@ -550,8 +550,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved1 gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGReserved1() func() {
+// GetGReserved1 gets the callback function.
+func (x *VolumeMonitorClass) GetGReserved1() func() {
 	if x.xGReserved1 == 0 {
 		return nil
 	}
@@ -562,8 +562,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved2 sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGReserved2(cb func()) {
+// OverrideGReserved2 sets the callback function.
+func (x *VolumeMonitorClass) OverrideGReserved2(cb func()) {
 	if cb == nil {
 		x.xGReserved2 = 0
 	} else {
@@ -573,8 +573,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved2 gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGReserved2() func() {
+// GetGReserved2 gets the callback function.
+func (x *VolumeMonitorClass) GetGReserved2() func() {
 	if x.xGReserved2 == 0 {
 		return nil
 	}
@@ -585,8 +585,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved3 sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGReserved3(cb func()) {
+// OverrideGReserved3 sets the callback function.
+func (x *VolumeMonitorClass) OverrideGReserved3(cb func()) {
 	if cb == nil {
 		x.xGReserved3 = 0
 	} else {
@@ -596,8 +596,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved3 gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGReserved3() func() {
+// GetGReserved3 gets the callback function.
+func (x *VolumeMonitorClass) GetGReserved3() func() {
 	if x.xGReserved3 == 0 {
 		return nil
 	}
@@ -608,8 +608,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved4 sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGReserved4(cb func()) {
+// OverrideGReserved4 sets the callback function.
+func (x *VolumeMonitorClass) OverrideGReserved4(cb func()) {
 	if cb == nil {
 		x.xGReserved4 = 0
 	} else {
@@ -619,8 +619,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved4 gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGReserved4() func() {
+// GetGReserved4 gets the callback function.
+func (x *VolumeMonitorClass) GetGReserved4() func() {
 	if x.xGReserved4 == 0 {
 		return nil
 	}
@@ -631,8 +631,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved5 sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGReserved5(cb func()) {
+// OverrideGReserved5 sets the callback function.
+func (x *VolumeMonitorClass) OverrideGReserved5(cb func()) {
 	if cb == nil {
 		x.xGReserved5 = 0
 	} else {
@@ -642,8 +642,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved5 gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGReserved5() func() {
+// GetGReserved5 gets the callback function.
+func (x *VolumeMonitorClass) GetGReserved5() func() {
 	if x.xGReserved5 == 0 {
 		return nil
 	}
@@ -654,8 +654,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGReserved6 sets the callback function.
-func (x *VolumeMonitorClass) SetCallbackGReserved6(cb func()) {
+// OverrideGReserved6 sets the callback function.
+func (x *VolumeMonitorClass) OverrideGReserved6(cb func()) {
 	if cb == nil {
 		x.xGReserved6 = 0
 	} else {
@@ -665,8 +665,8 @@ 		})
 	}
 }
 
-// GetCallbackGReserved6 gets the callback function.
-func (x *VolumeMonitorClass) GetCallbackGReserved6() func() {
+// GetGReserved6 gets the callback function.
+func (x *VolumeMonitorClass) GetGReserved6() func() {
 	if x.xGReserved6 == 0 {
 		return nil
 	}
diff --git a/v4/glib/giochannel.go b/v4/glib/giochannel.go
index ba85ddd8d1def5afc54b9f74c04a70eb8513536c..d2068c0f9f1d2a6d3f0ceecf601d8c8d5c1bca99 100644
--- a/v4/glib/giochannel.go
+++ b/v4/glib/giochannel.go
@@ -581,8 +581,8 @@ func (x *IOFuncs) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackIoRead sets the callback function.
-func (x *IOFuncs) SetCallbackIoRead(cb func(*IOChannel, string, uint, uint) IOStatus) {
+// OverrideIoRead sets the callback function.
+func (x *IOFuncs) OverrideIoRead(cb func(*IOChannel, string, uint, uint) IOStatus) {
 	if cb == nil {
 		x.xIoRead = 0
 	} else {
@@ -592,8 +592,8 @@ 		})
 	}
 }
 
-// GetCallbackIoRead gets the callback function.
-func (x *IOFuncs) GetCallbackIoRead() func(*IOChannel, string, uint, uint) IOStatus {
+// GetIoRead gets the callback function.
+func (x *IOFuncs) GetIoRead() func(*IOChannel, string, uint, uint) IOStatus {
 	if x.xIoRead == 0 {
 		return nil
 	}
@@ -604,8 +604,8 @@ 		return rawCallback(ChannelVar, BufVar, CountVar, BytesReadVar)
 	}
 }
 
-// SetCallbackIoWrite sets the callback function.
-func (x *IOFuncs) SetCallbackIoWrite(cb func(*IOChannel, string, uint, uint) IOStatus) {
+// OverrideIoWrite sets the callback function.
+func (x *IOFuncs) OverrideIoWrite(cb func(*IOChannel, string, uint, uint) IOStatus) {
 	if cb == nil {
 		x.xIoWrite = 0
 	} else {
@@ -615,8 +615,8 @@ 		})
 	}
 }
 
-// GetCallbackIoWrite gets the callback function.
-func (x *IOFuncs) GetCallbackIoWrite() func(*IOChannel, string, uint, uint) IOStatus {
+// GetIoWrite gets the callback function.
+func (x *IOFuncs) GetIoWrite() func(*IOChannel, string, uint, uint) IOStatus {
 	if x.xIoWrite == 0 {
 		return nil
 	}
@@ -627,8 +627,8 @@ 		return rawCallback(ChannelVar, BufVar, CountVar, BytesWrittenVar)
 	}
 }
 
-// SetCallbackIoSeek sets the callback function.
-func (x *IOFuncs) SetCallbackIoSeek(cb func(*IOChannel, int64, SeekType) IOStatus) {
+// OverrideIoSeek sets the callback function.
+func (x *IOFuncs) OverrideIoSeek(cb func(*IOChannel, int64, SeekType) IOStatus) {
 	if cb == nil {
 		x.xIoSeek = 0
 	} else {
@@ -638,8 +638,8 @@ 		})
 	}
 }
 
-// GetCallbackIoSeek gets the callback function.
-func (x *IOFuncs) GetCallbackIoSeek() func(*IOChannel, int64, SeekType) IOStatus {
+// GetIoSeek gets the callback function.
+func (x *IOFuncs) GetIoSeek() func(*IOChannel, int64, SeekType) IOStatus {
 	if x.xIoSeek == 0 {
 		return nil
 	}
@@ -650,8 +650,8 @@ 		return rawCallback(ChannelVar, OffsetVar, TypeVar)
 	}
 }
 
-// SetCallbackIoClose sets the callback function.
-func (x *IOFuncs) SetCallbackIoClose(cb func(*IOChannel) IOStatus) {
+// OverrideIoClose sets the callback function.
+func (x *IOFuncs) OverrideIoClose(cb func(*IOChannel) IOStatus) {
 	if cb == nil {
 		x.xIoClose = 0
 	} else {
@@ -661,8 +661,8 @@ 		})
 	}
 }
 
-// GetCallbackIoClose gets the callback function.
-func (x *IOFuncs) GetCallbackIoClose() func(*IOChannel) IOStatus {
+// GetIoClose gets the callback function.
+func (x *IOFuncs) GetIoClose() func(*IOChannel) IOStatus {
 	if x.xIoClose == 0 {
 		return nil
 	}
@@ -673,8 +673,8 @@ 		return rawCallback(ChannelVar)
 	}
 }
 
-// SetCallbackIoCreateWatch sets the callback function.
-func (x *IOFuncs) SetCallbackIoCreateWatch(cb func(*IOChannel, IOCondition) *Source) {
+// OverrideIoCreateWatch sets the callback function.
+func (x *IOFuncs) OverrideIoCreateWatch(cb func(*IOChannel, IOCondition) *Source) {
 	if cb == nil {
 		x.xIoCreateWatch = 0
 	} else {
@@ -684,8 +684,8 @@ 		})
 	}
 }
 
-// GetCallbackIoCreateWatch gets the callback function.
-func (x *IOFuncs) GetCallbackIoCreateWatch() func(*IOChannel, IOCondition) *Source {
+// GetIoCreateWatch gets the callback function.
+func (x *IOFuncs) GetIoCreateWatch() func(*IOChannel, IOCondition) *Source {
 	if x.xIoCreateWatch == 0 {
 		return nil
 	}
@@ -696,8 +696,8 @@ 		return rawCallback(ChannelVar, ConditionVar)
 	}
 }
 
-// SetCallbackIoFree sets the callback function.
-func (x *IOFuncs) SetCallbackIoFree(cb func(*IOChannel)) {
+// OverrideIoFree sets the callback function.
+func (x *IOFuncs) OverrideIoFree(cb func(*IOChannel)) {
 	if cb == nil {
 		x.xIoFree = 0
 	} else {
@@ -707,8 +707,8 @@ 		})
 	}
 }
 
-// GetCallbackIoFree gets the callback function.
-func (x *IOFuncs) GetCallbackIoFree() func(*IOChannel) {
+// GetIoFree gets the callback function.
+func (x *IOFuncs) GetIoFree() func(*IOChannel) {
 	if x.xIoFree == 0 {
 		return nil
 	}
@@ -719,8 +719,8 @@ 		rawCallback(ChannelVar)
 	}
 }
 
-// SetCallbackIoSetFlags sets the callback function.
-func (x *IOFuncs) SetCallbackIoSetFlags(cb func(*IOChannel, IOFlags) IOStatus) {
+// OverrideIoSetFlags sets the callback function.
+func (x *IOFuncs) OverrideIoSetFlags(cb func(*IOChannel, IOFlags) IOStatus) {
 	if cb == nil {
 		x.xIoSetFlags = 0
 	} else {
@@ -730,8 +730,8 @@ 		})
 	}
 }
 
-// GetCallbackIoSetFlags gets the callback function.
-func (x *IOFuncs) GetCallbackIoSetFlags() func(*IOChannel, IOFlags) IOStatus {
+// GetIoSetFlags gets the callback function.
+func (x *IOFuncs) GetIoSetFlags() func(*IOChannel, IOFlags) IOStatus {
 	if x.xIoSetFlags == 0 {
 		return nil
 	}
@@ -742,8 +742,8 @@ 		return rawCallback(ChannelVar, FlagsVar)
 	}
 }
 
-// SetCallbackIoGetFlags sets the callback function.
-func (x *IOFuncs) SetCallbackIoGetFlags(cb func(*IOChannel) IOFlags) {
+// OverrideIoGetFlags sets the callback function.
+func (x *IOFuncs) OverrideIoGetFlags(cb func(*IOChannel) IOFlags) {
 	if cb == nil {
 		x.xIoGetFlags = 0
 	} else {
@@ -753,8 +753,8 @@ 		})
 	}
 }
 
-// GetCallbackIoGetFlags gets the callback function.
-func (x *IOFuncs) GetCallbackIoGetFlags() func(*IOChannel) IOFlags {
+// GetIoGetFlags gets the callback function.
+func (x *IOFuncs) GetIoGetFlags() func(*IOChannel) IOFlags {
 	if x.xIoGetFlags == 0 {
 		return nil
 	}
diff --git a/v4/glib/gmain.go b/v4/glib/gmain.go
index 5d0a0696dddf0f94665858c98483011e8e0813d1..4e81b64eb0b48c9512af295150faeb7b4e9b5d7d 100644
--- a/v4/glib/gmain.go
+++ b/v4/glib/gmain.go
@@ -1192,8 +1192,8 @@ func (x *SourceCallbackFuncs) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackRef sets the callback function.
-func (x *SourceCallbackFuncs) SetCallbackRef(cb func(uintptr)) {
+// OverrideRef sets the callback function.
+func (x *SourceCallbackFuncs) OverrideRef(cb func(uintptr)) {
 	if cb == nil {
 		x.xRef = 0
 	} else {
@@ -1203,8 +1203,8 @@ 		})
 	}
 }
 
-// GetCallbackRef gets the callback function.
-func (x *SourceCallbackFuncs) GetCallbackRef() func(uintptr) {
+// GetRef gets the callback function.
+func (x *SourceCallbackFuncs) GetRef() func(uintptr) {
 	if x.xRef == 0 {
 		return nil
 	}
@@ -1215,8 +1215,8 @@ 		rawCallback(CbDataVar)
 	}
 }
 
-// SetCallbackUnref sets the callback function.
-func (x *SourceCallbackFuncs) SetCallbackUnref(cb func(uintptr)) {
+// OverrideUnref sets the callback function.
+func (x *SourceCallbackFuncs) OverrideUnref(cb func(uintptr)) {
 	if cb == nil {
 		x.xUnref = 0
 	} else {
@@ -1226,8 +1226,8 @@ 		})
 	}
 }
 
-// GetCallbackUnref gets the callback function.
-func (x *SourceCallbackFuncs) GetCallbackUnref() func(uintptr) {
+// GetUnref gets the callback function.
+func (x *SourceCallbackFuncs) GetUnref() func(uintptr) {
 	if x.xUnref == 0 {
 		return nil
 	}
@@ -1238,8 +1238,8 @@ 		rawCallback(CbDataVar)
 	}
 }
 
-// SetCallbackGet sets the callback function.
-func (x *SourceCallbackFuncs) SetCallbackGet(cb func(uintptr, *Source, *SourceFunc, uintptr)) {
+// OverrideGet sets the callback function.
+func (x *SourceCallbackFuncs) OverrideGet(cb func(uintptr, *Source, *SourceFunc, uintptr)) {
 	if cb == nil {
 		x.xGet = 0
 	} else {
@@ -1249,8 +1249,8 @@ 		})
 	}
 }
 
-// GetCallbackGet gets the callback function.
-func (x *SourceCallbackFuncs) GetCallbackGet() func(uintptr, *Source, *SourceFunc, uintptr) {
+// GetGet gets the callback function.
+func (x *SourceCallbackFuncs) GetGet() func(uintptr, *Source, *SourceFunc, uintptr) {
 	if x.xGet == 0 {
 		return nil
 	}
@@ -1301,8 +1301,8 @@ func (x *SourceFuncs) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackPrepare sets the callback function.
-func (x *SourceFuncs) SetCallbackPrepare(cb func(*Source, int) bool) {
+// OverridePrepare sets the callback function.
+func (x *SourceFuncs) OverridePrepare(cb func(*Source, int) bool) {
 	if cb == nil {
 		x.xPrepare = 0
 	} else {
@@ -1312,8 +1312,8 @@ 		})
 	}
 }
 
-// GetCallbackPrepare gets the callback function.
-func (x *SourceFuncs) GetCallbackPrepare() func(*Source, int) bool {
+// GetPrepare gets the callback function.
+func (x *SourceFuncs) GetPrepare() func(*Source, int) bool {
 	if x.xPrepare == 0 {
 		return nil
 	}
@@ -1324,8 +1324,8 @@ 		return rawCallback(SourceVar, TimeoutVar)
 	}
 }
 
-// SetCallbackCheck sets the callback function.
-func (x *SourceFuncs) SetCallbackCheck(cb func(*Source) bool) {
+// OverrideCheck sets the callback function.
+func (x *SourceFuncs) OverrideCheck(cb func(*Source) bool) {
 	if cb == nil {
 		x.xCheck = 0
 	} else {
@@ -1335,8 +1335,8 @@ 		})
 	}
 }
 
-// GetCallbackCheck gets the callback function.
-func (x *SourceFuncs) GetCallbackCheck() func(*Source) bool {
+// GetCheck gets the callback function.
+func (x *SourceFuncs) GetCheck() func(*Source) bool {
 	if x.xCheck == 0 {
 		return nil
 	}
@@ -1347,8 +1347,8 @@ 		return rawCallback(SourceVar)
 	}
 }
 
-// SetCallbackDispatch sets the callback function.
-func (x *SourceFuncs) SetCallbackDispatch(cb func(*Source, *SourceFunc, uintptr) bool) {
+// OverrideDispatch sets the callback function.
+func (x *SourceFuncs) OverrideDispatch(cb func(*Source, *SourceFunc, uintptr) bool) {
 	if cb == nil {
 		x.xDispatch = 0
 	} else {
@@ -1358,8 +1358,8 @@ 		})
 	}
 }
 
-// GetCallbackDispatch gets the callback function.
-func (x *SourceFuncs) GetCallbackDispatch() func(*Source, *SourceFunc, uintptr) bool {
+// GetDispatch gets the callback function.
+func (x *SourceFuncs) GetDispatch() func(*Source, *SourceFunc, uintptr) bool {
 	if x.xDispatch == 0 {
 		return nil
 	}
@@ -1370,8 +1370,8 @@ 		return rawCallback(SourceVar, NewCallback(CallbackVar), UserDataVar)
 	}
 }
 
-// SetCallbackFinalize sets the callback function.
-func (x *SourceFuncs) SetCallbackFinalize(cb func(*Source)) {
+// OverrideFinalize sets the callback function.
+func (x *SourceFuncs) OverrideFinalize(cb func(*Source)) {
 	if cb == nil {
 		x.xFinalize = 0
 	} else {
@@ -1381,8 +1381,8 @@ 		})
 	}
 }
 
-// GetCallbackFinalize gets the callback function.
-func (x *SourceFuncs) GetCallbackFinalize() func(*Source) {
+// GetFinalize gets the callback function.
+func (x *SourceFuncs) GetFinalize() func(*Source) {
 	if x.xFinalize == 0 {
 		return nil
 	}
diff --git a/v4/glib/gmarkup.go b/v4/glib/gmarkup.go
index 5e00f7061440166ef097e1b445de30b794c27e19..114380fb1ca8f67da2e75fbf289640bf4127589a 100644
--- a/v4/glib/gmarkup.go
+++ b/v4/glib/gmarkup.go
@@ -352,8 +352,8 @@ func (x *MarkupParser) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackStartElement sets the callback function.
-func (x *MarkupParser) SetCallbackStartElement(cb func(*MarkupParseContext, string, string, string, uintptr)) {
+// OverrideStartElement sets the callback function.
+func (x *MarkupParser) OverrideStartElement(cb func(*MarkupParseContext, string, string, string, uintptr)) {
 	if cb == nil {
 		x.xStartElement = 0
 	} else {
@@ -363,8 +363,8 @@ 		})
 	}
 }
 
-// GetCallbackStartElement gets the callback function.
-func (x *MarkupParser) GetCallbackStartElement() func(*MarkupParseContext, string, string, string, uintptr) {
+// GetStartElement gets the callback function.
+func (x *MarkupParser) GetStartElement() func(*MarkupParseContext, string, string, string, uintptr) {
 	if x.xStartElement == 0 {
 		return nil
 	}
@@ -375,8 +375,8 @@ 		rawCallback(ContextVar, ElementNameVar, AttributeNamesVar, AttributeValuesVar, UserDataVar)
 	}
 }
 
-// SetCallbackEndElement sets the callback function.
-func (x *MarkupParser) SetCallbackEndElement(cb func(*MarkupParseContext, string, uintptr)) {
+// OverrideEndElement sets the callback function.
+func (x *MarkupParser) OverrideEndElement(cb func(*MarkupParseContext, string, uintptr)) {
 	if cb == nil {
 		x.xEndElement = 0
 	} else {
@@ -386,8 +386,8 @@ 		})
 	}
 }
 
-// GetCallbackEndElement gets the callback function.
-func (x *MarkupParser) GetCallbackEndElement() func(*MarkupParseContext, string, uintptr) {
+// GetEndElement gets the callback function.
+func (x *MarkupParser) GetEndElement() func(*MarkupParseContext, string, uintptr) {
 	if x.xEndElement == 0 {
 		return nil
 	}
@@ -398,8 +398,8 @@ 		rawCallback(ContextVar, ElementNameVar, UserDataVar)
 	}
 }
 
-// SetCallbackText sets the callback function.
-func (x *MarkupParser) SetCallbackText(cb func(*MarkupParseContext, string, uint, uintptr)) {
+// OverrideText sets the callback function.
+func (x *MarkupParser) OverrideText(cb func(*MarkupParseContext, string, uint, uintptr)) {
 	if cb == nil {
 		x.xText = 0
 	} else {
@@ -409,8 +409,8 @@ 		})
 	}
 }
 
-// GetCallbackText gets the callback function.
-func (x *MarkupParser) GetCallbackText() func(*MarkupParseContext, string, uint, uintptr) {
+// GetText gets the callback function.
+func (x *MarkupParser) GetText() func(*MarkupParseContext, string, uint, uintptr) {
 	if x.xText == 0 {
 		return nil
 	}
@@ -421,8 +421,8 @@ 		rawCallback(ContextVar, TextVar, TextLenVar, UserDataVar)
 	}
 }
 
-// SetCallbackPassthrough sets the callback function.
-func (x *MarkupParser) SetCallbackPassthrough(cb func(*MarkupParseContext, string, uint, uintptr)) {
+// OverridePassthrough sets the callback function.
+func (x *MarkupParser) OverridePassthrough(cb func(*MarkupParseContext, string, uint, uintptr)) {
 	if cb == nil {
 		x.xPassthrough = 0
 	} else {
@@ -432,8 +432,8 @@ 		})
 	}
 }
 
-// GetCallbackPassthrough gets the callback function.
-func (x *MarkupParser) GetCallbackPassthrough() func(*MarkupParseContext, string, uint, uintptr) {
+// GetPassthrough gets the callback function.
+func (x *MarkupParser) GetPassthrough() func(*MarkupParseContext, string, uint, uintptr) {
 	if x.xPassthrough == 0 {
 		return nil
 	}
@@ -444,8 +444,8 @@ 		rawCallback(ContextVar, PassthroughTextVar, TextLenVar, UserDataVar)
 	}
 }
 
-// SetCallbackError sets the callback function.
-func (x *MarkupParser) SetCallbackError(cb func(*MarkupParseContext, *Error, uintptr)) {
+// OverrideError sets the callback function.
+func (x *MarkupParser) OverrideError(cb func(*MarkupParseContext, *Error, uintptr)) {
 	if cb == nil {
 		x.xError = 0
 	} else {
@@ -455,8 +455,8 @@ 		})
 	}
 }
 
-// GetCallbackError gets the callback function.
-func (x *MarkupParser) GetCallbackError() func(*MarkupParseContext, *Error, uintptr) {
+// GetError gets the callback function.
+func (x *MarkupParser) GetError() func(*MarkupParseContext, *Error, uintptr) {
 	if x.xError == 0 {
 		return nil
 	}
diff --git a/v4/glib/gmem.go b/v4/glib/gmem.go
index 709b3438836d3a899649a9bbd96e47b1581eb005..9f1d10ffe8f838595abb3c0307f580c269394a79 100644
--- a/v4/glib/gmem.go
+++ b/v4/glib/gmem.go
@@ -34,8 +34,8 @@ func (x *MemVTable) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackMalloc sets the callback function.
-func (x *MemVTable) SetCallbackMalloc(cb func(uint) uintptr) {
+// OverrideMalloc sets the callback function.
+func (x *MemVTable) OverrideMalloc(cb func(uint) uintptr) {
 	if cb == nil {
 		x.xMalloc = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackMalloc gets the callback function.
-func (x *MemVTable) GetCallbackMalloc() func(uint) uintptr {
+// GetMalloc gets the callback function.
+func (x *MemVTable) GetMalloc() func(uint) uintptr {
 	if x.xMalloc == 0 {
 		return nil
 	}
@@ -57,8 +57,8 @@ 		return rawCallback(NBytesVar)
 	}
 }
 
-// SetCallbackRealloc sets the callback function.
-func (x *MemVTable) SetCallbackRealloc(cb func(uintptr, uint) uintptr) {
+// OverrideRealloc sets the callback function.
+func (x *MemVTable) OverrideRealloc(cb func(uintptr, uint) uintptr) {
 	if cb == nil {
 		x.xRealloc = 0
 	} else {
@@ -68,8 +68,8 @@ 		})
 	}
 }
 
-// GetCallbackRealloc gets the callback function.
-func (x *MemVTable) GetCallbackRealloc() func(uintptr, uint) uintptr {
+// GetRealloc gets the callback function.
+func (x *MemVTable) GetRealloc() func(uintptr, uint) uintptr {
 	if x.xRealloc == 0 {
 		return nil
 	}
@@ -80,8 +80,8 @@ 		return rawCallback(MemVar, NBytesVar)
 	}
 }
 
-// SetCallbackFree sets the callback function.
-func (x *MemVTable) SetCallbackFree(cb func(uintptr)) {
+// OverrideFree sets the callback function.
+func (x *MemVTable) OverrideFree(cb func(uintptr)) {
 	if cb == nil {
 		x.xFree = 0
 	} else {
@@ -91,8 +91,8 @@ 		})
 	}
 }
 
-// GetCallbackFree gets the callback function.
-func (x *MemVTable) GetCallbackFree() func(uintptr) {
+// GetFree gets the callback function.
+func (x *MemVTable) GetFree() func(uintptr) {
 	if x.xFree == 0 {
 		return nil
 	}
@@ -103,8 +103,8 @@ 		rawCallback(MemVar)
 	}
 }
 
-// SetCallbackCalloc sets the callback function.
-func (x *MemVTable) SetCallbackCalloc(cb func(uint, uint) uintptr) {
+// OverrideCalloc sets the callback function.
+func (x *MemVTable) OverrideCalloc(cb func(uint, uint) uintptr) {
 	if cb == nil {
 		x.xCalloc = 0
 	} else {
@@ -114,8 +114,8 @@ 		})
 	}
 }
 
-// GetCallbackCalloc gets the callback function.
-func (x *MemVTable) GetCallbackCalloc() func(uint, uint) uintptr {
+// GetCalloc gets the callback function.
+func (x *MemVTable) GetCalloc() func(uint, uint) uintptr {
 	if x.xCalloc == 0 {
 		return nil
 	}
@@ -126,8 +126,8 @@ 		return rawCallback(NBlocksVar, NBlockBytesVar)
 	}
 }
 
-// SetCallbackTryMalloc sets the callback function.
-func (x *MemVTable) SetCallbackTryMalloc(cb func(uint) uintptr) {
+// OverrideTryMalloc sets the callback function.
+func (x *MemVTable) OverrideTryMalloc(cb func(uint) uintptr) {
 	if cb == nil {
 		x.xTryMalloc = 0
 	} else {
@@ -137,8 +137,8 @@ 		})
 	}
 }
 
-// GetCallbackTryMalloc gets the callback function.
-func (x *MemVTable) GetCallbackTryMalloc() func(uint) uintptr {
+// GetTryMalloc gets the callback function.
+func (x *MemVTable) GetTryMalloc() func(uint) uintptr {
 	if x.xTryMalloc == 0 {
 		return nil
 	}
@@ -149,8 +149,8 @@ 		return rawCallback(NBytesVar)
 	}
 }
 
-// SetCallbackTryRealloc sets the callback function.
-func (x *MemVTable) SetCallbackTryRealloc(cb func(uintptr, uint) uintptr) {
+// OverrideTryRealloc sets the callback function.
+func (x *MemVTable) OverrideTryRealloc(cb func(uintptr, uint) uintptr) {
 	if cb == nil {
 		x.xTryRealloc = 0
 	} else {
@@ -160,8 +160,8 @@ 		})
 	}
 }
 
-// GetCallbackTryRealloc gets the callback function.
-func (x *MemVTable) GetCallbackTryRealloc() func(uintptr, uint) uintptr {
+// GetTryRealloc gets the callback function.
+func (x *MemVTable) GetTryRealloc() func(uintptr, uint) uintptr {
 	if x.xTryRealloc == 0 {
 		return nil
 	}
diff --git a/v4/gobject/gclosure.go b/v4/gobject/gclosure.go
index 20f60e7033178d51064f19df187efc852c0777a5..d849ad9caef2ff1c80f6e1fe18c0f9bb0720ac2e 100644
--- a/v4/gobject/gclosure.go
+++ b/v4/gobject/gclosure.go
@@ -411,8 +411,8 @@ 	xClosureUnref(x.GoPointer())
 
 }
 
-// SetCallbackMarshal sets the callback function.
-func (x *Closure) SetCallbackMarshal(cb func(*Closure, *Value, uint, *Value, uintptr, uintptr)) {
+// OverrideMarshal sets the callback function.
+func (x *Closure) OverrideMarshal(cb func(*Closure, *Value, uint, *Value, uintptr, uintptr)) {
 	if cb == nil {
 		x.xMarshal = 0
 	} else {
@@ -422,8 +422,8 @@ 		})
 	}
 }
 
-// GetCallbackMarshal gets the callback function.
-func (x *Closure) GetCallbackMarshal() func(*Closure, *Value, uint, *Value, uintptr, uintptr) {
+// GetMarshal gets the callback function.
+func (x *Closure) GetMarshal() func(*Closure, *Value, uint, *Value, uintptr, uintptr) {
 	if x.xMarshal == 0 {
 		return nil
 	}
diff --git a/v4/gobject/gobject.go b/v4/gobject/gobject.go
index ca076c949fe3a61db2e50e160234e07700155c20..24a4452220dedfec874d1410b9316bcf8012d2a0 100644
--- a/v4/gobject/gobject.go
+++ b/v4/gobject/gobject.go
@@ -72,8 +72,8 @@ func (x *InitiallyUnownedClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackConstructor sets the callback function.
-func (x *InitiallyUnownedClass) SetCallbackConstructor(cb func(types.GType, uint, *ObjectConstructParam) *Object) {
+// OverrideConstructor sets the callback function.
+func (x *InitiallyUnownedClass) OverrideConstructor(cb func(types.GType, uint, *ObjectConstructParam) *Object) {
 	if cb == nil {
 		x.xConstructor = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackConstructor gets the callback function.
-func (x *InitiallyUnownedClass) GetCallbackConstructor() func(types.GType, uint, *ObjectConstructParam) *Object {
+// GetConstructor gets the callback function.
+func (x *InitiallyUnownedClass) GetConstructor() func(types.GType, uint, *ObjectConstructParam) *Object {
 	if x.xConstructor == 0 {
 		return nil
 	}
@@ -105,8 +105,8 @@ 		return ret
 	}
 }
 
-// SetCallbackSetProperty sets the callback function.
-func (x *InitiallyUnownedClass) SetCallbackSetProperty(cb func(*Object, uint, *Value, *ParamSpec)) {
+// OverrideSetProperty sets the callback function.
+func (x *InitiallyUnownedClass) OverrideSetProperty(cb func(*Object, uint, *Value, *ParamSpec)) {
 	if cb == nil {
 		x.xSetProperty = 0
 	} else {
@@ -116,8 +116,8 @@ 		})
 	}
 }
 
-// GetCallbackSetProperty gets the callback function.
-func (x *InitiallyUnownedClass) GetCallbackSetProperty() func(*Object, uint, *Value, *ParamSpec) {
+// GetSetProperty gets the callback function.
+func (x *InitiallyUnownedClass) GetSetProperty() func(*Object, uint, *Value, *ParamSpec) {
 	if x.xSetProperty == 0 {
 		return nil
 	}
@@ -128,8 +128,8 @@ 		rawCallback(ObjectVar.GoPointer(), PropertyIdVar, ValueVar, PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackGetProperty sets the callback function.
-func (x *InitiallyUnownedClass) SetCallbackGetProperty(cb func(*Object, uint, *Value, *ParamSpec)) {
+// OverrideGetProperty sets the callback function.
+func (x *InitiallyUnownedClass) OverrideGetProperty(cb func(*Object, uint, *Value, *ParamSpec)) {
 	if cb == nil {
 		x.xGetProperty = 0
 	} else {
@@ -139,8 +139,8 @@ 		})
 	}
 }
 
-// GetCallbackGetProperty gets the callback function.
-func (x *InitiallyUnownedClass) GetCallbackGetProperty() func(*Object, uint, *Value, *ParamSpec) {
+// GetGetProperty gets the callback function.
+func (x *InitiallyUnownedClass) GetGetProperty() func(*Object, uint, *Value, *ParamSpec) {
 	if x.xGetProperty == 0 {
 		return nil
 	}
@@ -151,8 +151,8 @@ 		rawCallback(ObjectVar.GoPointer(), PropertyIdVar, ValueVar, PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackDispose sets the callback function.
-func (x *InitiallyUnownedClass) SetCallbackDispose(cb func(*Object)) {
+// OverrideDispose sets the callback function.
+func (x *InitiallyUnownedClass) OverrideDispose(cb func(*Object)) {
 	if cb == nil {
 		x.xDispose = 0
 	} else {
@@ -162,8 +162,8 @@ 		})
 	}
 }
 
-// GetCallbackDispose gets the callback function.
-func (x *InitiallyUnownedClass) GetCallbackDispose() func(*Object) {
+// GetDispose gets the callback function.
+func (x *InitiallyUnownedClass) GetDispose() func(*Object) {
 	if x.xDispose == 0 {
 		return nil
 	}
@@ -174,8 +174,8 @@ 		rawCallback(ObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackFinalize sets the callback function.
-func (x *InitiallyUnownedClass) SetCallbackFinalize(cb func(*Object)) {
+// OverrideFinalize sets the callback function.
+func (x *InitiallyUnownedClass) OverrideFinalize(cb func(*Object)) {
 	if cb == nil {
 		x.xFinalize = 0
 	} else {
@@ -185,8 +185,8 @@ 		})
 	}
 }
 
-// GetCallbackFinalize gets the callback function.
-func (x *InitiallyUnownedClass) GetCallbackFinalize() func(*Object) {
+// GetFinalize gets the callback function.
+func (x *InitiallyUnownedClass) GetFinalize() func(*Object) {
 	if x.xFinalize == 0 {
 		return nil
 	}
@@ -197,8 +197,8 @@ 		rawCallback(ObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackDispatchPropertiesChanged sets the callback function.
-func (x *InitiallyUnownedClass) SetCallbackDispatchPropertiesChanged(cb func(*Object, uint, **ParamSpec)) {
+// OverrideDispatchPropertiesChanged sets the callback function.
+func (x *InitiallyUnownedClass) OverrideDispatchPropertiesChanged(cb func(*Object, uint, **ParamSpec)) {
 	if cb == nil {
 		x.xDispatchPropertiesChanged = 0
 	} else {
@@ -208,8 +208,8 @@ 		})
 	}
 }
 
-// GetCallbackDispatchPropertiesChanged gets the callback function.
-func (x *InitiallyUnownedClass) GetCallbackDispatchPropertiesChanged() func(*Object, uint, **ParamSpec) {
+// GetDispatchPropertiesChanged gets the callback function.
+func (x *InitiallyUnownedClass) GetDispatchPropertiesChanged() func(*Object, uint, **ParamSpec) {
 	if x.xDispatchPropertiesChanged == 0 {
 		return nil
 	}
@@ -220,8 +220,8 @@ 		rawCallback(ObjectVar.GoPointer(), NPspecsVar, *ConvertPtr(PspecsVar))
 	}
 }
 
-// SetCallbackNotify sets the callback function.
-func (x *InitiallyUnownedClass) SetCallbackNotify(cb func(*Object, *ParamSpec)) {
+// OverrideNotify sets the callback function.
+func (x *InitiallyUnownedClass) OverrideNotify(cb func(*Object, *ParamSpec)) {
 	if cb == nil {
 		x.xNotify = 0
 	} else {
@@ -231,8 +231,8 @@ 		})
 	}
 }
 
-// GetCallbackNotify gets the callback function.
-func (x *InitiallyUnownedClass) GetCallbackNotify() func(*Object, *ParamSpec) {
+// GetNotify gets the callback function.
+func (x *InitiallyUnownedClass) GetNotify() func(*Object, *ParamSpec) {
 	if x.xNotify == 0 {
 		return nil
 	}
@@ -243,8 +243,8 @@ 		rawCallback(ObjectVar.GoPointer(), PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackConstructed sets the callback function.
-func (x *InitiallyUnownedClass) SetCallbackConstructed(cb func(*Object)) {
+// OverrideConstructed sets the callback function.
+func (x *InitiallyUnownedClass) OverrideConstructed(cb func(*Object)) {
 	if cb == nil {
 		x.xConstructed = 0
 	} else {
@@ -254,8 +254,8 @@ 		})
 	}
 }
 
-// GetCallbackConstructed gets the callback function.
-func (x *InitiallyUnownedClass) GetCallbackConstructed() func(*Object) {
+// GetConstructed gets the callback function.
+func (x *InitiallyUnownedClass) GetConstructed() func(*Object) {
 	if x.xConstructed == 0 {
 		return nil
 	}
@@ -469,8 +469,8 @@ 	xObjectClassOverrideProperty(x.GoPointer(), PropertyIdVar, NameVar)
 
 }
 
-// SetCallbackConstructor sets the callback function.
-func (x *ObjectClass) SetCallbackConstructor(cb func(types.GType, uint, *ObjectConstructParam) *Object) {
+// OverrideConstructor sets the callback function.
+func (x *ObjectClass) OverrideConstructor(cb func(types.GType, uint, *ObjectConstructParam) *Object) {
 	if cb == nil {
 		x.xConstructor = 0
 	} else {
@@ -484,8 +484,8 @@ 		})
 	}
 }
 
-// GetCallbackConstructor gets the callback function.
-func (x *ObjectClass) GetCallbackConstructor() func(types.GType, uint, *ObjectConstructParam) *Object {
+// GetConstructor gets the callback function.
+func (x *ObjectClass) GetConstructor() func(types.GType, uint, *ObjectConstructParam) *Object {
 	if x.xConstructor == 0 {
 		return nil
 	}
@@ -502,9 +502,9 @@ 		return ret
 	}
 }
 
-// SetCallbackSetProperty sets the callback function.
+// OverrideSetProperty sets the callback function.
 // The type of the @set_property function of #GObjectClass.
-func (x *ObjectClass) SetCallbackSetProperty(cb func(*Object, uint, *Value, *ParamSpec)) {
+func (x *ObjectClass) OverrideSetProperty(cb func(*Object, uint, *Value, *ParamSpec)) {
 	if cb == nil {
 		x.xSetProperty = 0
 	} else {
@@ -514,9 +514,9 @@ 		})
 	}
 }
 
-// GetCallbackSetProperty gets the callback function.
+// GetSetProperty gets the callback function.
 // The type of the @set_property function of #GObjectClass.
-func (x *ObjectClass) GetCallbackSetProperty() func(*Object, uint, *Value, *ParamSpec) {
+func (x *ObjectClass) GetSetProperty() func(*Object, uint, *Value, *ParamSpec) {
 	if x.xSetProperty == 0 {
 		return nil
 	}
@@ -527,9 +527,9 @@ 		rawCallback(ObjectVar.GoPointer(), PropertyIdVar, ValueVar, PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackGetProperty sets the callback function.
+// OverrideGetProperty sets the callback function.
 // The type of the @get_property function of #GObjectClass.
-func (x *ObjectClass) SetCallbackGetProperty(cb func(*Object, uint, *Value, *ParamSpec)) {
+func (x *ObjectClass) OverrideGetProperty(cb func(*Object, uint, *Value, *ParamSpec)) {
 	if cb == nil {
 		x.xGetProperty = 0
 	} else {
@@ -539,9 +539,9 @@ 		})
 	}
 }
 
-// GetCallbackGetProperty gets the callback function.
+// GetGetProperty gets the callback function.
 // The type of the @get_property function of #GObjectClass.
-func (x *ObjectClass) GetCallbackGetProperty() func(*Object, uint, *Value, *ParamSpec) {
+func (x *ObjectClass) GetGetProperty() func(*Object, uint, *Value, *ParamSpec) {
 	if x.xGetProperty == 0 {
 		return nil
 	}
@@ -552,8 +552,8 @@ 		rawCallback(ObjectVar.GoPointer(), PropertyIdVar, ValueVar, PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackDispose sets the callback function.
-func (x *ObjectClass) SetCallbackDispose(cb func(*Object)) {
+// OverrideDispose sets the callback function.
+func (x *ObjectClass) OverrideDispose(cb func(*Object)) {
 	if cb == nil {
 		x.xDispose = 0
 	} else {
@@ -563,8 +563,8 @@ 		})
 	}
 }
 
-// GetCallbackDispose gets the callback function.
-func (x *ObjectClass) GetCallbackDispose() func(*Object) {
+// GetDispose gets the callback function.
+func (x *ObjectClass) GetDispose() func(*Object) {
 	if x.xDispose == 0 {
 		return nil
 	}
@@ -575,9 +575,9 @@ 		rawCallback(ObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackFinalize sets the callback function.
+// OverrideFinalize sets the callback function.
 // The type of the @finalize function of #GObjectClass.
-func (x *ObjectClass) SetCallbackFinalize(cb func(*Object)) {
+func (x *ObjectClass) OverrideFinalize(cb func(*Object)) {
 	if cb == nil {
 		x.xFinalize = 0
 	} else {
@@ -587,9 +587,9 @@ 		})
 	}
 }
 
-// GetCallbackFinalize gets the callback function.
+// GetFinalize gets the callback function.
 // The type of the @finalize function of #GObjectClass.
-func (x *ObjectClass) GetCallbackFinalize() func(*Object) {
+func (x *ObjectClass) GetFinalize() func(*Object) {
 	if x.xFinalize == 0 {
 		return nil
 	}
@@ -600,8 +600,8 @@ 		rawCallback(ObjectVar.GoPointer())
 	}
 }
 
-// SetCallbackDispatchPropertiesChanged sets the callback function.
-func (x *ObjectClass) SetCallbackDispatchPropertiesChanged(cb func(*Object, uint, **ParamSpec)) {
+// OverrideDispatchPropertiesChanged sets the callback function.
+func (x *ObjectClass) OverrideDispatchPropertiesChanged(cb func(*Object, uint, **ParamSpec)) {
 	if cb == nil {
 		x.xDispatchPropertiesChanged = 0
 	} else {
@@ -611,8 +611,8 @@ 		})
 	}
 }
 
-// GetCallbackDispatchPropertiesChanged gets the callback function.
-func (x *ObjectClass) GetCallbackDispatchPropertiesChanged() func(*Object, uint, **ParamSpec) {
+// GetDispatchPropertiesChanged gets the callback function.
+func (x *ObjectClass) GetDispatchPropertiesChanged() func(*Object, uint, **ParamSpec) {
 	if x.xDispatchPropertiesChanged == 0 {
 		return nil
 	}
@@ -623,8 +623,8 @@ 		rawCallback(ObjectVar.GoPointer(), NPspecsVar, *ConvertPtr(PspecsVar))
 	}
 }
 
-// SetCallbackNotify sets the callback function.
-func (x *ObjectClass) SetCallbackNotify(cb func(*Object, *ParamSpec)) {
+// OverrideNotify sets the callback function.
+func (x *ObjectClass) OverrideNotify(cb func(*Object, *ParamSpec)) {
 	if cb == nil {
 		x.xNotify = 0
 	} else {
@@ -634,8 +634,8 @@ 		})
 	}
 }
 
-// GetCallbackNotify gets the callback function.
-func (x *ObjectClass) GetCallbackNotify() func(*Object, *ParamSpec) {
+// GetNotify gets the callback function.
+func (x *ObjectClass) GetNotify() func(*Object, *ParamSpec) {
 	if x.xNotify == 0 {
 		return nil
 	}
@@ -646,8 +646,8 @@ 		rawCallback(ObjectVar.GoPointer(), PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackConstructed sets the callback function.
-func (x *ObjectClass) SetCallbackConstructed(cb func(*Object)) {
+// OverrideConstructed sets the callback function.
+func (x *ObjectClass) OverrideConstructed(cb func(*Object)) {
 	if cb == nil {
 		x.xConstructed = 0
 	} else {
@@ -657,8 +657,8 @@ 		})
 	}
 }
 
-// GetCallbackConstructed gets the callback function.
-func (x *ObjectClass) GetCallbackConstructed() func(*Object) {
+// GetConstructed gets the callback function.
+func (x *ObjectClass) GetConstructed() func(*Object) {
 	if x.xConstructed == 0 {
 		return nil
 	}
diff --git a/v4/gobject/gparam.go b/v4/gobject/gparam.go
index 64c697a9eb4bdafc2b06f4ccd366e41e3b45d25d..a4cd9a0f6870d54676b94a1f556de3244d25fea5 100644
--- a/v4/gobject/gparam.go
+++ b/v4/gobject/gparam.go
@@ -36,8 +36,8 @@ func (x *ParamSpecClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackFinalize sets the callback function.
-func (x *ParamSpecClass) SetCallbackFinalize(cb func(*ParamSpec)) {
+// OverrideFinalize sets the callback function.
+func (x *ParamSpecClass) OverrideFinalize(cb func(*ParamSpec)) {
 	if cb == nil {
 		x.xFinalize = 0
 	} else {
@@ -47,8 +47,8 @@ 		})
 	}
 }
 
-// GetCallbackFinalize gets the callback function.
-func (x *ParamSpecClass) GetCallbackFinalize() func(*ParamSpec) {
+// GetFinalize gets the callback function.
+func (x *ParamSpecClass) GetFinalize() func(*ParamSpec) {
 	if x.xFinalize == 0 {
 		return nil
 	}
@@ -59,8 +59,8 @@ 		rawCallback(PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackValueSetDefault sets the callback function.
-func (x *ParamSpecClass) SetCallbackValueSetDefault(cb func(*ParamSpec, *Value)) {
+// OverrideValueSetDefault sets the callback function.
+func (x *ParamSpecClass) OverrideValueSetDefault(cb func(*ParamSpec, *Value)) {
 	if cb == nil {
 		x.xValueSetDefault = 0
 	} else {
@@ -70,8 +70,8 @@ 		})
 	}
 }
 
-// GetCallbackValueSetDefault gets the callback function.
-func (x *ParamSpecClass) GetCallbackValueSetDefault() func(*ParamSpec, *Value) {
+// GetValueSetDefault gets the callback function.
+func (x *ParamSpecClass) GetValueSetDefault() func(*ParamSpec, *Value) {
 	if x.xValueSetDefault == 0 {
 		return nil
 	}
@@ -82,8 +82,8 @@ 		rawCallback(PspecVar.GoPointer(), ValueVar)
 	}
 }
 
-// SetCallbackValueValidate sets the callback function.
-func (x *ParamSpecClass) SetCallbackValueValidate(cb func(*ParamSpec, *Value) bool) {
+// OverrideValueValidate sets the callback function.
+func (x *ParamSpecClass) OverrideValueValidate(cb func(*ParamSpec, *Value) bool) {
 	if cb == nil {
 		x.xValueValidate = 0
 	} else {
@@ -93,8 +93,8 @@ 		})
 	}
 }
 
-// GetCallbackValueValidate gets the callback function.
-func (x *ParamSpecClass) GetCallbackValueValidate() func(*ParamSpec, *Value) bool {
+// GetValueValidate gets the callback function.
+func (x *ParamSpecClass) GetValueValidate() func(*ParamSpec, *Value) bool {
 	if x.xValueValidate == 0 {
 		return nil
 	}
@@ -105,8 +105,8 @@ 		return rawCallback(PspecVar.GoPointer(), ValueVar)
 	}
 }
 
-// SetCallbackValuesCmp sets the callback function.
-func (x *ParamSpecClass) SetCallbackValuesCmp(cb func(*ParamSpec, *Value, *Value) int) {
+// OverrideValuesCmp sets the callback function.
+func (x *ParamSpecClass) OverrideValuesCmp(cb func(*ParamSpec, *Value, *Value) int) {
 	if cb == nil {
 		x.xValuesCmp = 0
 	} else {
@@ -116,8 +116,8 @@ 		})
 	}
 }
 
-// GetCallbackValuesCmp gets the callback function.
-func (x *ParamSpecClass) GetCallbackValuesCmp() func(*ParamSpec, *Value, *Value) int {
+// GetValuesCmp gets the callback function.
+func (x *ParamSpecClass) GetValuesCmp() func(*ParamSpec, *Value, *Value) int {
 	if x.xValuesCmp == 0 {
 		return nil
 	}
@@ -228,8 +228,8 @@ func (x *ParamSpecTypeInfo) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackInstanceInit sets the callback function.
-func (x *ParamSpecTypeInfo) SetCallbackInstanceInit(cb func(*ParamSpec)) {
+// OverrideInstanceInit sets the callback function.
+func (x *ParamSpecTypeInfo) OverrideInstanceInit(cb func(*ParamSpec)) {
 	if cb == nil {
 		x.xInstanceInit = 0
 	} else {
@@ -239,8 +239,8 @@ 		})
 	}
 }
 
-// GetCallbackInstanceInit gets the callback function.
-func (x *ParamSpecTypeInfo) GetCallbackInstanceInit() func(*ParamSpec) {
+// GetInstanceInit gets the callback function.
+func (x *ParamSpecTypeInfo) GetInstanceInit() func(*ParamSpec) {
 	if x.xInstanceInit == 0 {
 		return nil
 	}
@@ -251,8 +251,8 @@ 		rawCallback(PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackFinalize sets the callback function.
-func (x *ParamSpecTypeInfo) SetCallbackFinalize(cb func(*ParamSpec)) {
+// OverrideFinalize sets the callback function.
+func (x *ParamSpecTypeInfo) OverrideFinalize(cb func(*ParamSpec)) {
 	if cb == nil {
 		x.xFinalize = 0
 	} else {
@@ -262,8 +262,8 @@ 		})
 	}
 }
 
-// GetCallbackFinalize gets the callback function.
-func (x *ParamSpecTypeInfo) GetCallbackFinalize() func(*ParamSpec) {
+// GetFinalize gets the callback function.
+func (x *ParamSpecTypeInfo) GetFinalize() func(*ParamSpec) {
 	if x.xFinalize == 0 {
 		return nil
 	}
@@ -274,8 +274,8 @@ 		rawCallback(PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackValueSetDefault sets the callback function.
-func (x *ParamSpecTypeInfo) SetCallbackValueSetDefault(cb func(*ParamSpec, *Value)) {
+// OverrideValueSetDefault sets the callback function.
+func (x *ParamSpecTypeInfo) OverrideValueSetDefault(cb func(*ParamSpec, *Value)) {
 	if cb == nil {
 		x.xValueSetDefault = 0
 	} else {
@@ -285,8 +285,8 @@ 		})
 	}
 }
 
-// GetCallbackValueSetDefault gets the callback function.
-func (x *ParamSpecTypeInfo) GetCallbackValueSetDefault() func(*ParamSpec, *Value) {
+// GetValueSetDefault gets the callback function.
+func (x *ParamSpecTypeInfo) GetValueSetDefault() func(*ParamSpec, *Value) {
 	if x.xValueSetDefault == 0 {
 		return nil
 	}
@@ -297,8 +297,8 @@ 		rawCallback(PspecVar.GoPointer(), ValueVar)
 	}
 }
 
-// SetCallbackValueValidate sets the callback function.
-func (x *ParamSpecTypeInfo) SetCallbackValueValidate(cb func(*ParamSpec, *Value) bool) {
+// OverrideValueValidate sets the callback function.
+func (x *ParamSpecTypeInfo) OverrideValueValidate(cb func(*ParamSpec, *Value) bool) {
 	if cb == nil {
 		x.xValueValidate = 0
 	} else {
@@ -308,8 +308,8 @@ 		})
 	}
 }
 
-// GetCallbackValueValidate gets the callback function.
-func (x *ParamSpecTypeInfo) GetCallbackValueValidate() func(*ParamSpec, *Value) bool {
+// GetValueValidate gets the callback function.
+func (x *ParamSpecTypeInfo) GetValueValidate() func(*ParamSpec, *Value) bool {
 	if x.xValueValidate == 0 {
 		return nil
 	}
@@ -320,8 +320,8 @@ 		return rawCallback(PspecVar.GoPointer(), ValueVar)
 	}
 }
 
-// SetCallbackValuesCmp sets the callback function.
-func (x *ParamSpecTypeInfo) SetCallbackValuesCmp(cb func(*ParamSpec, *Value, *Value) int) {
+// OverrideValuesCmp sets the callback function.
+func (x *ParamSpecTypeInfo) OverrideValuesCmp(cb func(*ParamSpec, *Value, *Value) int) {
 	if cb == nil {
 		x.xValuesCmp = 0
 	} else {
@@ -331,8 +331,8 @@ 		})
 	}
 }
 
-// GetCallbackValuesCmp gets the callback function.
-func (x *ParamSpecTypeInfo) GetCallbackValuesCmp() func(*ParamSpec, *Value, *Value) int {
+// GetValuesCmp gets the callback function.
+func (x *ParamSpecTypeInfo) GetValuesCmp() func(*ParamSpec, *Value, *Value) int {
 	if x.xValuesCmp == 0 {
 		return nil
 	}
diff --git a/v4/gobject/gtype.go b/v4/gobject/gtype.go
index 6fa2e55bb731e670f9836bd4203bdc542746c2bc..35a2c2dc0351b1292814247784d4a93bcaaaff8f 100644
--- a/v4/gobject/gtype.go
+++ b/v4/gobject/gtype.go
@@ -509,8 +509,8 @@ func (x *TypeValueTable) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackValueInit sets the callback function.
-func (x *TypeValueTable) SetCallbackValueInit(cb func(*Value)) {
+// OverrideValueInit sets the callback function.
+func (x *TypeValueTable) OverrideValueInit(cb func(*Value)) {
 	if cb == nil {
 		x.xValueInit = 0
 	} else {
@@ -520,8 +520,8 @@ 		})
 	}
 }
 
-// GetCallbackValueInit gets the callback function.
-func (x *TypeValueTable) GetCallbackValueInit() func(*Value) {
+// GetValueInit gets the callback function.
+func (x *TypeValueTable) GetValueInit() func(*Value) {
 	if x.xValueInit == 0 {
 		return nil
 	}
@@ -532,8 +532,8 @@ 		rawCallback(ValueVar)
 	}
 }
 
-// SetCallbackValueFree sets the callback function.
-func (x *TypeValueTable) SetCallbackValueFree(cb func(*Value)) {
+// OverrideValueFree sets the callback function.
+func (x *TypeValueTable) OverrideValueFree(cb func(*Value)) {
 	if cb == nil {
 		x.xValueFree = 0
 	} else {
@@ -543,8 +543,8 @@ 		})
 	}
 }
 
-// GetCallbackValueFree gets the callback function.
-func (x *TypeValueTable) GetCallbackValueFree() func(*Value) {
+// GetValueFree gets the callback function.
+func (x *TypeValueTable) GetValueFree() func(*Value) {
 	if x.xValueFree == 0 {
 		return nil
 	}
@@ -555,8 +555,8 @@ 		rawCallback(ValueVar)
 	}
 }
 
-// SetCallbackValueCopy sets the callback function.
-func (x *TypeValueTable) SetCallbackValueCopy(cb func(*Value, *Value)) {
+// OverrideValueCopy sets the callback function.
+func (x *TypeValueTable) OverrideValueCopy(cb func(*Value, *Value)) {
 	if cb == nil {
 		x.xValueCopy = 0
 	} else {
@@ -566,8 +566,8 @@ 		})
 	}
 }
 
-// GetCallbackValueCopy gets the callback function.
-func (x *TypeValueTable) GetCallbackValueCopy() func(*Value, *Value) {
+// GetValueCopy gets the callback function.
+func (x *TypeValueTable) GetValueCopy() func(*Value, *Value) {
 	if x.xValueCopy == 0 {
 		return nil
 	}
@@ -578,8 +578,8 @@ 		rawCallback(SrcValueVar, DestValueVar)
 	}
 }
 
-// SetCallbackValuePeekPointer sets the callback function.
-func (x *TypeValueTable) SetCallbackValuePeekPointer(cb func(*Value) uintptr) {
+// OverrideValuePeekPointer sets the callback function.
+func (x *TypeValueTable) OverrideValuePeekPointer(cb func(*Value) uintptr) {
 	if cb == nil {
 		x.xValuePeekPointer = 0
 	} else {
@@ -589,8 +589,8 @@ 		})
 	}
 }
 
-// GetCallbackValuePeekPointer gets the callback function.
-func (x *TypeValueTable) GetCallbackValuePeekPointer() func(*Value) uintptr {
+// GetValuePeekPointer gets the callback function.
+func (x *TypeValueTable) GetValuePeekPointer() func(*Value) uintptr {
 	if x.xValuePeekPointer == 0 {
 		return nil
 	}
@@ -601,8 +601,8 @@ 		return rawCallback(ValueVar)
 	}
 }
 
-// SetCallbackCollectValue sets the callback function.
-func (x *TypeValueTable) SetCallbackCollectValue(cb func(*Value, uint, *TypeCValue, uint) string) {
+// OverrideCollectValue sets the callback function.
+func (x *TypeValueTable) OverrideCollectValue(cb func(*Value, uint, *TypeCValue, uint) string) {
 	if cb == nil {
 		x.xCollectValue = 0
 	} else {
@@ -612,8 +612,8 @@ 		})
 	}
 }
 
-// GetCallbackCollectValue gets the callback function.
-func (x *TypeValueTable) GetCallbackCollectValue() func(*Value, uint, *TypeCValue, uint) string {
+// GetCollectValue gets the callback function.
+func (x *TypeValueTable) GetCollectValue() func(*Value, uint, *TypeCValue, uint) string {
 	if x.xCollectValue == 0 {
 		return nil
 	}
@@ -624,8 +624,8 @@ 		return rawCallback(ValueVar, NCollectValuesVar, CollectValuesVar, CollectFlagsVar)
 	}
 }
 
-// SetCallbackLcopyValue sets the callback function.
-func (x *TypeValueTable) SetCallbackLcopyValue(cb func(*Value, uint, *TypeCValue, uint) string) {
+// OverrideLcopyValue sets the callback function.
+func (x *TypeValueTable) OverrideLcopyValue(cb func(*Value, uint, *TypeCValue, uint) string) {
 	if cb == nil {
 		x.xLcopyValue = 0
 	} else {
@@ -635,8 +635,8 @@ 		})
 	}
 }
 
-// GetCallbackLcopyValue gets the callback function.
-func (x *TypeValueTable) GetCallbackLcopyValue() func(*Value, uint, *TypeCValue, uint) string {
+// GetLcopyValue gets the callback function.
+func (x *TypeValueTable) GetLcopyValue() func(*Value, uint, *TypeCValue, uint) string {
 	if x.xLcopyValue == 0 {
 		return nil
 	}
diff --git a/v4/gobject/gtypemodule.go b/v4/gobject/gtypemodule.go
index 02ba0b63f392ef1126b51e02e2faad83f682df6d..513f1a9185de8fe7238ecec08a5fd34d06b30401 100644
--- a/v4/gobject/gtypemodule.go
+++ b/v4/gobject/gtypemodule.go
@@ -34,8 +34,8 @@ func (x *TypeModuleClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackLoad sets the callback function.
-func (x *TypeModuleClass) SetCallbackLoad(cb func(*TypeModule) bool) {
+// OverrideLoad sets the callback function.
+func (x *TypeModuleClass) OverrideLoad(cb func(*TypeModule) bool) {
 	if cb == nil {
 		x.xLoad = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackLoad gets the callback function.
-func (x *TypeModuleClass) GetCallbackLoad() func(*TypeModule) bool {
+// GetLoad gets the callback function.
+func (x *TypeModuleClass) GetLoad() func(*TypeModule) bool {
 	if x.xLoad == 0 {
 		return nil
 	}
@@ -57,8 +57,8 @@ 		return rawCallback(ModuleVar.GoPointer())
 	}
 }
 
-// SetCallbackUnload sets the callback function.
-func (x *TypeModuleClass) SetCallbackUnload(cb func(*TypeModule)) {
+// OverrideUnload sets the callback function.
+func (x *TypeModuleClass) OverrideUnload(cb func(*TypeModule)) {
 	if cb == nil {
 		x.xUnload = 0
 	} else {
@@ -68,8 +68,8 @@ 		})
 	}
 }
 
-// GetCallbackUnload gets the callback function.
-func (x *TypeModuleClass) GetCallbackUnload() func(*TypeModule) {
+// GetUnload gets the callback function.
+func (x *TypeModuleClass) GetUnload() func(*TypeModule) {
 	if x.xUnload == 0 {
 		return nil
 	}
@@ -80,8 +80,8 @@ 		rawCallback(ModuleVar.GoPointer())
 	}
 }
 
-// SetCallbackReserved1 sets the callback function.
-func (x *TypeModuleClass) SetCallbackReserved1(cb func()) {
+// OverrideReserved1 sets the callback function.
+func (x *TypeModuleClass) OverrideReserved1(cb func()) {
 	if cb == nil {
 		x.xReserved1 = 0
 	} else {
@@ -91,8 +91,8 @@ 		})
 	}
 }
 
-// GetCallbackReserved1 gets the callback function.
-func (x *TypeModuleClass) GetCallbackReserved1() func() {
+// GetReserved1 gets the callback function.
+func (x *TypeModuleClass) GetReserved1() func() {
 	if x.xReserved1 == 0 {
 		return nil
 	}
@@ -103,8 +103,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackReserved2 sets the callback function.
-func (x *TypeModuleClass) SetCallbackReserved2(cb func()) {
+// OverrideReserved2 sets the callback function.
+func (x *TypeModuleClass) OverrideReserved2(cb func()) {
 	if cb == nil {
 		x.xReserved2 = 0
 	} else {
@@ -114,8 +114,8 @@ 		})
 	}
 }
 
-// GetCallbackReserved2 gets the callback function.
-func (x *TypeModuleClass) GetCallbackReserved2() func() {
+// GetReserved2 gets the callback function.
+func (x *TypeModuleClass) GetReserved2() func() {
 	if x.xReserved2 == 0 {
 		return nil
 	}
@@ -126,8 +126,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackReserved3 sets the callback function.
-func (x *TypeModuleClass) SetCallbackReserved3(cb func()) {
+// OverrideReserved3 sets the callback function.
+func (x *TypeModuleClass) OverrideReserved3(cb func()) {
 	if cb == nil {
 		x.xReserved3 = 0
 	} else {
@@ -137,8 +137,8 @@ 		})
 	}
 }
 
-// GetCallbackReserved3 gets the callback function.
-func (x *TypeModuleClass) GetCallbackReserved3() func() {
+// GetReserved3 gets the callback function.
+func (x *TypeModuleClass) GetReserved3() func() {
 	if x.xReserved3 == 0 {
 		return nil
 	}
@@ -149,8 +149,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackReserved4 sets the callback function.
-func (x *TypeModuleClass) SetCallbackReserved4(cb func()) {
+// OverrideReserved4 sets the callback function.
+func (x *TypeModuleClass) OverrideReserved4(cb func()) {
 	if cb == nil {
 		x.xReserved4 = 0
 	} else {
@@ -160,8 +160,8 @@ 		})
 	}
 }
 
-// GetCallbackReserved4 gets the callback function.
-func (x *TypeModuleClass) GetCallbackReserved4() func() {
+// GetReserved4 gets the callback function.
+func (x *TypeModuleClass) GetReserved4() func() {
 	if x.xReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkactionable.go b/v4/gtk/gtkactionable.go
index 58cf00c25b8591b1f9c43a194c714089fd68d6eb..08e22b7f0d9865660e16ecc7a41ed3c5959be199 100644
--- a/v4/gtk/gtkactionable.go
+++ b/v4/gtk/gtkactionable.go
@@ -30,8 +30,8 @@ func (x *ActionableInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetActionName sets the callback function.
-func (x *ActionableInterface) SetCallbackGetActionName(cb func(Actionable) string) {
+// OverrideGetActionName sets the callback function.
+func (x *ActionableInterface) OverrideGetActionName(cb func(Actionable) string) {
 	if cb == nil {
 		x.xGetActionName = 0
 	} else {
@@ -41,8 +41,8 @@ 		})
 	}
 }
 
-// GetCallbackGetActionName gets the callback function.
-func (x *ActionableInterface) GetCallbackGetActionName() func(Actionable) string {
+// GetGetActionName gets the callback function.
+func (x *ActionableInterface) GetGetActionName() func(Actionable) string {
 	if x.xGetActionName == 0 {
 		return nil
 	}
@@ -53,8 +53,8 @@ 		return rawCallback(ActionableVar.GoPointer())
 	}
 }
 
-// SetCallbackSetActionName sets the callback function.
-func (x *ActionableInterface) SetCallbackSetActionName(cb func(Actionable, string)) {
+// OverrideSetActionName sets the callback function.
+func (x *ActionableInterface) OverrideSetActionName(cb func(Actionable, string)) {
 	if cb == nil {
 		x.xSetActionName = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackSetActionName gets the callback function.
-func (x *ActionableInterface) GetCallbackSetActionName() func(Actionable, string) {
+// GetSetActionName gets the callback function.
+func (x *ActionableInterface) GetSetActionName() func(Actionable, string) {
 	if x.xSetActionName == 0 {
 		return nil
 	}
@@ -76,8 +76,8 @@ 		rawCallback(ActionableVar.GoPointer(), ActionNameVar)
 	}
 }
 
-// SetCallbackGetActionTargetValue sets the callback function.
-func (x *ActionableInterface) SetCallbackGetActionTargetValue(cb func(Actionable) *glib.Variant) {
+// OverrideGetActionTargetValue sets the callback function.
+func (x *ActionableInterface) OverrideGetActionTargetValue(cb func(Actionable) *glib.Variant) {
 	if cb == nil {
 		x.xGetActionTargetValue = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackGetActionTargetValue gets the callback function.
-func (x *ActionableInterface) GetCallbackGetActionTargetValue() func(Actionable) *glib.Variant {
+// GetGetActionTargetValue gets the callback function.
+func (x *ActionableInterface) GetGetActionTargetValue() func(Actionable) *glib.Variant {
 	if x.xGetActionTargetValue == 0 {
 		return nil
 	}
@@ -99,8 +99,8 @@ 		return rawCallback(ActionableVar.GoPointer())
 	}
 }
 
-// SetCallbackSetActionTargetValue sets the callback function.
-func (x *ActionableInterface) SetCallbackSetActionTargetValue(cb func(Actionable, *glib.Variant)) {
+// OverrideSetActionTargetValue sets the callback function.
+func (x *ActionableInterface) OverrideSetActionTargetValue(cb func(Actionable, *glib.Variant)) {
 	if cb == nil {
 		x.xSetActionTargetValue = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackSetActionTargetValue gets the callback function.
-func (x *ActionableInterface) GetCallbackSetActionTargetValue() func(Actionable, *glib.Variant) {
+// GetSetActionTargetValue gets the callback function.
+func (x *ActionableInterface) GetSetActionTargetValue() func(Actionable, *glib.Variant) {
 	if x.xSetActionTargetValue == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkadjustment.go b/v4/gtk/gtkadjustment.go
index 15f27c44b4469145fa509e25a1dad4beb4babcc8..b4be4bcbd122f470209333963224be467c9489d7 100644
--- a/v4/gtk/gtkadjustment.go
+++ b/v4/gtk/gtkadjustment.go
@@ -34,8 +34,8 @@ func (x *AdjustmentClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *AdjustmentClass) SetCallbackChanged(cb func(*Adjustment)) {
+// OverrideChanged sets the callback function.
+func (x *AdjustmentClass) OverrideChanged(cb func(*Adjustment)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *AdjustmentClass) GetCallbackChanged() func(*Adjustment) {
+// GetChanged gets the callback function.
+func (x *AdjustmentClass) GetChanged() func(*Adjustment) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -57,8 +57,8 @@ 		rawCallback(AdjustmentVar.GoPointer())
 	}
 }
 
-// SetCallbackValueChanged sets the callback function.
-func (x *AdjustmentClass) SetCallbackValueChanged(cb func(*Adjustment)) {
+// OverrideValueChanged sets the callback function.
+func (x *AdjustmentClass) OverrideValueChanged(cb func(*Adjustment)) {
 	if cb == nil {
 		x.xValueChanged = 0
 	} else {
@@ -68,8 +68,8 @@ 		})
 	}
 }
 
-// GetCallbackValueChanged gets the callback function.
-func (x *AdjustmentClass) GetCallbackValueChanged() func(*Adjustment) {
+// GetValueChanged gets the callback function.
+func (x *AdjustmentClass) GetValueChanged() func(*Adjustment) {
 	if x.xValueChanged == 0 {
 		return nil
 	}
@@ -80,8 +80,8 @@ 		rawCallback(AdjustmentVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *AdjustmentClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *AdjustmentClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -91,8 +91,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *AdjustmentClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *AdjustmentClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -103,8 +103,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *AdjustmentClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *AdjustmentClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -114,8 +114,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *AdjustmentClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *AdjustmentClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -126,8 +126,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *AdjustmentClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *AdjustmentClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -137,8 +137,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *AdjustmentClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *AdjustmentClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -149,8 +149,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *AdjustmentClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *AdjustmentClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -160,8 +160,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *AdjustmentClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *AdjustmentClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkapplication.go b/v4/gtk/gtkapplication.go
index ff67cb930673a01ab7d7f94bd5a53ab3627086e6..e4d92e37cb7b8a413916a16fcd67d29ac21cd14b 100644
--- a/v4/gtk/gtkapplication.go
+++ b/v4/gtk/gtkapplication.go
@@ -29,8 +29,8 @@ func (x *ApplicationClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackWindowAdded sets the callback function.
-func (x *ApplicationClass) SetCallbackWindowAdded(cb func(*Application, *Window)) {
+// OverrideWindowAdded sets the callback function.
+func (x *ApplicationClass) OverrideWindowAdded(cb func(*Application, *Window)) {
 	if cb == nil {
 		x.xWindowAdded = 0
 	} else {
@@ -40,8 +40,8 @@ 		})
 	}
 }
 
-// GetCallbackWindowAdded gets the callback function.
-func (x *ApplicationClass) GetCallbackWindowAdded() func(*Application, *Window) {
+// GetWindowAdded gets the callback function.
+func (x *ApplicationClass) GetWindowAdded() func(*Application, *Window) {
 	if x.xWindowAdded == 0 {
 		return nil
 	}
@@ -52,8 +52,8 @@ 		rawCallback(ApplicationVar.GoPointer(), WindowVar.GoPointer())
 	}
 }
 
-// SetCallbackWindowRemoved sets the callback function.
-func (x *ApplicationClass) SetCallbackWindowRemoved(cb func(*Application, *Window)) {
+// OverrideWindowRemoved sets the callback function.
+func (x *ApplicationClass) OverrideWindowRemoved(cb func(*Application, *Window)) {
 	if cb == nil {
 		x.xWindowRemoved = 0
 	} else {
@@ -63,8 +63,8 @@ 		})
 	}
 }
 
-// GetCallbackWindowRemoved gets the callback function.
-func (x *ApplicationClass) GetCallbackWindowRemoved() func(*Application, *Window) {
+// GetWindowRemoved gets the callback function.
+func (x *ApplicationClass) GetWindowRemoved() func(*Application, *Window) {
 	if x.xWindowRemoved == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkbuildable.go b/v4/gtk/gtkbuildable.go
index bb9034548856869c556def90eb651f5ec7002a57..518a8361bf23189445926add4806aede597af23c 100644
--- a/v4/gtk/gtkbuildable.go
+++ b/v4/gtk/gtkbuildable.go
@@ -45,8 +45,8 @@ func (x *BuildableIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackSetId sets the callback function.
-func (x *BuildableIface) SetCallbackSetId(cb func(Buildable, string)) {
+// OverrideSetId sets the callback function.
+func (x *BuildableIface) OverrideSetId(cb func(Buildable, string)) {
 	if cb == nil {
 		x.xSetId = 0
 	} else {
@@ -56,8 +56,8 @@ 		})
 	}
 }
 
-// GetCallbackSetId gets the callback function.
-func (x *BuildableIface) GetCallbackSetId() func(Buildable, string) {
+// GetSetId gets the callback function.
+func (x *BuildableIface) GetSetId() func(Buildable, string) {
 	if x.xSetId == 0 {
 		return nil
 	}
@@ -68,8 +68,8 @@ 		rawCallback(BuildableVar.GoPointer(), IdVar)
 	}
 }
 
-// SetCallbackGetId sets the callback function.
-func (x *BuildableIface) SetCallbackGetId(cb func(Buildable) string) {
+// OverrideGetId sets the callback function.
+func (x *BuildableIface) OverrideGetId(cb func(Buildable) string) {
 	if cb == nil {
 		x.xGetId = 0
 	} else {
@@ -79,8 +79,8 @@ 		})
 	}
 }
 
-// GetCallbackGetId gets the callback function.
-func (x *BuildableIface) GetCallbackGetId() func(Buildable) string {
+// GetGetId gets the callback function.
+func (x *BuildableIface) GetGetId() func(Buildable) string {
 	if x.xGetId == 0 {
 		return nil
 	}
@@ -91,8 +91,8 @@ 		return rawCallback(BuildableVar.GoPointer())
 	}
 }
 
-// SetCallbackAddChild sets the callback function.
-func (x *BuildableIface) SetCallbackAddChild(cb func(Buildable, *Builder, *gobject.Object, string)) {
+// OverrideAddChild sets the callback function.
+func (x *BuildableIface) OverrideAddChild(cb func(Buildable, *Builder, *gobject.Object, string)) {
 	if cb == nil {
 		x.xAddChild = 0
 	} else {
@@ -102,8 +102,8 @@ 		})
 	}
 }
 
-// GetCallbackAddChild gets the callback function.
-func (x *BuildableIface) GetCallbackAddChild() func(Buildable, *Builder, *gobject.Object, string) {
+// GetAddChild gets the callback function.
+func (x *BuildableIface) GetAddChild() func(Buildable, *Builder, *gobject.Object, string) {
 	if x.xAddChild == 0 {
 		return nil
 	}
@@ -114,8 +114,8 @@ 		rawCallback(BuildableVar.GoPointer(), BuilderVar.GoPointer(), ChildVar.GoPointer(), TypeVar)
 	}
 }
 
-// SetCallbackSetBuildableProperty sets the callback function.
-func (x *BuildableIface) SetCallbackSetBuildableProperty(cb func(Buildable, *Builder, string, *gobject.Value)) {
+// OverrideSetBuildableProperty sets the callback function.
+func (x *BuildableIface) OverrideSetBuildableProperty(cb func(Buildable, *Builder, string, *gobject.Value)) {
 	if cb == nil {
 		x.xSetBuildableProperty = 0
 	} else {
@@ -125,8 +125,8 @@ 		})
 	}
 }
 
-// GetCallbackSetBuildableProperty gets the callback function.
-func (x *BuildableIface) GetCallbackSetBuildableProperty() func(Buildable, *Builder, string, *gobject.Value) {
+// GetSetBuildableProperty gets the callback function.
+func (x *BuildableIface) GetSetBuildableProperty() func(Buildable, *Builder, string, *gobject.Value) {
 	if x.xSetBuildableProperty == 0 {
 		return nil
 	}
@@ -137,8 +137,8 @@ 		rawCallback(BuildableVar.GoPointer(), BuilderVar.GoPointer(), NameVar, ValueVar)
 	}
 }
 
-// SetCallbackConstructChild sets the callback function.
-func (x *BuildableIface) SetCallbackConstructChild(cb func(Buildable, *Builder, string) *gobject.Object) {
+// OverrideConstructChild sets the callback function.
+func (x *BuildableIface) OverrideConstructChild(cb func(Buildable, *Builder, string) *gobject.Object) {
 	if cb == nil {
 		x.xConstructChild = 0
 	} else {
@@ -152,8 +152,8 @@ 		})
 	}
 }
 
-// GetCallbackConstructChild gets the callback function.
-func (x *BuildableIface) GetCallbackConstructChild() func(Buildable, *Builder, string) *gobject.Object {
+// GetConstructChild gets the callback function.
+func (x *BuildableIface) GetConstructChild() func(Buildable, *Builder, string) *gobject.Object {
 	if x.xConstructChild == 0 {
 		return nil
 	}
@@ -170,8 +170,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCustomTagStart sets the callback function.
-func (x *BuildableIface) SetCallbackCustomTagStart(cb func(Buildable, *Builder, *gobject.Object, string, *BuildableParser, uintptr) bool) {
+// OverrideCustomTagStart sets the callback function.
+func (x *BuildableIface) OverrideCustomTagStart(cb func(Buildable, *Builder, *gobject.Object, string, *BuildableParser, uintptr) bool) {
 	if cb == nil {
 		x.xCustomTagStart = 0
 	} else {
@@ -181,8 +181,8 @@ 		})
 	}
 }
 
-// GetCallbackCustomTagStart gets the callback function.
-func (x *BuildableIface) GetCallbackCustomTagStart() func(Buildable, *Builder, *gobject.Object, string, *BuildableParser, uintptr) bool {
+// GetCustomTagStart gets the callback function.
+func (x *BuildableIface) GetCustomTagStart() func(Buildable, *Builder, *gobject.Object, string, *BuildableParser, uintptr) bool {
 	if x.xCustomTagStart == 0 {
 		return nil
 	}
@@ -193,8 +193,8 @@ 		return rawCallback(BuildableVar.GoPointer(), BuilderVar.GoPointer(), ChildVar.GoPointer(), TagnameVar, ParserVar, DataVar)
 	}
 }
 
-// SetCallbackCustomTagEnd sets the callback function.
-func (x *BuildableIface) SetCallbackCustomTagEnd(cb func(Buildable, *Builder, *gobject.Object, string, uintptr)) {
+// OverrideCustomTagEnd sets the callback function.
+func (x *BuildableIface) OverrideCustomTagEnd(cb func(Buildable, *Builder, *gobject.Object, string, uintptr)) {
 	if cb == nil {
 		x.xCustomTagEnd = 0
 	} else {
@@ -204,8 +204,8 @@ 		})
 	}
 }
 
-// GetCallbackCustomTagEnd gets the callback function.
-func (x *BuildableIface) GetCallbackCustomTagEnd() func(Buildable, *Builder, *gobject.Object, string, uintptr) {
+// GetCustomTagEnd gets the callback function.
+func (x *BuildableIface) GetCustomTagEnd() func(Buildable, *Builder, *gobject.Object, string, uintptr) {
 	if x.xCustomTagEnd == 0 {
 		return nil
 	}
@@ -216,8 +216,8 @@ 		rawCallback(BuildableVar.GoPointer(), BuilderVar.GoPointer(), ChildVar.GoPointer(), TagnameVar, DataVar)
 	}
 }
 
-// SetCallbackCustomFinished sets the callback function.
-func (x *BuildableIface) SetCallbackCustomFinished(cb func(Buildable, *Builder, *gobject.Object, string, uintptr)) {
+// OverrideCustomFinished sets the callback function.
+func (x *BuildableIface) OverrideCustomFinished(cb func(Buildable, *Builder, *gobject.Object, string, uintptr)) {
 	if cb == nil {
 		x.xCustomFinished = 0
 	} else {
@@ -227,8 +227,8 @@ 		})
 	}
 }
 
-// GetCallbackCustomFinished gets the callback function.
-func (x *BuildableIface) GetCallbackCustomFinished() func(Buildable, *Builder, *gobject.Object, string, uintptr) {
+// GetCustomFinished gets the callback function.
+func (x *BuildableIface) GetCustomFinished() func(Buildable, *Builder, *gobject.Object, string, uintptr) {
 	if x.xCustomFinished == 0 {
 		return nil
 	}
@@ -239,8 +239,8 @@ 		rawCallback(BuildableVar.GoPointer(), BuilderVar.GoPointer(), ChildVar.GoPointer(), TagnameVar, DataVar)
 	}
 }
 
-// SetCallbackParserFinished sets the callback function.
-func (x *BuildableIface) SetCallbackParserFinished(cb func(Buildable, *Builder)) {
+// OverrideParserFinished sets the callback function.
+func (x *BuildableIface) OverrideParserFinished(cb func(Buildable, *Builder)) {
 	if cb == nil {
 		x.xParserFinished = 0
 	} else {
@@ -250,8 +250,8 @@ 		})
 	}
 }
 
-// GetCallbackParserFinished gets the callback function.
-func (x *BuildableIface) GetCallbackParserFinished() func(Buildable, *Builder) {
+// GetParserFinished gets the callback function.
+func (x *BuildableIface) GetParserFinished() func(Buildable, *Builder) {
 	if x.xParserFinished == 0 {
 		return nil
 	}
@@ -262,8 +262,8 @@ 		rawCallback(BuildableVar.GoPointer(), BuilderVar.GoPointer())
 	}
 }
 
-// SetCallbackGetInternalChild sets the callback function.
-func (x *BuildableIface) SetCallbackGetInternalChild(cb func(Buildable, *Builder, string) *gobject.Object) {
+// OverrideGetInternalChild sets the callback function.
+func (x *BuildableIface) OverrideGetInternalChild(cb func(Buildable, *Builder, string) *gobject.Object) {
 	if cb == nil {
 		x.xGetInternalChild = 0
 	} else {
@@ -277,8 +277,8 @@ 		})
 	}
 }
 
-// GetCallbackGetInternalChild gets the callback function.
-func (x *BuildableIface) GetCallbackGetInternalChild() func(Buildable, *Builder, string) *gobject.Object {
+// GetGetInternalChild gets the callback function.
+func (x *BuildableIface) GetGetInternalChild() func(Buildable, *Builder, string) *gobject.Object {
 	if x.xGetInternalChild == 0 {
 		return nil
 	}
@@ -425,8 +425,8 @@ func (x *BuildableParser) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackStartElement sets the callback function.
-func (x *BuildableParser) SetCallbackStartElement(cb func(*BuildableParseContext, string, string, string, uintptr)) {
+// OverrideStartElement sets the callback function.
+func (x *BuildableParser) OverrideStartElement(cb func(*BuildableParseContext, string, string, string, uintptr)) {
 	if cb == nil {
 		x.xStartElement = 0
 	} else {
@@ -436,8 +436,8 @@ 		})
 	}
 }
 
-// GetCallbackStartElement gets the callback function.
-func (x *BuildableParser) GetCallbackStartElement() func(*BuildableParseContext, string, string, string, uintptr) {
+// GetStartElement gets the callback function.
+func (x *BuildableParser) GetStartElement() func(*BuildableParseContext, string, string, string, uintptr) {
 	if x.xStartElement == 0 {
 		return nil
 	}
@@ -448,8 +448,8 @@ 		rawCallback(ContextVar, ElementNameVar, AttributeNamesVar, AttributeValuesVar, UserDataVar)
 	}
 }
 
-// SetCallbackEndElement sets the callback function.
-func (x *BuildableParser) SetCallbackEndElement(cb func(*BuildableParseContext, string, uintptr)) {
+// OverrideEndElement sets the callback function.
+func (x *BuildableParser) OverrideEndElement(cb func(*BuildableParseContext, string, uintptr)) {
 	if cb == nil {
 		x.xEndElement = 0
 	} else {
@@ -459,8 +459,8 @@ 		})
 	}
 }
 
-// GetCallbackEndElement gets the callback function.
-func (x *BuildableParser) GetCallbackEndElement() func(*BuildableParseContext, string, uintptr) {
+// GetEndElement gets the callback function.
+func (x *BuildableParser) GetEndElement() func(*BuildableParseContext, string, uintptr) {
 	if x.xEndElement == 0 {
 		return nil
 	}
@@ -471,8 +471,8 @@ 		rawCallback(ContextVar, ElementNameVar, UserDataVar)
 	}
 }
 
-// SetCallbackText sets the callback function.
-func (x *BuildableParser) SetCallbackText(cb func(*BuildableParseContext, string, uint, uintptr)) {
+// OverrideText sets the callback function.
+func (x *BuildableParser) OverrideText(cb func(*BuildableParseContext, string, uint, uintptr)) {
 	if cb == nil {
 		x.xText = 0
 	} else {
@@ -482,8 +482,8 @@ 		})
 	}
 }
 
-// GetCallbackText gets the callback function.
-func (x *BuildableParser) GetCallbackText() func(*BuildableParseContext, string, uint, uintptr) {
+// GetText gets the callback function.
+func (x *BuildableParser) GetText() func(*BuildableParseContext, string, uint, uintptr) {
 	if x.xText == 0 {
 		return nil
 	}
@@ -494,8 +494,8 @@ 		rawCallback(ContextVar, TextVar, TextLenVar, UserDataVar)
 	}
 }
 
-// SetCallbackError sets the callback function.
-func (x *BuildableParser) SetCallbackError(cb func(*BuildableParseContext, *glib.Error, uintptr)) {
+// OverrideError sets the callback function.
+func (x *BuildableParser) OverrideError(cb func(*BuildableParseContext, *glib.Error, uintptr)) {
 	if cb == nil {
 		x.xError = 0
 	} else {
@@ -505,8 +505,8 @@ 		})
 	}
 }
 
-// GetCallbackError gets the callback function.
-func (x *BuildableParser) GetCallbackError() func(*BuildableParseContext, *glib.Error, uintptr) {
+// GetError gets the callback function.
+func (x *BuildableParser) GetError() func(*BuildableParseContext, *glib.Error, uintptr) {
 	if x.xError == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkbuilderscope.go b/v4/gtk/gtkbuilderscope.go
index ecff1e8c411d213a1363282e615005c5ccfca666..25c6acb4c38d1e6283215761a5b0cf303ddccce4 100644
--- a/v4/gtk/gtkbuilderscope.go
+++ b/v4/gtk/gtkbuilderscope.go
@@ -41,8 +41,8 @@ func (x *BuilderScopeInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetTypeFromName sets the callback function.
-func (x *BuilderScopeInterface) SetCallbackGetTypeFromName(cb func(BuilderScope, *Builder, string) types.GType) {
+// OverrideGetTypeFromName sets the callback function.
+func (x *BuilderScopeInterface) OverrideGetTypeFromName(cb func(BuilderScope, *Builder, string) types.GType) {
 	if cb == nil {
 		x.xGetTypeFromName = 0
 	} else {
@@ -52,8 +52,8 @@ 		})
 	}
 }
 
-// GetCallbackGetTypeFromName gets the callback function.
-func (x *BuilderScopeInterface) GetCallbackGetTypeFromName() func(BuilderScope, *Builder, string) types.GType {
+// GetGetTypeFromName gets the callback function.
+func (x *BuilderScopeInterface) GetGetTypeFromName() func(BuilderScope, *Builder, string) types.GType {
 	if x.xGetTypeFromName == 0 {
 		return nil
 	}
@@ -64,8 +64,8 @@ 		return rawCallback(SelfVar.GoPointer(), BuilderVar.GoPointer(), TypeNameVar)
 	}
 }
 
-// SetCallbackGetTypeFromFunction sets the callback function.
-func (x *BuilderScopeInterface) SetCallbackGetTypeFromFunction(cb func(BuilderScope, *Builder, string) types.GType) {
+// OverrideGetTypeFromFunction sets the callback function.
+func (x *BuilderScopeInterface) OverrideGetTypeFromFunction(cb func(BuilderScope, *Builder, string) types.GType) {
 	if cb == nil {
 		x.xGetTypeFromFunction = 0
 	} else {
@@ -75,8 +75,8 @@ 		})
 	}
 }
 
-// GetCallbackGetTypeFromFunction gets the callback function.
-func (x *BuilderScopeInterface) GetCallbackGetTypeFromFunction() func(BuilderScope, *Builder, string) types.GType {
+// GetGetTypeFromFunction gets the callback function.
+func (x *BuilderScopeInterface) GetGetTypeFromFunction() func(BuilderScope, *Builder, string) types.GType {
 	if x.xGetTypeFromFunction == 0 {
 		return nil
 	}
@@ -87,8 +87,8 @@ 		return rawCallback(SelfVar.GoPointer(), BuilderVar.GoPointer(), FunctionNameVar)
 	}
 }
 
-// SetCallbackCreateClosure sets the callback function.
-func (x *BuilderScopeInterface) SetCallbackCreateClosure(cb func(BuilderScope, *Builder, string, BuilderClosureFlags, *gobject.Object) *gobject.Closure) {
+// OverrideCreateClosure sets the callback function.
+func (x *BuilderScopeInterface) OverrideCreateClosure(cb func(BuilderScope, *Builder, string, BuilderClosureFlags, *gobject.Object) *gobject.Closure) {
 	if cb == nil {
 		x.xCreateClosure = 0
 	} else {
@@ -98,8 +98,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateClosure gets the callback function.
-func (x *BuilderScopeInterface) GetCallbackCreateClosure() func(BuilderScope, *Builder, string, BuilderClosureFlags, *gobject.Object) *gobject.Closure {
+// GetCreateClosure gets the callback function.
+func (x *BuilderScopeInterface) GetCreateClosure() func(BuilderScope, *Builder, string, BuilderClosureFlags, *gobject.Object) *gobject.Closure {
 	if x.xCreateClosure == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkbutton.go b/v4/gtk/gtkbutton.go
index 8a85044ad8165ce89b0852900d8ef39d316111a8..01dab333209e3951809e0efd89e6528b71f88460 100644
--- a/v4/gtk/gtkbutton.go
+++ b/v4/gtk/gtkbutton.go
@@ -28,8 +28,8 @@ func (x *ButtonClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackClicked sets the callback function.
-func (x *ButtonClass) SetCallbackClicked(cb func(*Button)) {
+// OverrideClicked sets the callback function.
+func (x *ButtonClass) OverrideClicked(cb func(*Button)) {
 	if cb == nil {
 		x.xClicked = 0
 	} else {
@@ -39,8 +39,8 @@ 		})
 	}
 }
 
-// GetCallbackClicked gets the callback function.
-func (x *ButtonClass) GetCallbackClicked() func(*Button) {
+// GetClicked gets the callback function.
+func (x *ButtonClass) GetClicked() func(*Button) {
 	if x.xClicked == 0 {
 		return nil
 	}
@@ -51,8 +51,8 @@ 		rawCallback(ButtonVar.GoPointer())
 	}
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *ButtonClass) SetCallbackActivate(cb func(*Button)) {
+// OverrideActivate sets the callback function.
+func (x *ButtonClass) OverrideActivate(cb func(*Button)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -62,8 +62,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *ButtonClass) GetCallbackActivate() func(*Button) {
+// GetActivate gets the callback function.
+func (x *ButtonClass) GetActivate() func(*Button) {
 	if x.xActivate == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkcellarea.go b/v4/gtk/gtkcellarea.go
index 0f7835fc3e1d22a5bfc88068d9f0945b41e3e763..8ad77b3ab456fb03ff28244e36f5792d61468fd0 100644
--- a/v4/gtk/gtkcellarea.go
+++ b/v4/gtk/gtkcellarea.go
@@ -107,8 +107,8 @@ 	cret := xCellAreaClassListCellProperties(x.GoPointer(), NPropertiesVar)
 	return cret
 }
 
-// SetCallbackAdd sets the callback function.
-func (x *CellAreaClass) SetCallbackAdd(cb func(*CellArea, *CellRenderer)) {
+// OverrideAdd sets the callback function.
+func (x *CellAreaClass) OverrideAdd(cb func(*CellArea, *CellRenderer)) {
 	if cb == nil {
 		x.xAdd = 0
 	} else {
@@ -118,8 +118,8 @@ 		})
 	}
 }
 
-// GetCallbackAdd gets the callback function.
-func (x *CellAreaClass) GetCallbackAdd() func(*CellArea, *CellRenderer) {
+// GetAdd gets the callback function.
+func (x *CellAreaClass) GetAdd() func(*CellArea, *CellRenderer) {
 	if x.xAdd == 0 {
 		return nil
 	}
@@ -130,8 +130,8 @@ 		rawCallback(AreaVar.GoPointer(), RendererVar.GoPointer())
 	}
 }
 
-// SetCallbackRemove sets the callback function.
-func (x *CellAreaClass) SetCallbackRemove(cb func(*CellArea, *CellRenderer)) {
+// OverrideRemove sets the callback function.
+func (x *CellAreaClass) OverrideRemove(cb func(*CellArea, *CellRenderer)) {
 	if cb == nil {
 		x.xRemove = 0
 	} else {
@@ -141,8 +141,8 @@ 		})
 	}
 }
 
-// GetCallbackRemove gets the callback function.
-func (x *CellAreaClass) GetCallbackRemove() func(*CellArea, *CellRenderer) {
+// GetRemove gets the callback function.
+func (x *CellAreaClass) GetRemove() func(*CellArea, *CellRenderer) {
 	if x.xRemove == 0 {
 		return nil
 	}
@@ -153,8 +153,8 @@ 		rawCallback(AreaVar.GoPointer(), RendererVar.GoPointer())
 	}
 }
 
-// SetCallbackForeach sets the callback function.
-func (x *CellAreaClass) SetCallbackForeach(cb func(*CellArea, *CellCallback, uintptr)) {
+// OverrideForeach sets the callback function.
+func (x *CellAreaClass) OverrideForeach(cb func(*CellArea, *CellCallback, uintptr)) {
 	if cb == nil {
 		x.xForeach = 0
 	} else {
@@ -164,8 +164,8 @@ 		})
 	}
 }
 
-// GetCallbackForeach gets the callback function.
-func (x *CellAreaClass) GetCallbackForeach() func(*CellArea, *CellCallback, uintptr) {
+// GetForeach gets the callback function.
+func (x *CellAreaClass) GetForeach() func(*CellArea, *CellCallback, uintptr) {
 	if x.xForeach == 0 {
 		return nil
 	}
@@ -176,8 +176,8 @@ 		rawCallback(AreaVar.GoPointer(), glib.NewCallback(CallbackVar), CallbackDataVar)
 	}
 }
 
-// SetCallbackForeachAlloc sets the callback function.
-func (x *CellAreaClass) SetCallbackForeachAlloc(cb func(*CellArea, *CellAreaContext, *Widget, *gdk.Rectangle, *gdk.Rectangle, *CellAllocCallback, uintptr)) {
+// OverrideForeachAlloc sets the callback function.
+func (x *CellAreaClass) OverrideForeachAlloc(cb func(*CellArea, *CellAreaContext, *Widget, *gdk.Rectangle, *gdk.Rectangle, *CellAllocCallback, uintptr)) {
 	if cb == nil {
 		x.xForeachAlloc = 0
 	} else {
@@ -187,8 +187,8 @@ 		})
 	}
 }
 
-// GetCallbackForeachAlloc gets the callback function.
-func (x *CellAreaClass) GetCallbackForeachAlloc() func(*CellArea, *CellAreaContext, *Widget, *gdk.Rectangle, *gdk.Rectangle, *CellAllocCallback, uintptr) {
+// GetForeachAlloc gets the callback function.
+func (x *CellAreaClass) GetForeachAlloc() func(*CellArea, *CellAreaContext, *Widget, *gdk.Rectangle, *gdk.Rectangle, *CellAllocCallback, uintptr) {
 	if x.xForeachAlloc == 0 {
 		return nil
 	}
@@ -199,8 +199,8 @@ 		rawCallback(AreaVar.GoPointer(), ContextVar.GoPointer(), WidgetVar.GoPointer(), CellAreaVar, BackgroundAreaVar, glib.NewCallback(CallbackVar), CallbackDataVar)
 	}
 }
 
-// SetCallbackEvent sets the callback function.
-func (x *CellAreaClass) SetCallbackEvent(cb func(*CellArea, *CellAreaContext, *Widget, *gdk.Event, *gdk.Rectangle, CellRendererState) int) {
+// OverrideEvent sets the callback function.
+func (x *CellAreaClass) OverrideEvent(cb func(*CellArea, *CellAreaContext, *Widget, *gdk.Event, *gdk.Rectangle, CellRendererState) int) {
 	if cb == nil {
 		x.xEvent = 0
 	} else {
@@ -210,8 +210,8 @@ 		})
 	}
 }
 
-// GetCallbackEvent gets the callback function.
-func (x *CellAreaClass) GetCallbackEvent() func(*CellArea, *CellAreaContext, *Widget, *gdk.Event, *gdk.Rectangle, CellRendererState) int {
+// GetEvent gets the callback function.
+func (x *CellAreaClass) GetEvent() func(*CellArea, *CellAreaContext, *Widget, *gdk.Event, *gdk.Rectangle, CellRendererState) int {
 	if x.xEvent == 0 {
 		return nil
 	}
@@ -222,8 +222,8 @@ 		return rawCallback(AreaVar.GoPointer(), ContextVar.GoPointer(), WidgetVar.GoPointer(), EventVar.GoPointer(), CellAreaVar, FlagsVar)
 	}
 }
 
-// SetCallbackSnapshot sets the callback function.
-func (x *CellAreaClass) SetCallbackSnapshot(cb func(*CellArea, *CellAreaContext, *Widget, *Snapshot, *gdk.Rectangle, *gdk.Rectangle, CellRendererState, bool)) {
+// OverrideSnapshot sets the callback function.
+func (x *CellAreaClass) OverrideSnapshot(cb func(*CellArea, *CellAreaContext, *Widget, *Snapshot, *gdk.Rectangle, *gdk.Rectangle, CellRendererState, bool)) {
 	if cb == nil {
 		x.xSnapshot = 0
 	} else {
@@ -233,8 +233,8 @@ 		})
 	}
 }
 
-// GetCallbackSnapshot gets the callback function.
-func (x *CellAreaClass) GetCallbackSnapshot() func(*CellArea, *CellAreaContext, *Widget, *Snapshot, *gdk.Rectangle, *gdk.Rectangle, CellRendererState, bool) {
+// GetSnapshot gets the callback function.
+func (x *CellAreaClass) GetSnapshot() func(*CellArea, *CellAreaContext, *Widget, *Snapshot, *gdk.Rectangle, *gdk.Rectangle, CellRendererState, bool) {
 	if x.xSnapshot == 0 {
 		return nil
 	}
@@ -245,8 +245,8 @@ 		rawCallback(AreaVar.GoPointer(), ContextVar.GoPointer(), WidgetVar.GoPointer(), SnapshotVar.GoPointer(), BackgroundAreaVar, CellAreaVar, FlagsVar, PaintFocusVar)
 	}
 }
 
-// SetCallbackApplyAttributes sets the callback function.
-func (x *CellAreaClass) SetCallbackApplyAttributes(cb func(*CellArea, TreeModel, *TreeIter, bool, bool)) {
+// OverrideApplyAttributes sets the callback function.
+func (x *CellAreaClass) OverrideApplyAttributes(cb func(*CellArea, TreeModel, *TreeIter, bool, bool)) {
 	if cb == nil {
 		x.xApplyAttributes = 0
 	} else {
@@ -256,8 +256,8 @@ 		})
 	}
 }
 
-// GetCallbackApplyAttributes gets the callback function.
-func (x *CellAreaClass) GetCallbackApplyAttributes() func(*CellArea, TreeModel, *TreeIter, bool, bool) {
+// GetApplyAttributes gets the callback function.
+func (x *CellAreaClass) GetApplyAttributes() func(*CellArea, TreeModel, *TreeIter, bool, bool) {
 	if x.xApplyAttributes == 0 {
 		return nil
 	}
@@ -268,8 +268,8 @@ 		rawCallback(AreaVar.GoPointer(), TreeModelVar.GoPointer(), IterVar, IsExpanderVar, IsExpandedVar)
 	}
 }
 
-// SetCallbackCreateContext sets the callback function.
-func (x *CellAreaClass) SetCallbackCreateContext(cb func(*CellArea) *CellAreaContext) {
+// OverrideCreateContext sets the callback function.
+func (x *CellAreaClass) OverrideCreateContext(cb func(*CellArea) *CellAreaContext) {
 	if cb == nil {
 		x.xCreateContext = 0
 	} else {
@@ -283,8 +283,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateContext gets the callback function.
-func (x *CellAreaClass) GetCallbackCreateContext() func(*CellArea) *CellAreaContext {
+// GetCreateContext gets the callback function.
+func (x *CellAreaClass) GetCreateContext() func(*CellArea) *CellAreaContext {
 	if x.xCreateContext == 0 {
 		return nil
 	}
@@ -301,8 +301,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCopyContext sets the callback function.
-func (x *CellAreaClass) SetCallbackCopyContext(cb func(*CellArea, *CellAreaContext) *CellAreaContext) {
+// OverrideCopyContext sets the callback function.
+func (x *CellAreaClass) OverrideCopyContext(cb func(*CellArea, *CellAreaContext) *CellAreaContext) {
 	if cb == nil {
 		x.xCopyContext = 0
 	} else {
@@ -316,8 +316,8 @@ 		})
 	}
 }
 
-// GetCallbackCopyContext gets the callback function.
-func (x *CellAreaClass) GetCallbackCopyContext() func(*CellArea, *CellAreaContext) *CellAreaContext {
+// GetCopyContext gets the callback function.
+func (x *CellAreaClass) GetCopyContext() func(*CellArea, *CellAreaContext) *CellAreaContext {
 	if x.xCopyContext == 0 {
 		return nil
 	}
@@ -334,8 +334,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetRequestMode sets the callback function.
-func (x *CellAreaClass) SetCallbackGetRequestMode(cb func(*CellArea) SizeRequestMode) {
+// OverrideGetRequestMode sets the callback function.
+func (x *CellAreaClass) OverrideGetRequestMode(cb func(*CellArea) SizeRequestMode) {
 	if cb == nil {
 		x.xGetRequestMode = 0
 	} else {
@@ -345,8 +345,8 @@ 		})
 	}
 }
 
-// GetCallbackGetRequestMode gets the callback function.
-func (x *CellAreaClass) GetCallbackGetRequestMode() func(*CellArea) SizeRequestMode {
+// GetGetRequestMode gets the callback function.
+func (x *CellAreaClass) GetGetRequestMode() func(*CellArea) SizeRequestMode {
 	if x.xGetRequestMode == 0 {
 		return nil
 	}
@@ -357,8 +357,8 @@ 		return rawCallback(AreaVar.GoPointer())
 	}
 }
 
-// SetCallbackGetPreferredWidth sets the callback function.
-func (x *CellAreaClass) SetCallbackGetPreferredWidth(cb func(*CellArea, *CellAreaContext, *Widget, int, int)) {
+// OverrideGetPreferredWidth sets the callback function.
+func (x *CellAreaClass) OverrideGetPreferredWidth(cb func(*CellArea, *CellAreaContext, *Widget, int, int)) {
 	if cb == nil {
 		x.xGetPreferredWidth = 0
 	} else {
@@ -368,8 +368,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredWidth gets the callback function.
-func (x *CellAreaClass) GetCallbackGetPreferredWidth() func(*CellArea, *CellAreaContext, *Widget, int, int) {
+// GetGetPreferredWidth gets the callback function.
+func (x *CellAreaClass) GetGetPreferredWidth() func(*CellArea, *CellAreaContext, *Widget, int, int) {
 	if x.xGetPreferredWidth == 0 {
 		return nil
 	}
@@ -380,8 +380,8 @@ 		rawCallback(AreaVar.GoPointer(), ContextVar.GoPointer(), WidgetVar.GoPointer(), MinimumWidthVar, NaturalWidthVar)
 	}
 }
 
-// SetCallbackGetPreferredHeightForWidth sets the callback function.
-func (x *CellAreaClass) SetCallbackGetPreferredHeightForWidth(cb func(*CellArea, *CellAreaContext, *Widget, int, int, int)) {
+// OverrideGetPreferredHeightForWidth sets the callback function.
+func (x *CellAreaClass) OverrideGetPreferredHeightForWidth(cb func(*CellArea, *CellAreaContext, *Widget, int, int, int)) {
 	if cb == nil {
 		x.xGetPreferredHeightForWidth = 0
 	} else {
@@ -391,8 +391,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredHeightForWidth gets the callback function.
-func (x *CellAreaClass) GetCallbackGetPreferredHeightForWidth() func(*CellArea, *CellAreaContext, *Widget, int, int, int) {
+// GetGetPreferredHeightForWidth gets the callback function.
+func (x *CellAreaClass) GetGetPreferredHeightForWidth() func(*CellArea, *CellAreaContext, *Widget, int, int, int) {
 	if x.xGetPreferredHeightForWidth == 0 {
 		return nil
 	}
@@ -403,8 +403,8 @@ 		rawCallback(AreaVar.GoPointer(), ContextVar.GoPointer(), WidgetVar.GoPointer(), WidthVar, MinimumHeightVar, NaturalHeightVar)
 	}
 }
 
-// SetCallbackGetPreferredHeight sets the callback function.
-func (x *CellAreaClass) SetCallbackGetPreferredHeight(cb func(*CellArea, *CellAreaContext, *Widget, int, int)) {
+// OverrideGetPreferredHeight sets the callback function.
+func (x *CellAreaClass) OverrideGetPreferredHeight(cb func(*CellArea, *CellAreaContext, *Widget, int, int)) {
 	if cb == nil {
 		x.xGetPreferredHeight = 0
 	} else {
@@ -414,8 +414,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredHeight gets the callback function.
-func (x *CellAreaClass) GetCallbackGetPreferredHeight() func(*CellArea, *CellAreaContext, *Widget, int, int) {
+// GetGetPreferredHeight gets the callback function.
+func (x *CellAreaClass) GetGetPreferredHeight() func(*CellArea, *CellAreaContext, *Widget, int, int) {
 	if x.xGetPreferredHeight == 0 {
 		return nil
 	}
@@ -426,8 +426,8 @@ 		rawCallback(AreaVar.GoPointer(), ContextVar.GoPointer(), WidgetVar.GoPointer(), MinimumHeightVar, NaturalHeightVar)
 	}
 }
 
-// SetCallbackGetPreferredWidthForHeight sets the callback function.
-func (x *CellAreaClass) SetCallbackGetPreferredWidthForHeight(cb func(*CellArea, *CellAreaContext, *Widget, int, int, int)) {
+// OverrideGetPreferredWidthForHeight sets the callback function.
+func (x *CellAreaClass) OverrideGetPreferredWidthForHeight(cb func(*CellArea, *CellAreaContext, *Widget, int, int, int)) {
 	if cb == nil {
 		x.xGetPreferredWidthForHeight = 0
 	} else {
@@ -437,8 +437,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredWidthForHeight gets the callback function.
-func (x *CellAreaClass) GetCallbackGetPreferredWidthForHeight() func(*CellArea, *CellAreaContext, *Widget, int, int, int) {
+// GetGetPreferredWidthForHeight gets the callback function.
+func (x *CellAreaClass) GetGetPreferredWidthForHeight() func(*CellArea, *CellAreaContext, *Widget, int, int, int) {
 	if x.xGetPreferredWidthForHeight == 0 {
 		return nil
 	}
@@ -449,8 +449,8 @@ 		rawCallback(AreaVar.GoPointer(), ContextVar.GoPointer(), WidgetVar.GoPointer(), HeightVar, MinimumWidthVar, NaturalWidthVar)
 	}
 }
 
-// SetCallbackSetCellProperty sets the callback function.
-func (x *CellAreaClass) SetCallbackSetCellProperty(cb func(*CellArea, *CellRenderer, uint, *gobject.Value, *gobject.ParamSpec)) {
+// OverrideSetCellProperty sets the callback function.
+func (x *CellAreaClass) OverrideSetCellProperty(cb func(*CellArea, *CellRenderer, uint, *gobject.Value, *gobject.ParamSpec)) {
 	if cb == nil {
 		x.xSetCellProperty = 0
 	} else {
@@ -460,8 +460,8 @@ 		})
 	}
 }
 
-// GetCallbackSetCellProperty gets the callback function.
-func (x *CellAreaClass) GetCallbackSetCellProperty() func(*CellArea, *CellRenderer, uint, *gobject.Value, *gobject.ParamSpec) {
+// GetSetCellProperty gets the callback function.
+func (x *CellAreaClass) GetSetCellProperty() func(*CellArea, *CellRenderer, uint, *gobject.Value, *gobject.ParamSpec) {
 	if x.xSetCellProperty == 0 {
 		return nil
 	}
@@ -472,8 +472,8 @@ 		rawCallback(AreaVar.GoPointer(), RendererVar.GoPointer(), PropertyIdVar, ValueVar, PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackGetCellProperty sets the callback function.
-func (x *CellAreaClass) SetCallbackGetCellProperty(cb func(*CellArea, *CellRenderer, uint, *gobject.Value, *gobject.ParamSpec)) {
+// OverrideGetCellProperty sets the callback function.
+func (x *CellAreaClass) OverrideGetCellProperty(cb func(*CellArea, *CellRenderer, uint, *gobject.Value, *gobject.ParamSpec)) {
 	if cb == nil {
 		x.xGetCellProperty = 0
 	} else {
@@ -483,8 +483,8 @@ 		})
 	}
 }
 
-// GetCallbackGetCellProperty gets the callback function.
-func (x *CellAreaClass) GetCallbackGetCellProperty() func(*CellArea, *CellRenderer, uint, *gobject.Value, *gobject.ParamSpec) {
+// GetGetCellProperty gets the callback function.
+func (x *CellAreaClass) GetGetCellProperty() func(*CellArea, *CellRenderer, uint, *gobject.Value, *gobject.ParamSpec) {
 	if x.xGetCellProperty == 0 {
 		return nil
 	}
@@ -495,8 +495,8 @@ 		rawCallback(AreaVar.GoPointer(), RendererVar.GoPointer(), PropertyIdVar, ValueVar, PspecVar.GoPointer())
 	}
 }
 
-// SetCallbackFocus sets the callback function.
-func (x *CellAreaClass) SetCallbackFocus(cb func(*CellArea, DirectionType) bool) {
+// OverrideFocus sets the callback function.
+func (x *CellAreaClass) OverrideFocus(cb func(*CellArea, DirectionType) bool) {
 	if cb == nil {
 		x.xFocus = 0
 	} else {
@@ -506,8 +506,8 @@ 		})
 	}
 }
 
-// GetCallbackFocus gets the callback function.
-func (x *CellAreaClass) GetCallbackFocus() func(*CellArea, DirectionType) bool {
+// GetFocus gets the callback function.
+func (x *CellAreaClass) GetFocus() func(*CellArea, DirectionType) bool {
 	if x.xFocus == 0 {
 		return nil
 	}
@@ -518,8 +518,8 @@ 		return rawCallback(AreaVar.GoPointer(), DirectionVar)
 	}
 }
 
-// SetCallbackIsActivatable sets the callback function.
-func (x *CellAreaClass) SetCallbackIsActivatable(cb func(*CellArea) bool) {
+// OverrideIsActivatable sets the callback function.
+func (x *CellAreaClass) OverrideIsActivatable(cb func(*CellArea) bool) {
 	if cb == nil {
 		x.xIsActivatable = 0
 	} else {
@@ -529,8 +529,8 @@ 		})
 	}
 }
 
-// GetCallbackIsActivatable gets the callback function.
-func (x *CellAreaClass) GetCallbackIsActivatable() func(*CellArea) bool {
+// GetIsActivatable gets the callback function.
+func (x *CellAreaClass) GetIsActivatable() func(*CellArea) bool {
 	if x.xIsActivatable == 0 {
 		return nil
 	}
@@ -541,8 +541,8 @@ 		return rawCallback(AreaVar.GoPointer())
 	}
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *CellAreaClass) SetCallbackActivate(cb func(*CellArea, *CellAreaContext, *Widget, *gdk.Rectangle, CellRendererState, bool) bool) {
+// OverrideActivate sets the callback function.
+func (x *CellAreaClass) OverrideActivate(cb func(*CellArea, *CellAreaContext, *Widget, *gdk.Rectangle, CellRendererState, bool) bool) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -552,8 +552,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *CellAreaClass) GetCallbackActivate() func(*CellArea, *CellAreaContext, *Widget, *gdk.Rectangle, CellRendererState, bool) bool {
+// GetActivate gets the callback function.
+func (x *CellAreaClass) GetActivate() func(*CellArea, *CellAreaContext, *Widget, *gdk.Rectangle, CellRendererState, bool) bool {
 	if x.xActivate == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkcellareacontext.go b/v4/gtk/gtkcellareacontext.go
index 69e23daaf0b0c97dcf4e3f893d69a85cafa59dc5..992dd36d9e696639e2a464d31182d0f853344f8f 100644
--- a/v4/gtk/gtkcellareacontext.go
+++ b/v4/gtk/gtkcellareacontext.go
@@ -31,8 +31,8 @@ func (x *CellAreaContextClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackAllocate sets the callback function.
-func (x *CellAreaContextClass) SetCallbackAllocate(cb func(*CellAreaContext, int, int)) {
+// OverrideAllocate sets the callback function.
+func (x *CellAreaContextClass) OverrideAllocate(cb func(*CellAreaContext, int, int)) {
 	if cb == nil {
 		x.xAllocate = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackAllocate gets the callback function.
-func (x *CellAreaContextClass) GetCallbackAllocate() func(*CellAreaContext, int, int) {
+// GetAllocate gets the callback function.
+func (x *CellAreaContextClass) GetAllocate() func(*CellAreaContext, int, int) {
 	if x.xAllocate == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback(ContextVar.GoPointer(), WidthVar, HeightVar)
 	}
 }
 
-// SetCallbackReset sets the callback function.
-func (x *CellAreaContextClass) SetCallbackReset(cb func(*CellAreaContext)) {
+// OverrideReset sets the callback function.
+func (x *CellAreaContextClass) OverrideReset(cb func(*CellAreaContext)) {
 	if cb == nil {
 		x.xReset = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackReset gets the callback function.
-func (x *CellAreaContextClass) GetCallbackReset() func(*CellAreaContext) {
+// GetReset gets the callback function.
+func (x *CellAreaContextClass) GetReset() func(*CellAreaContext) {
 	if x.xReset == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback(ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackGetPreferredHeightForWidth sets the callback function.
-func (x *CellAreaContextClass) SetCallbackGetPreferredHeightForWidth(cb func(*CellAreaContext, int, int, int)) {
+// OverrideGetPreferredHeightForWidth sets the callback function.
+func (x *CellAreaContextClass) OverrideGetPreferredHeightForWidth(cb func(*CellAreaContext, int, int, int)) {
 	if cb == nil {
 		x.xGetPreferredHeightForWidth = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredHeightForWidth gets the callback function.
-func (x *CellAreaContextClass) GetCallbackGetPreferredHeightForWidth() func(*CellAreaContext, int, int, int) {
+// GetGetPreferredHeightForWidth gets the callback function.
+func (x *CellAreaContextClass) GetGetPreferredHeightForWidth() func(*CellAreaContext, int, int, int) {
 	if x.xGetPreferredHeightForWidth == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback(ContextVar.GoPointer(), WidthVar, MinimumHeightVar, NaturalHeightVar)
 	}
 }
 
-// SetCallbackGetPreferredWidthForHeight sets the callback function.
-func (x *CellAreaContextClass) SetCallbackGetPreferredWidthForHeight(cb func(*CellAreaContext, int, int, int)) {
+// OverrideGetPreferredWidthForHeight sets the callback function.
+func (x *CellAreaContextClass) OverrideGetPreferredWidthForHeight(cb func(*CellAreaContext, int, int, int)) {
 	if cb == nil {
 		x.xGetPreferredWidthForHeight = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredWidthForHeight gets the callback function.
-func (x *CellAreaContextClass) GetCallbackGetPreferredWidthForHeight() func(*CellAreaContext, int, int, int) {
+// GetGetPreferredWidthForHeight gets the callback function.
+func (x *CellAreaContextClass) GetGetPreferredWidthForHeight() func(*CellAreaContext, int, int, int) {
 	if x.xGetPreferredWidthForHeight == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkcelleditable.go b/v4/gtk/gtkcelleditable.go
index 43135a0e043a4055ad74a65b48260a424b85717e..ea97087367a48f5cddc02a7f038ef15fa0d9f477 100644
--- a/v4/gtk/gtkcelleditable.go
+++ b/v4/gtk/gtkcelleditable.go
@@ -27,8 +27,8 @@ func (x *CellEditableIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackEditingDone sets the callback function.
-func (x *CellEditableIface) SetCallbackEditingDone(cb func(CellEditable)) {
+// OverrideEditingDone sets the callback function.
+func (x *CellEditableIface) OverrideEditingDone(cb func(CellEditable)) {
 	if cb == nil {
 		x.xEditingDone = 0
 	} else {
@@ -38,8 +38,8 @@ 		})
 	}
 }
 
-// GetCallbackEditingDone gets the callback function.
-func (x *CellEditableIface) GetCallbackEditingDone() func(CellEditable) {
+// GetEditingDone gets the callback function.
+func (x *CellEditableIface) GetEditingDone() func(CellEditable) {
 	if x.xEditingDone == 0 {
 		return nil
 	}
@@ -50,8 +50,8 @@ 		rawCallback(CellEditableVar.GoPointer())
 	}
 }
 
-// SetCallbackRemoveWidget sets the callback function.
-func (x *CellEditableIface) SetCallbackRemoveWidget(cb func(CellEditable)) {
+// OverrideRemoveWidget sets the callback function.
+func (x *CellEditableIface) OverrideRemoveWidget(cb func(CellEditable)) {
 	if cb == nil {
 		x.xRemoveWidget = 0
 	} else {
@@ -61,8 +61,8 @@ 		})
 	}
 }
 
-// GetCallbackRemoveWidget gets the callback function.
-func (x *CellEditableIface) GetCallbackRemoveWidget() func(CellEditable) {
+// GetRemoveWidget gets the callback function.
+func (x *CellEditableIface) GetRemoveWidget() func(CellEditable) {
 	if x.xRemoveWidget == 0 {
 		return nil
 	}
@@ -73,8 +73,8 @@ 		rawCallback(CellEditableVar.GoPointer())
 	}
 }
 
-// SetCallbackStartEditing sets the callback function.
-func (x *CellEditableIface) SetCallbackStartEditing(cb func(CellEditable, *gdk.Event)) {
+// OverrideStartEditing sets the callback function.
+func (x *CellEditableIface) OverrideStartEditing(cb func(CellEditable, *gdk.Event)) {
 	if cb == nil {
 		x.xStartEditing = 0
 	} else {
@@ -84,8 +84,8 @@ 		})
 	}
 }
 
-// GetCallbackStartEditing gets the callback function.
-func (x *CellEditableIface) GetCallbackStartEditing() func(CellEditable, *gdk.Event) {
+// GetStartEditing gets the callback function.
+func (x *CellEditableIface) GetStartEditing() func(CellEditable, *gdk.Event) {
 	if x.xStartEditing == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkcelllayout.go b/v4/gtk/gtkcelllayout.go
index 36f5f89ba60982ba2d2d9111787ec9965a4f0547..54135ed866840ad16cf677ff84d903442a5e5658 100644
--- a/v4/gtk/gtkcelllayout.go
+++ b/v4/gtk/gtkcelllayout.go
@@ -44,8 +44,8 @@ func (x *CellLayoutIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackPackStart sets the callback function.
-func (x *CellLayoutIface) SetCallbackPackStart(cb func(CellLayout, *CellRenderer, bool)) {
+// OverridePackStart sets the callback function.
+func (x *CellLayoutIface) OverridePackStart(cb func(CellLayout, *CellRenderer, bool)) {
 	if cb == nil {
 		x.xPackStart = 0
 	} else {
@@ -55,8 +55,8 @@ 		})
 	}
 }
 
-// GetCallbackPackStart gets the callback function.
-func (x *CellLayoutIface) GetCallbackPackStart() func(CellLayout, *CellRenderer, bool) {
+// GetPackStart gets the callback function.
+func (x *CellLayoutIface) GetPackStart() func(CellLayout, *CellRenderer, bool) {
 	if x.xPackStart == 0 {
 		return nil
 	}
@@ -67,8 +67,8 @@ 		rawCallback(CellLayoutVar.GoPointer(), CellVar.GoPointer(), ExpandVar)
 	}
 }
 
-// SetCallbackPackEnd sets the callback function.
-func (x *CellLayoutIface) SetCallbackPackEnd(cb func(CellLayout, *CellRenderer, bool)) {
+// OverridePackEnd sets the callback function.
+func (x *CellLayoutIface) OverridePackEnd(cb func(CellLayout, *CellRenderer, bool)) {
 	if cb == nil {
 		x.xPackEnd = 0
 	} else {
@@ -78,8 +78,8 @@ 		})
 	}
 }
 
-// GetCallbackPackEnd gets the callback function.
-func (x *CellLayoutIface) GetCallbackPackEnd() func(CellLayout, *CellRenderer, bool) {
+// GetPackEnd gets the callback function.
+func (x *CellLayoutIface) GetPackEnd() func(CellLayout, *CellRenderer, bool) {
 	if x.xPackEnd == 0 {
 		return nil
 	}
@@ -90,8 +90,8 @@ 		rawCallback(CellLayoutVar.GoPointer(), CellVar.GoPointer(), ExpandVar)
 	}
 }
 
-// SetCallbackClear sets the callback function.
-func (x *CellLayoutIface) SetCallbackClear(cb func(CellLayout)) {
+// OverrideClear sets the callback function.
+func (x *CellLayoutIface) OverrideClear(cb func(CellLayout)) {
 	if cb == nil {
 		x.xClear = 0
 	} else {
@@ -101,8 +101,8 @@ 		})
 	}
 }
 
-// GetCallbackClear gets the callback function.
-func (x *CellLayoutIface) GetCallbackClear() func(CellLayout) {
+// GetClear gets the callback function.
+func (x *CellLayoutIface) GetClear() func(CellLayout) {
 	if x.xClear == 0 {
 		return nil
 	}
@@ -113,8 +113,8 @@ 		rawCallback(CellLayoutVar.GoPointer())
 	}
 }
 
-// SetCallbackAddAttribute sets the callback function.
-func (x *CellLayoutIface) SetCallbackAddAttribute(cb func(CellLayout, *CellRenderer, string, int)) {
+// OverrideAddAttribute sets the callback function.
+func (x *CellLayoutIface) OverrideAddAttribute(cb func(CellLayout, *CellRenderer, string, int)) {
 	if cb == nil {
 		x.xAddAttribute = 0
 	} else {
@@ -124,8 +124,8 @@ 		})
 	}
 }
 
-// GetCallbackAddAttribute gets the callback function.
-func (x *CellLayoutIface) GetCallbackAddAttribute() func(CellLayout, *CellRenderer, string, int) {
+// GetAddAttribute gets the callback function.
+func (x *CellLayoutIface) GetAddAttribute() func(CellLayout, *CellRenderer, string, int) {
 	if x.xAddAttribute == 0 {
 		return nil
 	}
@@ -136,8 +136,8 @@ 		rawCallback(CellLayoutVar.GoPointer(), CellVar.GoPointer(), AttributeVar, ColumnVar)
 	}
 }
 
-// SetCallbackSetCellDataFunc sets the callback function.
-func (x *CellLayoutIface) SetCallbackSetCellDataFunc(cb func(CellLayout, *CellRenderer, *CellLayoutDataFunc, uintptr, *glib.DestroyNotify)) {
+// OverrideSetCellDataFunc sets the callback function.
+func (x *CellLayoutIface) OverrideSetCellDataFunc(cb func(CellLayout, *CellRenderer, *CellLayoutDataFunc, uintptr, *glib.DestroyNotify)) {
 	if cb == nil {
 		x.xSetCellDataFunc = 0
 	} else {
@@ -147,8 +147,8 @@ 		})
 	}
 }
 
-// GetCallbackSetCellDataFunc gets the callback function.
-func (x *CellLayoutIface) GetCallbackSetCellDataFunc() func(CellLayout, *CellRenderer, *CellLayoutDataFunc, uintptr, *glib.DestroyNotify) {
+// GetSetCellDataFunc gets the callback function.
+func (x *CellLayoutIface) GetSetCellDataFunc() func(CellLayout, *CellRenderer, *CellLayoutDataFunc, uintptr, *glib.DestroyNotify) {
 	if x.xSetCellDataFunc == 0 {
 		return nil
 	}
@@ -159,8 +159,8 @@ 		rawCallback(CellLayoutVar.GoPointer(), CellVar.GoPointer(), glib.NewCallbackNullable(FuncVar), FuncDataVar, glib.NewCallback(DestroyVar))
 	}
 }
 
-// SetCallbackClearAttributes sets the callback function.
-func (x *CellLayoutIface) SetCallbackClearAttributes(cb func(CellLayout, *CellRenderer)) {
+// OverrideClearAttributes sets the callback function.
+func (x *CellLayoutIface) OverrideClearAttributes(cb func(CellLayout, *CellRenderer)) {
 	if cb == nil {
 		x.xClearAttributes = 0
 	} else {
@@ -170,8 +170,8 @@ 		})
 	}
 }
 
-// GetCallbackClearAttributes gets the callback function.
-func (x *CellLayoutIface) GetCallbackClearAttributes() func(CellLayout, *CellRenderer) {
+// GetClearAttributes gets the callback function.
+func (x *CellLayoutIface) GetClearAttributes() func(CellLayout, *CellRenderer) {
 	if x.xClearAttributes == 0 {
 		return nil
 	}
@@ -182,8 +182,8 @@ 		rawCallback(CellLayoutVar.GoPointer(), CellVar.GoPointer())
 	}
 }
 
-// SetCallbackReorder sets the callback function.
-func (x *CellLayoutIface) SetCallbackReorder(cb func(CellLayout, *CellRenderer, int)) {
+// OverrideReorder sets the callback function.
+func (x *CellLayoutIface) OverrideReorder(cb func(CellLayout, *CellRenderer, int)) {
 	if cb == nil {
 		x.xReorder = 0
 	} else {
@@ -193,8 +193,8 @@ 		})
 	}
 }
 
-// GetCallbackReorder gets the callback function.
-func (x *CellLayoutIface) GetCallbackReorder() func(CellLayout, *CellRenderer, int) {
+// GetReorder gets the callback function.
+func (x *CellLayoutIface) GetReorder() func(CellLayout, *CellRenderer, int) {
 	if x.xReorder == 0 {
 		return nil
 	}
@@ -205,8 +205,8 @@ 		rawCallback(CellLayoutVar.GoPointer(), CellVar.GoPointer(), PositionVar)
 	}
 }
 
-// SetCallbackGetCells sets the callback function.
-func (x *CellLayoutIface) SetCallbackGetCells(cb func(CellLayout) *glib.List) {
+// OverrideGetCells sets the callback function.
+func (x *CellLayoutIface) OverrideGetCells(cb func(CellLayout) *glib.List) {
 	if cb == nil {
 		x.xGetCells = 0
 	} else {
@@ -216,8 +216,8 @@ 		})
 	}
 }
 
-// GetCallbackGetCells gets the callback function.
-func (x *CellLayoutIface) GetCallbackGetCells() func(CellLayout) *glib.List {
+// GetGetCells gets the callback function.
+func (x *CellLayoutIface) GetGetCells() func(CellLayout) *glib.List {
 	if x.xGetCells == 0 {
 		return nil
 	}
@@ -228,8 +228,8 @@ 		return rawCallback(CellLayoutVar.GoPointer())
 	}
 }
 
-// SetCallbackGetArea sets the callback function.
-func (x *CellLayoutIface) SetCallbackGetArea(cb func(CellLayout) *CellArea) {
+// OverrideGetArea sets the callback function.
+func (x *CellLayoutIface) OverrideGetArea(cb func(CellLayout) *CellArea) {
 	if cb == nil {
 		x.xGetArea = 0
 	} else {
@@ -243,8 +243,8 @@ 		})
 	}
 }
 
-// GetCallbackGetArea gets the callback function.
-func (x *CellLayoutIface) GetCallbackGetArea() func(CellLayout) *CellArea {
+// GetGetArea gets the callback function.
+func (x *CellLayoutIface) GetGetArea() func(CellLayout) *CellArea {
 	if x.xGetArea == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkcellrenderer.go b/v4/gtk/gtkcellrenderer.go
index 05926c6ffa64591dde9acbefe6c3590c836b1284..d88a404d9e143cc32cd8c4ea3691083fb7db0ec1 100644
--- a/v4/gtk/gtkcellrenderer.go
+++ b/v4/gtk/gtkcellrenderer.go
@@ -47,8 +47,8 @@ func (x *CellRendererClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetRequestMode sets the callback function.
-func (x *CellRendererClass) SetCallbackGetRequestMode(cb func(*CellRenderer) SizeRequestMode) {
+// OverrideGetRequestMode sets the callback function.
+func (x *CellRendererClass) OverrideGetRequestMode(cb func(*CellRenderer) SizeRequestMode) {
 	if cb == nil {
 		x.xGetRequestMode = 0
 	} else {
@@ -58,8 +58,8 @@ 		})
 	}
 }
 
-// GetCallbackGetRequestMode gets the callback function.
-func (x *CellRendererClass) GetCallbackGetRequestMode() func(*CellRenderer) SizeRequestMode {
+// GetGetRequestMode gets the callback function.
+func (x *CellRendererClass) GetGetRequestMode() func(*CellRenderer) SizeRequestMode {
 	if x.xGetRequestMode == 0 {
 		return nil
 	}
@@ -70,8 +70,8 @@ 		return rawCallback(CellVar.GoPointer())
 	}
 }
 
-// SetCallbackGetPreferredWidth sets the callback function.
-func (x *CellRendererClass) SetCallbackGetPreferredWidth(cb func(*CellRenderer, *Widget, int, int)) {
+// OverrideGetPreferredWidth sets the callback function.
+func (x *CellRendererClass) OverrideGetPreferredWidth(cb func(*CellRenderer, *Widget, int, int)) {
 	if cb == nil {
 		x.xGetPreferredWidth = 0
 	} else {
@@ -81,8 +81,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredWidth gets the callback function.
-func (x *CellRendererClass) GetCallbackGetPreferredWidth() func(*CellRenderer, *Widget, int, int) {
+// GetGetPreferredWidth gets the callback function.
+func (x *CellRendererClass) GetGetPreferredWidth() func(*CellRenderer, *Widget, int, int) {
 	if x.xGetPreferredWidth == 0 {
 		return nil
 	}
@@ -93,8 +93,8 @@ 		rawCallback(CellVar.GoPointer(), WidgetVar.GoPointer(), MinimumSizeVar, NaturalSizeVar)
 	}
 }
 
-// SetCallbackGetPreferredHeightForWidth sets the callback function.
-func (x *CellRendererClass) SetCallbackGetPreferredHeightForWidth(cb func(*CellRenderer, *Widget, int, int, int)) {
+// OverrideGetPreferredHeightForWidth sets the callback function.
+func (x *CellRendererClass) OverrideGetPreferredHeightForWidth(cb func(*CellRenderer, *Widget, int, int, int)) {
 	if cb == nil {
 		x.xGetPreferredHeightForWidth = 0
 	} else {
@@ -104,8 +104,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredHeightForWidth gets the callback function.
-func (x *CellRendererClass) GetCallbackGetPreferredHeightForWidth() func(*CellRenderer, *Widget, int, int, int) {
+// GetGetPreferredHeightForWidth gets the callback function.
+func (x *CellRendererClass) GetGetPreferredHeightForWidth() func(*CellRenderer, *Widget, int, int, int) {
 	if x.xGetPreferredHeightForWidth == 0 {
 		return nil
 	}
@@ -116,8 +116,8 @@ 		rawCallback(CellVar.GoPointer(), WidgetVar.GoPointer(), WidthVar, MinimumHeightVar, NaturalHeightVar)
 	}
 }
 
-// SetCallbackGetPreferredHeight sets the callback function.
-func (x *CellRendererClass) SetCallbackGetPreferredHeight(cb func(*CellRenderer, *Widget, int, int)) {
+// OverrideGetPreferredHeight sets the callback function.
+func (x *CellRendererClass) OverrideGetPreferredHeight(cb func(*CellRenderer, *Widget, int, int)) {
 	if cb == nil {
 		x.xGetPreferredHeight = 0
 	} else {
@@ -127,8 +127,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredHeight gets the callback function.
-func (x *CellRendererClass) GetCallbackGetPreferredHeight() func(*CellRenderer, *Widget, int, int) {
+// GetGetPreferredHeight gets the callback function.
+func (x *CellRendererClass) GetGetPreferredHeight() func(*CellRenderer, *Widget, int, int) {
 	if x.xGetPreferredHeight == 0 {
 		return nil
 	}
@@ -139,8 +139,8 @@ 		rawCallback(CellVar.GoPointer(), WidgetVar.GoPointer(), MinimumSizeVar, NaturalSizeVar)
 	}
 }
 
-// SetCallbackGetPreferredWidthForHeight sets the callback function.
-func (x *CellRendererClass) SetCallbackGetPreferredWidthForHeight(cb func(*CellRenderer, *Widget, int, int, int)) {
+// OverrideGetPreferredWidthForHeight sets the callback function.
+func (x *CellRendererClass) OverrideGetPreferredWidthForHeight(cb func(*CellRenderer, *Widget, int, int, int)) {
 	if cb == nil {
 		x.xGetPreferredWidthForHeight = 0
 	} else {
@@ -150,8 +150,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreferredWidthForHeight gets the callback function.
-func (x *CellRendererClass) GetCallbackGetPreferredWidthForHeight() func(*CellRenderer, *Widget, int, int, int) {
+// GetGetPreferredWidthForHeight gets the callback function.
+func (x *CellRendererClass) GetGetPreferredWidthForHeight() func(*CellRenderer, *Widget, int, int, int) {
 	if x.xGetPreferredWidthForHeight == 0 {
 		return nil
 	}
@@ -162,8 +162,8 @@ 		rawCallback(CellVar.GoPointer(), WidgetVar.GoPointer(), HeightVar, MinimumWidthVar, NaturalWidthVar)
 	}
 }
 
-// SetCallbackGetAlignedArea sets the callback function.
-func (x *CellRendererClass) SetCallbackGetAlignedArea(cb func(*CellRenderer, *Widget, CellRendererState, *gdk.Rectangle, *gdk.Rectangle)) {
+// OverrideGetAlignedArea sets the callback function.
+func (x *CellRendererClass) OverrideGetAlignedArea(cb func(*CellRenderer, *Widget, CellRendererState, *gdk.Rectangle, *gdk.Rectangle)) {
 	if cb == nil {
 		x.xGetAlignedArea = 0
 	} else {
@@ -173,8 +173,8 @@ 		})
 	}
 }
 
-// GetCallbackGetAlignedArea gets the callback function.
-func (x *CellRendererClass) GetCallbackGetAlignedArea() func(*CellRenderer, *Widget, CellRendererState, *gdk.Rectangle, *gdk.Rectangle) {
+// GetGetAlignedArea gets the callback function.
+func (x *CellRendererClass) GetGetAlignedArea() func(*CellRenderer, *Widget, CellRendererState, *gdk.Rectangle, *gdk.Rectangle) {
 	if x.xGetAlignedArea == 0 {
 		return nil
 	}
@@ -185,8 +185,8 @@ 		rawCallback(CellVar.GoPointer(), WidgetVar.GoPointer(), FlagsVar, CellAreaVar, AlignedAreaVar)
 	}
 }
 
-// SetCallbackSnapshot sets the callback function.
-func (x *CellRendererClass) SetCallbackSnapshot(cb func(*CellRenderer, *Snapshot, *Widget, *gdk.Rectangle, *gdk.Rectangle, CellRendererState)) {
+// OverrideSnapshot sets the callback function.
+func (x *CellRendererClass) OverrideSnapshot(cb func(*CellRenderer, *Snapshot, *Widget, *gdk.Rectangle, *gdk.Rectangle, CellRendererState)) {
 	if cb == nil {
 		x.xSnapshot = 0
 	} else {
@@ -196,8 +196,8 @@ 		})
 	}
 }
 
-// GetCallbackSnapshot gets the callback function.
-func (x *CellRendererClass) GetCallbackSnapshot() func(*CellRenderer, *Snapshot, *Widget, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) {
+// GetSnapshot gets the callback function.
+func (x *CellRendererClass) GetSnapshot() func(*CellRenderer, *Snapshot, *Widget, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) {
 	if x.xSnapshot == 0 {
 		return nil
 	}
@@ -208,8 +208,8 @@ 		rawCallback(CellVar.GoPointer(), SnapshotVar.GoPointer(), WidgetVar.GoPointer(), BackgroundAreaVar, CellAreaVar, FlagsVar)
 	}
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *CellRendererClass) SetCallbackActivate(cb func(*CellRenderer, *gdk.Event, *Widget, string, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) bool) {
+// OverrideActivate sets the callback function.
+func (x *CellRendererClass) OverrideActivate(cb func(*CellRenderer, *gdk.Event, *Widget, string, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) bool) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -219,8 +219,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *CellRendererClass) GetCallbackActivate() func(*CellRenderer, *gdk.Event, *Widget, string, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) bool {
+// GetActivate gets the callback function.
+func (x *CellRendererClass) GetActivate() func(*CellRenderer, *gdk.Event, *Widget, string, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) bool {
 	if x.xActivate == 0 {
 		return nil
 	}
@@ -231,8 +231,8 @@ 		return rawCallback(CellVar.GoPointer(), EventVar.GoPointer(), WidgetVar.GoPointer(), PathVar, BackgroundAreaVar, CellAreaVar, FlagsVar)
 	}
 }
 
-// SetCallbackStartEditing sets the callback function.
-func (x *CellRendererClass) SetCallbackStartEditing(cb func(*CellRenderer, *gdk.Event, *Widget, string, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) *CellEditableBase) {
+// OverrideStartEditing sets the callback function.
+func (x *CellRendererClass) OverrideStartEditing(cb func(*CellRenderer, *gdk.Event, *Widget, string, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) *CellEditableBase) {
 	if cb == nil {
 		x.xStartEditing = 0
 	} else {
@@ -246,8 +246,8 @@ 		})
 	}
 }
 
-// GetCallbackStartEditing gets the callback function.
-func (x *CellRendererClass) GetCallbackStartEditing() func(*CellRenderer, *gdk.Event, *Widget, string, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) *CellEditableBase {
+// GetStartEditing gets the callback function.
+func (x *CellRendererClass) GetStartEditing() func(*CellRenderer, *gdk.Event, *Widget, string, *gdk.Rectangle, *gdk.Rectangle, CellRendererState) *CellEditableBase {
 	if x.xStartEditing == 0 {
 		return nil
 	}
@@ -264,8 +264,8 @@ 		return ret
 	}
 }
 
-// SetCallbackEditingCanceled sets the callback function.
-func (x *CellRendererClass) SetCallbackEditingCanceled(cb func(*CellRenderer)) {
+// OverrideEditingCanceled sets the callback function.
+func (x *CellRendererClass) OverrideEditingCanceled(cb func(*CellRenderer)) {
 	if cb == nil {
 		x.xEditingCanceled = 0
 	} else {
@@ -275,8 +275,8 @@ 		})
 	}
 }
 
-// GetCallbackEditingCanceled gets the callback function.
-func (x *CellRendererClass) GetCallbackEditingCanceled() func(*CellRenderer) {
+// GetEditingCanceled gets the callback function.
+func (x *CellRendererClass) GetEditingCanceled() func(*CellRenderer) {
 	if x.xEditingCanceled == 0 {
 		return nil
 	}
@@ -287,8 +287,8 @@ 		rawCallback(CellVar.GoPointer())
 	}
 }
 
-// SetCallbackEditingStarted sets the callback function.
-func (x *CellRendererClass) SetCallbackEditingStarted(cb func(*CellRenderer, CellEditable, string)) {
+// OverrideEditingStarted sets the callback function.
+func (x *CellRendererClass) OverrideEditingStarted(cb func(*CellRenderer, CellEditable, string)) {
 	if cb == nil {
 		x.xEditingStarted = 0
 	} else {
@@ -298,8 +298,8 @@ 		})
 	}
 }
 
-// GetCallbackEditingStarted gets the callback function.
-func (x *CellRendererClass) GetCallbackEditingStarted() func(*CellRenderer, CellEditable, string) {
+// GetEditingStarted gets the callback function.
+func (x *CellRendererClass) GetEditingStarted() func(*CellRenderer, CellEditable, string) {
 	if x.xEditingStarted == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkcellrenderertext.go b/v4/gtk/gtkcellrenderertext.go
index a498da9f4ed1e91ad54fd96ab28ae24b6d684640..5ba4a009e2e7d2d9767b2e6d8b4ecea2d83ac05f 100644
--- a/v4/gtk/gtkcellrenderertext.go
+++ b/v4/gtk/gtkcellrenderertext.go
@@ -26,8 +26,8 @@ func (x *CellRendererTextClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackEdited sets the callback function.
-func (x *CellRendererTextClass) SetCallbackEdited(cb func(*CellRendererText, string, string)) {
+// OverrideEdited sets the callback function.
+func (x *CellRendererTextClass) OverrideEdited(cb func(*CellRendererText, string, string)) {
 	if cb == nil {
 		x.xEdited = 0
 	} else {
@@ -37,8 +37,8 @@ 		})
 	}
 }
 
-// GetCallbackEdited gets the callback function.
-func (x *CellRendererTextClass) GetCallbackEdited() func(*CellRendererText, string, string) {
+// GetEdited gets the callback function.
+func (x *CellRendererTextClass) GetEdited() func(*CellRendererText, string, string) {
 	if x.xEdited == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkcheckbutton.go b/v4/gtk/gtkcheckbutton.go
index 97ab7a091326ac7b1629e77ca825860116a40d92..5ed5742548a6c4300552251bd7b6e87b37545b0a 100644
--- a/v4/gtk/gtkcheckbutton.go
+++ b/v4/gtk/gtkcheckbutton.go
@@ -28,8 +28,8 @@ func (x *CheckButtonClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackToggled sets the callback function.
-func (x *CheckButtonClass) SetCallbackToggled(cb func(*CheckButton)) {
+// OverrideToggled sets the callback function.
+func (x *CheckButtonClass) OverrideToggled(cb func(*CheckButton)) {
 	if cb == nil {
 		x.xToggled = 0
 	} else {
@@ -39,8 +39,8 @@ 		})
 	}
 }
 
-// GetCallbackToggled gets the callback function.
-func (x *CheckButtonClass) GetCallbackToggled() func(*CheckButton) {
+// GetToggled gets the callback function.
+func (x *CheckButtonClass) GetToggled() func(*CheckButton) {
 	if x.xToggled == 0 {
 		return nil
 	}
@@ -51,8 +51,8 @@ 		rawCallback(CheckButtonVar.GoPointer())
 	}
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *CheckButtonClass) SetCallbackActivate(cb func(*CheckButton)) {
+// OverrideActivate sets the callback function.
+func (x *CheckButtonClass) OverrideActivate(cb func(*CheckButton)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -62,8 +62,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *CheckButtonClass) GetCallbackActivate() func(*CheckButton) {
+// GetActivate gets the callback function.
+func (x *CheckButtonClass) GetActivate() func(*CheckButton) {
 	if x.xActivate == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkcolorchooser.go b/v4/gtk/gtkcolorchooser.go
index 3cd656446580ff8b3b1ab50a84a8ea75f266ee2d..8727841b14dda7d3758c0c9cf2234c4d701899c2 100644
--- a/v4/gtk/gtkcolorchooser.go
+++ b/v4/gtk/gtkcolorchooser.go
@@ -31,8 +31,8 @@ func (x *ColorChooserInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetRgba sets the callback function.
-func (x *ColorChooserInterface) SetCallbackGetRgba(cb func(ColorChooser, *gdk.RGBA)) {
+// OverrideGetRgba sets the callback function.
+func (x *ColorChooserInterface) OverrideGetRgba(cb func(ColorChooser, *gdk.RGBA)) {
 	if cb == nil {
 		x.xGetRgba = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackGetRgba gets the callback function.
-func (x *ColorChooserInterface) GetCallbackGetRgba() func(ColorChooser, *gdk.RGBA) {
+// GetGetRgba gets the callback function.
+func (x *ColorChooserInterface) GetGetRgba() func(ColorChooser, *gdk.RGBA) {
 	if x.xGetRgba == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback(ChooserVar.GoPointer(), ColorVar)
 	}
 }
 
-// SetCallbackSetRgba sets the callback function.
-func (x *ColorChooserInterface) SetCallbackSetRgba(cb func(ColorChooser, *gdk.RGBA)) {
+// OverrideSetRgba sets the callback function.
+func (x *ColorChooserInterface) OverrideSetRgba(cb func(ColorChooser, *gdk.RGBA)) {
 	if cb == nil {
 		x.xSetRgba = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackSetRgba gets the callback function.
-func (x *ColorChooserInterface) GetCallbackSetRgba() func(ColorChooser, *gdk.RGBA) {
+// GetSetRgba gets the callback function.
+func (x *ColorChooserInterface) GetSetRgba() func(ColorChooser, *gdk.RGBA) {
 	if x.xSetRgba == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback(ChooserVar.GoPointer(), ColorVar)
 	}
 }
 
-// SetCallbackAddPalette sets the callback function.
-func (x *ColorChooserInterface) SetCallbackAddPalette(cb func(ColorChooser, Orientation, int, int, []gdk.RGBA)) {
+// OverrideAddPalette sets the callback function.
+func (x *ColorChooserInterface) OverrideAddPalette(cb func(ColorChooser, Orientation, int, int, []gdk.RGBA)) {
 	if cb == nil {
 		x.xAddPalette = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackAddPalette gets the callback function.
-func (x *ColorChooserInterface) GetCallbackAddPalette() func(ColorChooser, Orientation, int, int, []gdk.RGBA) {
+// GetAddPalette gets the callback function.
+func (x *ColorChooserInterface) GetAddPalette() func(ColorChooser, Orientation, int, int, []gdk.RGBA) {
 	if x.xAddPalette == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback(ChooserVar.GoPointer(), OrientationVar, ColorsPerLineVar, NColorsVar, ColorsVar)
 	}
 }
 
-// SetCallbackColorActivated sets the callback function.
-func (x *ColorChooserInterface) SetCallbackColorActivated(cb func(ColorChooser, *gdk.RGBA)) {
+// OverrideColorActivated sets the callback function.
+func (x *ColorChooserInterface) OverrideColorActivated(cb func(ColorChooser, *gdk.RGBA)) {
 	if cb == nil {
 		x.xColorActivated = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackColorActivated gets the callback function.
-func (x *ColorChooserInterface) GetCallbackColorActivated() func(ColorChooser, *gdk.RGBA) {
+// GetColorActivated gets the callback function.
+func (x *ColorChooserInterface) GetColorActivated() func(ColorChooser, *gdk.RGBA) {
 	if x.xColorActivated == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkcombobox.go b/v4/gtk/gtkcombobox.go
index 2fa984c99537fcd3399b22b0ddb681f5bea7c79c..fddba6c9c46613492795d5438a16503ff47e055f 100644
--- a/v4/gtk/gtkcombobox.go
+++ b/v4/gtk/gtkcombobox.go
@@ -31,8 +31,8 @@ func (x *ComboBoxClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *ComboBoxClass) SetCallbackChanged(cb func(*ComboBox)) {
+// OverrideChanged sets the callback function.
+func (x *ComboBoxClass) OverrideChanged(cb func(*ComboBox)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *ComboBoxClass) GetCallbackChanged() func(*ComboBox) {
+// GetChanged gets the callback function.
+func (x *ComboBoxClass) GetChanged() func(*ComboBox) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback(ComboBoxVar.GoPointer())
 	}
 }
 
-// SetCallbackFormatEntryText sets the callback function.
-func (x *ComboBoxClass) SetCallbackFormatEntryText(cb func(*ComboBox, string) string) {
+// OverrideFormatEntryText sets the callback function.
+func (x *ComboBoxClass) OverrideFormatEntryText(cb func(*ComboBox, string) string) {
 	if cb == nil {
 		x.xFormatEntryText = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackFormatEntryText gets the callback function.
-func (x *ComboBoxClass) GetCallbackFormatEntryText() func(*ComboBox, string) string {
+// GetFormatEntryText gets the callback function.
+func (x *ComboBoxClass) GetFormatEntryText() func(*ComboBox, string) string {
 	if x.xFormatEntryText == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		return rawCallback(ComboBoxVar.GoPointer(), PathVar)
 	}
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *ComboBoxClass) SetCallbackActivate(cb func(*ComboBox)) {
+// OverrideActivate sets the callback function.
+func (x *ComboBoxClass) OverrideActivate(cb func(*ComboBox)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *ComboBoxClass) GetCallbackActivate() func(*ComboBox) {
+// GetActivate gets the callback function.
+func (x *ComboBoxClass) GetActivate() func(*ComboBox) {
 	if x.xActivate == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkdialog.go b/v4/gtk/gtkdialog.go
index 65f1bdc39ec13e0a661f68a7e213ee1f9fbd7823..03f62e55d7b2444beeb954a2a60963b8f47e50a2 100644
--- a/v4/gtk/gtkdialog.go
+++ b/v4/gtk/gtkdialog.go
@@ -30,8 +30,8 @@ func (x *DialogClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackResponse sets the callback function.
-func (x *DialogClass) SetCallbackResponse(cb func(*Dialog, int)) {
+// OverrideResponse sets the callback function.
+func (x *DialogClass) OverrideResponse(cb func(*Dialog, int)) {
 	if cb == nil {
 		x.xResponse = 0
 	} else {
@@ -41,8 +41,8 @@ 		})
 	}
 }
 
-// GetCallbackResponse gets the callback function.
-func (x *DialogClass) GetCallbackResponse() func(*Dialog, int) {
+// GetResponse gets the callback function.
+func (x *DialogClass) GetResponse() func(*Dialog, int) {
 	if x.xResponse == 0 {
 		return nil
 	}
@@ -53,8 +53,8 @@ 		rawCallback(DialogVar.GoPointer(), ResponseIdVar)
 	}
 }
 
-// SetCallbackClose sets the callback function.
-func (x *DialogClass) SetCallbackClose(cb func(*Dialog)) {
+// OverrideClose sets the callback function.
+func (x *DialogClass) OverrideClose(cb func(*Dialog)) {
 	if cb == nil {
 		x.xClose = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackClose gets the callback function.
-func (x *DialogClass) GetCallbackClose() func(*Dialog) {
+// GetClose gets the callback function.
+func (x *DialogClass) GetClose() func(*Dialog) {
 	if x.xClose == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkdrawingarea.go b/v4/gtk/gtkdrawingarea.go
index e7530611bf7157a9a6c56d379cae5b3054c05897..6284978d0e9702412e8710b3dba2b9809b8db5bc 100644
--- a/v4/gtk/gtkdrawingarea.go
+++ b/v4/gtk/gtkdrawingarea.go
@@ -33,8 +33,8 @@ func (x *DrawingAreaClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackResize sets the callback function.
-func (x *DrawingAreaClass) SetCallbackResize(cb func(*DrawingArea, int, int)) {
+// OverrideResize sets the callback function.
+func (x *DrawingAreaClass) OverrideResize(cb func(*DrawingArea, int, int)) {
 	if cb == nil {
 		x.xResize = 0
 	} else {
@@ -44,8 +44,8 @@ 		})
 	}
 }
 
-// GetCallbackResize gets the callback function.
-func (x *DrawingAreaClass) GetCallbackResize() func(*DrawingArea, int, int) {
+// GetResize gets the callback function.
+func (x *DrawingAreaClass) GetResize() func(*DrawingArea, int, int) {
 	if x.xResize == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkeditable.go b/v4/gtk/gtkeditable.go
index 97100f40fc8b992a8e5337f2982a7c60000fdde4..2590b07c6048b93ade424f3fd018ee0e88ce126a 100644
--- a/v4/gtk/gtkeditable.go
+++ b/v4/gtk/gtkeditable.go
@@ -39,8 +39,8 @@ func (x *EditableInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackInsertText sets the callback function.
-func (x *EditableInterface) SetCallbackInsertText(cb func(Editable, string, int, int)) {
+// OverrideInsertText sets the callback function.
+func (x *EditableInterface) OverrideInsertText(cb func(Editable, string, int, int)) {
 	if cb == nil {
 		x.xInsertText = 0
 	} else {
@@ -50,8 +50,8 @@ 		})
 	}
 }
 
-// GetCallbackInsertText gets the callback function.
-func (x *EditableInterface) GetCallbackInsertText() func(Editable, string, int, int) {
+// GetInsertText gets the callback function.
+func (x *EditableInterface) GetInsertText() func(Editable, string, int, int) {
 	if x.xInsertText == 0 {
 		return nil
 	}
@@ -62,8 +62,8 @@ 		rawCallback(EditableVar.GoPointer(), TextVar, LengthVar, PositionVar)
 	}
 }
 
-// SetCallbackDeleteText sets the callback function.
-func (x *EditableInterface) SetCallbackDeleteText(cb func(Editable, int, int)) {
+// OverrideDeleteText sets the callback function.
+func (x *EditableInterface) OverrideDeleteText(cb func(Editable, int, int)) {
 	if cb == nil {
 		x.xDeleteText = 0
 	} else {
@@ -73,8 +73,8 @@ 		})
 	}
 }
 
-// GetCallbackDeleteText gets the callback function.
-func (x *EditableInterface) GetCallbackDeleteText() func(Editable, int, int) {
+// GetDeleteText gets the callback function.
+func (x *EditableInterface) GetDeleteText() func(Editable, int, int) {
 	if x.xDeleteText == 0 {
 		return nil
 	}
@@ -85,8 +85,8 @@ 		rawCallback(EditableVar.GoPointer(), StartPosVar, EndPosVar)
 	}
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *EditableInterface) SetCallbackChanged(cb func(Editable)) {
+// OverrideChanged sets the callback function.
+func (x *EditableInterface) OverrideChanged(cb func(Editable)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -96,8 +96,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *EditableInterface) GetCallbackChanged() func(Editable) {
+// GetChanged gets the callback function.
+func (x *EditableInterface) GetChanged() func(Editable) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -108,8 +108,8 @@ 		rawCallback(EditableVar.GoPointer())
 	}
 }
 
-// SetCallbackGetText sets the callback function.
-func (x *EditableInterface) SetCallbackGetText(cb func(Editable) string) {
+// OverrideGetText sets the callback function.
+func (x *EditableInterface) OverrideGetText(cb func(Editable) string) {
 	if cb == nil {
 		x.xGetText = 0
 	} else {
@@ -119,8 +119,8 @@ 		})
 	}
 }
 
-// GetCallbackGetText gets the callback function.
-func (x *EditableInterface) GetCallbackGetText() func(Editable) string {
+// GetGetText gets the callback function.
+func (x *EditableInterface) GetGetText() func(Editable) string {
 	if x.xGetText == 0 {
 		return nil
 	}
@@ -131,8 +131,8 @@ 		return rawCallback(EditableVar.GoPointer())
 	}
 }
 
-// SetCallbackDoInsertText sets the callback function.
-func (x *EditableInterface) SetCallbackDoInsertText(cb func(Editable, string, int, int)) {
+// OverrideDoInsertText sets the callback function.
+func (x *EditableInterface) OverrideDoInsertText(cb func(Editable, string, int, int)) {
 	if cb == nil {
 		x.xDoInsertText = 0
 	} else {
@@ -142,8 +142,8 @@ 		})
 	}
 }
 
-// GetCallbackDoInsertText gets the callback function.
-func (x *EditableInterface) GetCallbackDoInsertText() func(Editable, string, int, int) {
+// GetDoInsertText gets the callback function.
+func (x *EditableInterface) GetDoInsertText() func(Editable, string, int, int) {
 	if x.xDoInsertText == 0 {
 		return nil
 	}
@@ -154,8 +154,8 @@ 		rawCallback(EditableVar.GoPointer(), TextVar, LengthVar, PositionVar)
 	}
 }
 
-// SetCallbackDoDeleteText sets the callback function.
-func (x *EditableInterface) SetCallbackDoDeleteText(cb func(Editable, int, int)) {
+// OverrideDoDeleteText sets the callback function.
+func (x *EditableInterface) OverrideDoDeleteText(cb func(Editable, int, int)) {
 	if cb == nil {
 		x.xDoDeleteText = 0
 	} else {
@@ -165,8 +165,8 @@ 		})
 	}
 }
 
-// GetCallbackDoDeleteText gets the callback function.
-func (x *EditableInterface) GetCallbackDoDeleteText() func(Editable, int, int) {
+// GetDoDeleteText gets the callback function.
+func (x *EditableInterface) GetDoDeleteText() func(Editable, int, int) {
 	if x.xDoDeleteText == 0 {
 		return nil
 	}
@@ -177,8 +177,8 @@ 		rawCallback(EditableVar.GoPointer(), StartPosVar, EndPosVar)
 	}
 }
 
-// SetCallbackGetSelectionBounds sets the callback function.
-func (x *EditableInterface) SetCallbackGetSelectionBounds(cb func(Editable, int, int) bool) {
+// OverrideGetSelectionBounds sets the callback function.
+func (x *EditableInterface) OverrideGetSelectionBounds(cb func(Editable, int, int) bool) {
 	if cb == nil {
 		x.xGetSelectionBounds = 0
 	} else {
@@ -188,8 +188,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSelectionBounds gets the callback function.
-func (x *EditableInterface) GetCallbackGetSelectionBounds() func(Editable, int, int) bool {
+// GetGetSelectionBounds gets the callback function.
+func (x *EditableInterface) GetGetSelectionBounds() func(Editable, int, int) bool {
 	if x.xGetSelectionBounds == 0 {
 		return nil
 	}
@@ -200,8 +200,8 @@ 		return rawCallback(EditableVar.GoPointer(), StartPosVar, EndPosVar)
 	}
 }
 
-// SetCallbackSetSelectionBounds sets the callback function.
-func (x *EditableInterface) SetCallbackSetSelectionBounds(cb func(Editable, int, int)) {
+// OverrideSetSelectionBounds sets the callback function.
+func (x *EditableInterface) OverrideSetSelectionBounds(cb func(Editable, int, int)) {
 	if cb == nil {
 		x.xSetSelectionBounds = 0
 	} else {
@@ -211,8 +211,8 @@ 		})
 	}
 }
 
-// GetCallbackSetSelectionBounds gets the callback function.
-func (x *EditableInterface) GetCallbackSetSelectionBounds() func(Editable, int, int) {
+// GetSetSelectionBounds gets the callback function.
+func (x *EditableInterface) GetSetSelectionBounds() func(Editable, int, int) {
 	if x.xSetSelectionBounds == 0 {
 		return nil
 	}
@@ -223,8 +223,8 @@ 		rawCallback(EditableVar.GoPointer(), StartPosVar, EndPosVar)
 	}
 }
 
-// SetCallbackGetDelegate sets the callback function.
-func (x *EditableInterface) SetCallbackGetDelegate(cb func(Editable) *EditableBase) {
+// OverrideGetDelegate sets the callback function.
+func (x *EditableInterface) OverrideGetDelegate(cb func(Editable) *EditableBase) {
 	if cb == nil {
 		x.xGetDelegate = 0
 	} else {
@@ -238,8 +238,8 @@ 		})
 	}
 }
 
-// GetCallbackGetDelegate gets the callback function.
-func (x *EditableInterface) GetCallbackGetDelegate() func(Editable) *EditableBase {
+// GetGetDelegate gets the callback function.
+func (x *EditableInterface) GetGetDelegate() func(Editable) *EditableBase {
 	if x.xGetDelegate == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkentry.go b/v4/gtk/gtkentry.go
index 3dbf899cb4f4703d684eaa943f44b67792115b32..c3f5e21dff81fd828187fc5a6d3380e2c7ab98db 100644
--- a/v4/gtk/gtkentry.go
+++ b/v4/gtk/gtkentry.go
@@ -34,8 +34,8 @@ func (x *EntryClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *EntryClass) SetCallbackActivate(cb func(*Entry)) {
+// OverrideActivate sets the callback function.
+func (x *EntryClass) OverrideActivate(cb func(*Entry)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -45,8 +45,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *EntryClass) GetCallbackActivate() func(*Entry) {
+// GetActivate gets the callback function.
+func (x *EntryClass) GetActivate() func(*Entry) {
 	if x.xActivate == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkentrybuffer.go b/v4/gtk/gtkentrybuffer.go
index 351f4297412253ea6ffc6c55fb0bd5f09bd829d5..6d046e942efbd35a190a1792539f5ad24588afc5 100644
--- a/v4/gtk/gtkentrybuffer.go
+++ b/v4/gtk/gtkentrybuffer.go
@@ -50,8 +50,8 @@ func (x *EntryBufferClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackInsertedText sets the callback function.
-func (x *EntryBufferClass) SetCallbackInsertedText(cb func(*EntryBuffer, uint, string, uint)) {
+// OverrideInsertedText sets the callback function.
+func (x *EntryBufferClass) OverrideInsertedText(cb func(*EntryBuffer, uint, string, uint)) {
 	if cb == nil {
 		x.xInsertedText = 0
 	} else {
@@ -61,8 +61,8 @@ 		})
 	}
 }
 
-// GetCallbackInsertedText gets the callback function.
-func (x *EntryBufferClass) GetCallbackInsertedText() func(*EntryBuffer, uint, string, uint) {
+// GetInsertedText gets the callback function.
+func (x *EntryBufferClass) GetInsertedText() func(*EntryBuffer, uint, string, uint) {
 	if x.xInsertedText == 0 {
 		return nil
 	}
@@ -73,8 +73,8 @@ 		rawCallback(BufferVar.GoPointer(), PositionVar, CharsVar, NCharsVar)
 	}
 }
 
-// SetCallbackDeletedText sets the callback function.
-func (x *EntryBufferClass) SetCallbackDeletedText(cb func(*EntryBuffer, uint, uint)) {
+// OverrideDeletedText sets the callback function.
+func (x *EntryBufferClass) OverrideDeletedText(cb func(*EntryBuffer, uint, uint)) {
 	if cb == nil {
 		x.xDeletedText = 0
 	} else {
@@ -84,8 +84,8 @@ 		})
 	}
 }
 
-// GetCallbackDeletedText gets the callback function.
-func (x *EntryBufferClass) GetCallbackDeletedText() func(*EntryBuffer, uint, uint) {
+// GetDeletedText gets the callback function.
+func (x *EntryBufferClass) GetDeletedText() func(*EntryBuffer, uint, uint) {
 	if x.xDeletedText == 0 {
 		return nil
 	}
@@ -96,8 +96,8 @@ 		rawCallback(BufferVar.GoPointer(), PositionVar, NCharsVar)
 	}
 }
 
-// SetCallbackGetText sets the callback function.
-func (x *EntryBufferClass) SetCallbackGetText(cb func(*EntryBuffer, uint) string) {
+// OverrideGetText sets the callback function.
+func (x *EntryBufferClass) OverrideGetText(cb func(*EntryBuffer, uint) string) {
 	if cb == nil {
 		x.xGetText = 0
 	} else {
@@ -107,8 +107,8 @@ 		})
 	}
 }
 
-// GetCallbackGetText gets the callback function.
-func (x *EntryBufferClass) GetCallbackGetText() func(*EntryBuffer, uint) string {
+// GetGetText gets the callback function.
+func (x *EntryBufferClass) GetGetText() func(*EntryBuffer, uint) string {
 	if x.xGetText == 0 {
 		return nil
 	}
@@ -119,8 +119,8 @@ 		return rawCallback(BufferVar.GoPointer(), NBytesVar)
 	}
 }
 
-// SetCallbackGetLength sets the callback function.
-func (x *EntryBufferClass) SetCallbackGetLength(cb func(*EntryBuffer) uint) {
+// OverrideGetLength sets the callback function.
+func (x *EntryBufferClass) OverrideGetLength(cb func(*EntryBuffer) uint) {
 	if cb == nil {
 		x.xGetLength = 0
 	} else {
@@ -130,8 +130,8 @@ 		})
 	}
 }
 
-// GetCallbackGetLength gets the callback function.
-func (x *EntryBufferClass) GetCallbackGetLength() func(*EntryBuffer) uint {
+// GetGetLength gets the callback function.
+func (x *EntryBufferClass) GetGetLength() func(*EntryBuffer) uint {
 	if x.xGetLength == 0 {
 		return nil
 	}
@@ -142,8 +142,8 @@ 		return rawCallback(BufferVar.GoPointer())
 	}
 }
 
-// SetCallbackInsertText sets the callback function.
-func (x *EntryBufferClass) SetCallbackInsertText(cb func(*EntryBuffer, uint, string, uint) uint) {
+// OverrideInsertText sets the callback function.
+func (x *EntryBufferClass) OverrideInsertText(cb func(*EntryBuffer, uint, string, uint) uint) {
 	if cb == nil {
 		x.xInsertText = 0
 	} else {
@@ -153,8 +153,8 @@ 		})
 	}
 }
 
-// GetCallbackInsertText gets the callback function.
-func (x *EntryBufferClass) GetCallbackInsertText() func(*EntryBuffer, uint, string, uint) uint {
+// GetInsertText gets the callback function.
+func (x *EntryBufferClass) GetInsertText() func(*EntryBuffer, uint, string, uint) uint {
 	if x.xInsertText == 0 {
 		return nil
 	}
@@ -165,8 +165,8 @@ 		return rawCallback(BufferVar.GoPointer(), PositionVar, CharsVar, NCharsVar)
 	}
 }
 
-// SetCallbackDeleteText sets the callback function.
-func (x *EntryBufferClass) SetCallbackDeleteText(cb func(*EntryBuffer, uint, uint) uint) {
+// OverrideDeleteText sets the callback function.
+func (x *EntryBufferClass) OverrideDeleteText(cb func(*EntryBuffer, uint, uint) uint) {
 	if cb == nil {
 		x.xDeleteText = 0
 	} else {
@@ -176,8 +176,8 @@ 		})
 	}
 }
 
-// GetCallbackDeleteText gets the callback function.
-func (x *EntryBufferClass) GetCallbackDeleteText() func(*EntryBuffer, uint, uint) uint {
+// GetDeleteText gets the callback function.
+func (x *EntryBufferClass) GetDeleteText() func(*EntryBuffer, uint, uint) uint {
 	if x.xDeleteText == 0 {
 		return nil
 	}
@@ -188,8 +188,8 @@ 		return rawCallback(BufferVar.GoPointer(), PositionVar, NCharsVar)
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *EntryBufferClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *EntryBufferClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -199,8 +199,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *EntryBufferClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *EntryBufferClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -211,8 +211,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *EntryBufferClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *EntryBufferClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -222,8 +222,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *EntryBufferClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *EntryBufferClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -234,8 +234,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *EntryBufferClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *EntryBufferClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -245,8 +245,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *EntryBufferClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *EntryBufferClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -257,8 +257,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *EntryBufferClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *EntryBufferClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -268,8 +268,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *EntryBufferClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *EntryBufferClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
@@ -280,8 +280,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved5 sets the callback function.
-func (x *EntryBufferClass) SetCallbackGtkReserved5(cb func()) {
+// OverrideGtkReserved5 sets the callback function.
+func (x *EntryBufferClass) OverrideGtkReserved5(cb func()) {
 	if cb == nil {
 		x.xGtkReserved5 = 0
 	} else {
@@ -291,8 +291,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved5 gets the callback function.
-func (x *EntryBufferClass) GetCallbackGtkReserved5() func() {
+// GetGtkReserved5 gets the callback function.
+func (x *EntryBufferClass) GetGtkReserved5() func() {
 	if x.xGtkReserved5 == 0 {
 		return nil
 	}
@@ -303,8 +303,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved6 sets the callback function.
-func (x *EntryBufferClass) SetCallbackGtkReserved6(cb func()) {
+// OverrideGtkReserved6 sets the callback function.
+func (x *EntryBufferClass) OverrideGtkReserved6(cb func()) {
 	if cb == nil {
 		x.xGtkReserved6 = 0
 	} else {
@@ -314,8 +314,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved6 gets the callback function.
-func (x *EntryBufferClass) GetCallbackGtkReserved6() func() {
+// GetGtkReserved6 gets the callback function.
+func (x *EntryBufferClass) GetGtkReserved6() func() {
 	if x.xGtkReserved6 == 0 {
 		return nil
 	}
@@ -326,8 +326,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved7 sets the callback function.
-func (x *EntryBufferClass) SetCallbackGtkReserved7(cb func()) {
+// OverrideGtkReserved7 sets the callback function.
+func (x *EntryBufferClass) OverrideGtkReserved7(cb func()) {
 	if cb == nil {
 		x.xGtkReserved7 = 0
 	} else {
@@ -337,8 +337,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved7 gets the callback function.
-func (x *EntryBufferClass) GetCallbackGtkReserved7() func() {
+// GetGtkReserved7 gets the callback function.
+func (x *EntryBufferClass) GetGtkReserved7() func() {
 	if x.xGtkReserved7 == 0 {
 		return nil
 	}
@@ -349,8 +349,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved8 sets the callback function.
-func (x *EntryBufferClass) SetCallbackGtkReserved8(cb func()) {
+// OverrideGtkReserved8 sets the callback function.
+func (x *EntryBufferClass) OverrideGtkReserved8(cb func()) {
 	if cb == nil {
 		x.xGtkReserved8 = 0
 	} else {
@@ -360,8 +360,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved8 gets the callback function.
-func (x *EntryBufferClass) GetCallbackGtkReserved8() func() {
+// GetGtkReserved8 gets the callback function.
+func (x *EntryBufferClass) GetGtkReserved8() func() {
 	if x.xGtkReserved8 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkfilter.go b/v4/gtk/gtkfilter.go
index a8f59d17d675fd7d470fbae8f985e71ad2ec78d2..329e9c3c0f26031080ca7bf8ff8cf626ab96d52e 100644
--- a/v4/gtk/gtkfilter.go
+++ b/v4/gtk/gtkfilter.go
@@ -42,8 +42,8 @@ func (x *FilterClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackMatch sets the callback function.
-func (x *FilterClass) SetCallbackMatch(cb func(*Filter, *gobject.Object) bool) {
+// OverrideMatch sets the callback function.
+func (x *FilterClass) OverrideMatch(cb func(*Filter, *gobject.Object) bool) {
 	if cb == nil {
 		x.xMatch = 0
 	} else {
@@ -53,8 +53,8 @@ 		})
 	}
 }
 
-// GetCallbackMatch gets the callback function.
-func (x *FilterClass) GetCallbackMatch() func(*Filter, *gobject.Object) bool {
+// GetMatch gets the callback function.
+func (x *FilterClass) GetMatch() func(*Filter, *gobject.Object) bool {
 	if x.xMatch == 0 {
 		return nil
 	}
@@ -65,8 +65,8 @@ 		return rawCallback(SelfVar.GoPointer(), ItemVar.GoPointer())
 	}
 }
 
-// SetCallbackGetStrictness sets the callback function.
-func (x *FilterClass) SetCallbackGetStrictness(cb func(*Filter) FilterMatch) {
+// OverrideGetStrictness sets the callback function.
+func (x *FilterClass) OverrideGetStrictness(cb func(*Filter) FilterMatch) {
 	if cb == nil {
 		x.xGetStrictness = 0
 	} else {
@@ -76,8 +76,8 @@ 		})
 	}
 }
 
-// GetCallbackGetStrictness gets the callback function.
-func (x *FilterClass) GetCallbackGetStrictness() func(*Filter) FilterMatch {
+// GetGetStrictness gets the callback function.
+func (x *FilterClass) GetGetStrictness() func(*Filter) FilterMatch {
 	if x.xGetStrictness == 0 {
 		return nil
 	}
@@ -88,8 +88,8 @@ 		return rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *FilterClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *FilterClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -99,8 +99,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *FilterClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *FilterClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -111,8 +111,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *FilterClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *FilterClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -122,8 +122,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *FilterClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *FilterClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -134,8 +134,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *FilterClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *FilterClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -145,8 +145,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *FilterClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *FilterClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -157,8 +157,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *FilterClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *FilterClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -168,8 +168,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *FilterClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *FilterClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
@@ -180,8 +180,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved5 sets the callback function.
-func (x *FilterClass) SetCallbackGtkReserved5(cb func()) {
+// OverrideGtkReserved5 sets the callback function.
+func (x *FilterClass) OverrideGtkReserved5(cb func()) {
 	if cb == nil {
 		x.xGtkReserved5 = 0
 	} else {
@@ -191,8 +191,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved5 gets the callback function.
-func (x *FilterClass) GetCallbackGtkReserved5() func() {
+// GetGtkReserved5 gets the callback function.
+func (x *FilterClass) GetGtkReserved5() func() {
 	if x.xGtkReserved5 == 0 {
 		return nil
 	}
@@ -203,8 +203,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved6 sets the callback function.
-func (x *FilterClass) SetCallbackGtkReserved6(cb func()) {
+// OverrideGtkReserved6 sets the callback function.
+func (x *FilterClass) OverrideGtkReserved6(cb func()) {
 	if cb == nil {
 		x.xGtkReserved6 = 0
 	} else {
@@ -214,8 +214,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved6 gets the callback function.
-func (x *FilterClass) GetCallbackGtkReserved6() func() {
+// GetGtkReserved6 gets the callback function.
+func (x *FilterClass) GetGtkReserved6() func() {
 	if x.xGtkReserved6 == 0 {
 		return nil
 	}
@@ -226,8 +226,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved7 sets the callback function.
-func (x *FilterClass) SetCallbackGtkReserved7(cb func()) {
+// OverrideGtkReserved7 sets the callback function.
+func (x *FilterClass) OverrideGtkReserved7(cb func()) {
 	if cb == nil {
 		x.xGtkReserved7 = 0
 	} else {
@@ -237,8 +237,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved7 gets the callback function.
-func (x *FilterClass) GetCallbackGtkReserved7() func() {
+// GetGtkReserved7 gets the callback function.
+func (x *FilterClass) GetGtkReserved7() func() {
 	if x.xGtkReserved7 == 0 {
 		return nil
 	}
@@ -249,8 +249,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved8 sets the callback function.
-func (x *FilterClass) SetCallbackGtkReserved8(cb func()) {
+// OverrideGtkReserved8 sets the callback function.
+func (x *FilterClass) OverrideGtkReserved8(cb func()) {
 	if cb == nil {
 		x.xGtkReserved8 = 0
 	} else {
@@ -260,8 +260,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved8 gets the callback function.
-func (x *FilterClass) GetCallbackGtkReserved8() func() {
+// GetGtkReserved8 gets the callback function.
+func (x *FilterClass) GetGtkReserved8() func() {
 	if x.xGtkReserved8 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkflowbox.go b/v4/gtk/gtkflowbox.go
index 2710fc79509082cd1956d960ef11d918304f6d6c..499fd3041779113c47348057c063999d9c481c78 100644
--- a/v4/gtk/gtkflowbox.go
+++ b/v4/gtk/gtkflowbox.go
@@ -47,8 +47,8 @@ func (x *FlowBoxChildClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *FlowBoxChildClass) SetCallbackActivate(cb func(*FlowBoxChild)) {
+// OverrideActivate sets the callback function.
+func (x *FlowBoxChildClass) OverrideActivate(cb func(*FlowBoxChild)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -58,8 +58,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *FlowBoxChildClass) GetCallbackActivate() func(*FlowBoxChild) {
+// GetActivate gets the callback function.
+func (x *FlowBoxChildClass) GetActivate() func(*FlowBoxChild) {
 	if x.xActivate == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkfontchooser.go b/v4/gtk/gtkfontchooser.go
index b57a1c073793d340cff29dffab0aa38277200286..2f91c629ab1cd1e9fea8f0b0de1e6c6ca8441e45 100644
--- a/v4/gtk/gtkfontchooser.go
+++ b/v4/gtk/gtkfontchooser.go
@@ -45,8 +45,8 @@ func (x *FontChooserIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetFontFamily sets the callback function.
-func (x *FontChooserIface) SetCallbackGetFontFamily(cb func(FontChooser) *pango.FontFamily) {
+// OverrideGetFontFamily sets the callback function.
+func (x *FontChooserIface) OverrideGetFontFamily(cb func(FontChooser) *pango.FontFamily) {
 	if cb == nil {
 		x.xGetFontFamily = 0
 	} else {
@@ -60,8 +60,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFontFamily gets the callback function.
-func (x *FontChooserIface) GetCallbackGetFontFamily() func(FontChooser) *pango.FontFamily {
+// GetGetFontFamily gets the callback function.
+func (x *FontChooserIface) GetGetFontFamily() func(FontChooser) *pango.FontFamily {
 	if x.xGetFontFamily == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetFontFace sets the callback function.
-func (x *FontChooserIface) SetCallbackGetFontFace(cb func(FontChooser) *pango.FontFace) {
+// OverrideGetFontFace sets the callback function.
+func (x *FontChooserIface) OverrideGetFontFace(cb func(FontChooser) *pango.FontFace) {
 	if cb == nil {
 		x.xGetFontFace = 0
 	} else {
@@ -93,8 +93,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFontFace gets the callback function.
-func (x *FontChooserIface) GetCallbackGetFontFace() func(FontChooser) *pango.FontFace {
+// GetGetFontFace gets the callback function.
+func (x *FontChooserIface) GetGetFontFace() func(FontChooser) *pango.FontFace {
 	if x.xGetFontFace == 0 {
 		return nil
 	}
@@ -111,8 +111,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetFontSize sets the callback function.
-func (x *FontChooserIface) SetCallbackGetFontSize(cb func(FontChooser) int) {
+// OverrideGetFontSize sets the callback function.
+func (x *FontChooserIface) OverrideGetFontSize(cb func(FontChooser) int) {
 	if cb == nil {
 		x.xGetFontSize = 0
 	} else {
@@ -122,8 +122,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFontSize gets the callback function.
-func (x *FontChooserIface) GetCallbackGetFontSize() func(FontChooser) int {
+// GetGetFontSize gets the callback function.
+func (x *FontChooserIface) GetGetFontSize() func(FontChooser) int {
 	if x.xGetFontSize == 0 {
 		return nil
 	}
@@ -134,8 +134,8 @@ 		return rawCallback(FontchooserVar.GoPointer())
 	}
 }
 
-// SetCallbackSetFilterFunc sets the callback function.
-func (x *FontChooserIface) SetCallbackSetFilterFunc(cb func(FontChooser, *FontFilterFunc, uintptr, *glib.DestroyNotify)) {
+// OverrideSetFilterFunc sets the callback function.
+func (x *FontChooserIface) OverrideSetFilterFunc(cb func(FontChooser, *FontFilterFunc, uintptr, *glib.DestroyNotify)) {
 	if cb == nil {
 		x.xSetFilterFunc = 0
 	} else {
@@ -145,8 +145,8 @@ 		})
 	}
 }
 
-// GetCallbackSetFilterFunc gets the callback function.
-func (x *FontChooserIface) GetCallbackSetFilterFunc() func(FontChooser, *FontFilterFunc, uintptr, *glib.DestroyNotify) {
+// GetSetFilterFunc gets the callback function.
+func (x *FontChooserIface) GetSetFilterFunc() func(FontChooser, *FontFilterFunc, uintptr, *glib.DestroyNotify) {
 	if x.xSetFilterFunc == 0 {
 		return nil
 	}
@@ -157,8 +157,8 @@ 		rawCallback(FontchooserVar.GoPointer(), glib.NewCallbackNullable(FilterVar), UserDataVar, glib.NewCallback(DestroyVar))
 	}
 }
 
-// SetCallbackFontActivated sets the callback function.
-func (x *FontChooserIface) SetCallbackFontActivated(cb func(FontChooser, string)) {
+// OverrideFontActivated sets the callback function.
+func (x *FontChooserIface) OverrideFontActivated(cb func(FontChooser, string)) {
 	if cb == nil {
 		x.xFontActivated = 0
 	} else {
@@ -168,8 +168,8 @@ 		})
 	}
 }
 
-// GetCallbackFontActivated gets the callback function.
-func (x *FontChooserIface) GetCallbackFontActivated() func(FontChooser, string) {
+// GetFontActivated gets the callback function.
+func (x *FontChooserIface) GetFontActivated() func(FontChooser, string) {
 	if x.xFontActivated == 0 {
 		return nil
 	}
@@ -180,8 +180,8 @@ 		rawCallback(ChooserVar.GoPointer(), FontnameVar)
 	}
 }
 
-// SetCallbackSetFontMap sets the callback function.
-func (x *FontChooserIface) SetCallbackSetFontMap(cb func(FontChooser, *pango.FontMap)) {
+// OverrideSetFontMap sets the callback function.
+func (x *FontChooserIface) OverrideSetFontMap(cb func(FontChooser, *pango.FontMap)) {
 	if cb == nil {
 		x.xSetFontMap = 0
 	} else {
@@ -191,8 +191,8 @@ 		})
 	}
 }
 
-// GetCallbackSetFontMap gets the callback function.
-func (x *FontChooserIface) GetCallbackSetFontMap() func(FontChooser, *pango.FontMap) {
+// GetSetFontMap gets the callback function.
+func (x *FontChooserIface) GetSetFontMap() func(FontChooser, *pango.FontMap) {
 	if x.xSetFontMap == 0 {
 		return nil
 	}
@@ -203,8 +203,8 @@ 		rawCallback(FontchooserVar.GoPointer(), FontmapVar.GoPointer())
 	}
 }
 
-// SetCallbackGetFontMap sets the callback function.
-func (x *FontChooserIface) SetCallbackGetFontMap(cb func(FontChooser) *pango.FontMap) {
+// OverrideGetFontMap sets the callback function.
+func (x *FontChooserIface) OverrideGetFontMap(cb func(FontChooser) *pango.FontMap) {
 	if cb == nil {
 		x.xGetFontMap = 0
 	} else {
@@ -218,8 +218,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFontMap gets the callback function.
-func (x *FontChooserIface) GetCallbackGetFontMap() func(FontChooser) *pango.FontMap {
+// GetGetFontMap gets the callback function.
+func (x *FontChooserIface) GetGetFontMap() func(FontChooser) *pango.FontMap {
 	if x.xGetFontMap == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkframe.go b/v4/gtk/gtkframe.go
index 91033bc08a40c60ebee45a1d904e4bb7a9153857..3dd88e691419e97d8311432f06a34ad0015dc24f 100644
--- a/v4/gtk/gtkframe.go
+++ b/v4/gtk/gtkframe.go
@@ -25,8 +25,8 @@ func (x *FrameClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackComputeChildAllocation sets the callback function.
-func (x *FrameClass) SetCallbackComputeChildAllocation(cb func(*Frame, *Allocation)) {
+// OverrideComputeChildAllocation sets the callback function.
+func (x *FrameClass) OverrideComputeChildAllocation(cb func(*Frame, *Allocation)) {
 	if cb == nil {
 		x.xComputeChildAllocation = 0
 	} else {
@@ -36,8 +36,8 @@ 		})
 	}
 }
 
-// GetCallbackComputeChildAllocation gets the callback function.
-func (x *FrameClass) GetCallbackComputeChildAllocation() func(*Frame, *Allocation) {
+// GetComputeChildAllocation gets the callback function.
+func (x *FrameClass) GetComputeChildAllocation() func(*Frame, *Allocation) {
 	if x.xComputeChildAllocation == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkglarea.go b/v4/gtk/gtkglarea.go
index 37ad8a47d6c4f178e4a166c398321a5809152c42..29c846f81d498b123776e41fc4a345c52f9ae355 100644
--- a/v4/gtk/gtkglarea.go
+++ b/v4/gtk/gtkglarea.go
@@ -32,8 +32,8 @@ func (x *GLAreaClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackRender sets the callback function.
-func (x *GLAreaClass) SetCallbackRender(cb func(*GLArea, *gdk.GLContext) bool) {
+// OverrideRender sets the callback function.
+func (x *GLAreaClass) OverrideRender(cb func(*GLArea, *gdk.GLContext) bool) {
 	if cb == nil {
 		x.xRender = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackRender gets the callback function.
-func (x *GLAreaClass) GetCallbackRender() func(*GLArea, *gdk.GLContext) bool {
+// GetRender gets the callback function.
+func (x *GLAreaClass) GetRender() func(*GLArea, *gdk.GLContext) bool {
 	if x.xRender == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		return rawCallback(AreaVar.GoPointer(), ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackResize sets the callback function.
-func (x *GLAreaClass) SetCallbackResize(cb func(*GLArea, int, int)) {
+// OverrideResize sets the callback function.
+func (x *GLAreaClass) OverrideResize(cb func(*GLArea, int, int)) {
 	if cb == nil {
 		x.xResize = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackResize gets the callback function.
-func (x *GLAreaClass) GetCallbackResize() func(*GLArea, int, int) {
+// GetResize gets the callback function.
+func (x *GLAreaClass) GetResize() func(*GLArea, int, int) {
 	if x.xResize == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		rawCallback(AreaVar.GoPointer(), WidthVar, HeightVar)
 	}
 }
 
-// SetCallbackCreateContext sets the callback function.
-func (x *GLAreaClass) SetCallbackCreateContext(cb func(*GLArea) *gdk.GLContext) {
+// OverrideCreateContext sets the callback function.
+func (x *GLAreaClass) OverrideCreateContext(cb func(*GLArea) *gdk.GLContext) {
 	if cb == nil {
 		x.xCreateContext = 0
 	} else {
@@ -93,8 +93,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateContext gets the callback function.
-func (x *GLAreaClass) GetCallbackCreateContext() func(*GLArea) *gdk.GLContext {
+// GetCreateContext gets the callback function.
+func (x *GLAreaClass) GetCreateContext() func(*GLArea) *gdk.GLContext {
 	if x.xCreateContext == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkimcontext.go b/v4/gtk/gtkimcontext.go
index fd2e6152684570fa6ad10e12b94a8a9f8511a0df..ac38928c01002703c8a999a65207447c6e14d3c7 100644
--- a/v4/gtk/gtkimcontext.go
+++ b/v4/gtk/gtkimcontext.go
@@ -70,8 +70,8 @@ func (x *IMContextClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackPreeditStart sets the callback function.
-func (x *IMContextClass) SetCallbackPreeditStart(cb func(*IMContext)) {
+// OverridePreeditStart sets the callback function.
+func (x *IMContextClass) OverridePreeditStart(cb func(*IMContext)) {
 	if cb == nil {
 		x.xPreeditStart = 0
 	} else {
@@ -81,8 +81,8 @@ 		})
 	}
 }
 
-// GetCallbackPreeditStart gets the callback function.
-func (x *IMContextClass) GetCallbackPreeditStart() func(*IMContext) {
+// GetPreeditStart gets the callback function.
+func (x *IMContextClass) GetPreeditStart() func(*IMContext) {
 	if x.xPreeditStart == 0 {
 		return nil
 	}
@@ -93,8 +93,8 @@ 		rawCallback(ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackPreeditEnd sets the callback function.
-func (x *IMContextClass) SetCallbackPreeditEnd(cb func(*IMContext)) {
+// OverridePreeditEnd sets the callback function.
+func (x *IMContextClass) OverridePreeditEnd(cb func(*IMContext)) {
 	if cb == nil {
 		x.xPreeditEnd = 0
 	} else {
@@ -104,8 +104,8 @@ 		})
 	}
 }
 
-// GetCallbackPreeditEnd gets the callback function.
-func (x *IMContextClass) GetCallbackPreeditEnd() func(*IMContext) {
+// GetPreeditEnd gets the callback function.
+func (x *IMContextClass) GetPreeditEnd() func(*IMContext) {
 	if x.xPreeditEnd == 0 {
 		return nil
 	}
@@ -116,8 +116,8 @@ 		rawCallback(ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackPreeditChanged sets the callback function.
-func (x *IMContextClass) SetCallbackPreeditChanged(cb func(*IMContext)) {
+// OverridePreeditChanged sets the callback function.
+func (x *IMContextClass) OverridePreeditChanged(cb func(*IMContext)) {
 	if cb == nil {
 		x.xPreeditChanged = 0
 	} else {
@@ -127,8 +127,8 @@ 		})
 	}
 }
 
-// GetCallbackPreeditChanged gets the callback function.
-func (x *IMContextClass) GetCallbackPreeditChanged() func(*IMContext) {
+// GetPreeditChanged gets the callback function.
+func (x *IMContextClass) GetPreeditChanged() func(*IMContext) {
 	if x.xPreeditChanged == 0 {
 		return nil
 	}
@@ -139,8 +139,8 @@ 		rawCallback(ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackCommit sets the callback function.
-func (x *IMContextClass) SetCallbackCommit(cb func(*IMContext, string)) {
+// OverrideCommit sets the callback function.
+func (x *IMContextClass) OverrideCommit(cb func(*IMContext, string)) {
 	if cb == nil {
 		x.xCommit = 0
 	} else {
@@ -150,8 +150,8 @@ 		})
 	}
 }
 
-// GetCallbackCommit gets the callback function.
-func (x *IMContextClass) GetCallbackCommit() func(*IMContext, string) {
+// GetCommit gets the callback function.
+func (x *IMContextClass) GetCommit() func(*IMContext, string) {
 	if x.xCommit == 0 {
 		return nil
 	}
@@ -162,8 +162,8 @@ 		rawCallback(ContextVar.GoPointer(), StrVar)
 	}
 }
 
-// SetCallbackRetrieveSurrounding sets the callback function.
-func (x *IMContextClass) SetCallbackRetrieveSurrounding(cb func(*IMContext) bool) {
+// OverrideRetrieveSurrounding sets the callback function.
+func (x *IMContextClass) OverrideRetrieveSurrounding(cb func(*IMContext) bool) {
 	if cb == nil {
 		x.xRetrieveSurrounding = 0
 	} else {
@@ -173,8 +173,8 @@ 		})
 	}
 }
 
-// GetCallbackRetrieveSurrounding gets the callback function.
-func (x *IMContextClass) GetCallbackRetrieveSurrounding() func(*IMContext) bool {
+// GetRetrieveSurrounding gets the callback function.
+func (x *IMContextClass) GetRetrieveSurrounding() func(*IMContext) bool {
 	if x.xRetrieveSurrounding == 0 {
 		return nil
 	}
@@ -185,8 +185,8 @@ 		return rawCallback(ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackDeleteSurrounding sets the callback function.
-func (x *IMContextClass) SetCallbackDeleteSurrounding(cb func(*IMContext, int, int) bool) {
+// OverrideDeleteSurrounding sets the callback function.
+func (x *IMContextClass) OverrideDeleteSurrounding(cb func(*IMContext, int, int) bool) {
 	if cb == nil {
 		x.xDeleteSurrounding = 0
 	} else {
@@ -196,8 +196,8 @@ 		})
 	}
 }
 
-// GetCallbackDeleteSurrounding gets the callback function.
-func (x *IMContextClass) GetCallbackDeleteSurrounding() func(*IMContext, int, int) bool {
+// GetDeleteSurrounding gets the callback function.
+func (x *IMContextClass) GetDeleteSurrounding() func(*IMContext, int, int) bool {
 	if x.xDeleteSurrounding == 0 {
 		return nil
 	}
@@ -208,8 +208,8 @@ 		return rawCallback(ContextVar.GoPointer(), OffsetVar, NCharsVar)
 	}
 }
 
-// SetCallbackSetClientWidget sets the callback function.
-func (x *IMContextClass) SetCallbackSetClientWidget(cb func(*IMContext, *Widget)) {
+// OverrideSetClientWidget sets the callback function.
+func (x *IMContextClass) OverrideSetClientWidget(cb func(*IMContext, *Widget)) {
 	if cb == nil {
 		x.xSetClientWidget = 0
 	} else {
@@ -219,8 +219,8 @@ 		})
 	}
 }
 
-// GetCallbackSetClientWidget gets the callback function.
-func (x *IMContextClass) GetCallbackSetClientWidget() func(*IMContext, *Widget) {
+// GetSetClientWidget gets the callback function.
+func (x *IMContextClass) GetSetClientWidget() func(*IMContext, *Widget) {
 	if x.xSetClientWidget == 0 {
 		return nil
 	}
@@ -231,8 +231,8 @@ 		rawCallback(ContextVar.GoPointer(), WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackGetPreeditString sets the callback function.
-func (x *IMContextClass) SetCallbackGetPreeditString(cb func(*IMContext, string, **pango.AttrList, int)) {
+// OverrideGetPreeditString sets the callback function.
+func (x *IMContextClass) OverrideGetPreeditString(cb func(*IMContext, string, **pango.AttrList, int)) {
 	if cb == nil {
 		x.xGetPreeditString = 0
 	} else {
@@ -242,8 +242,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPreeditString gets the callback function.
-func (x *IMContextClass) GetCallbackGetPreeditString() func(*IMContext, string, **pango.AttrList, int) {
+// GetGetPreeditString gets the callback function.
+func (x *IMContextClass) GetGetPreeditString() func(*IMContext, string, **pango.AttrList, int) {
 	if x.xGetPreeditString == 0 {
 		return nil
 	}
@@ -254,8 +254,8 @@ 		rawCallback(ContextVar.GoPointer(), StrVar, AttrsVar, CursorPosVar)
 	}
 }
 
-// SetCallbackFilterKeypress sets the callback function.
-func (x *IMContextClass) SetCallbackFilterKeypress(cb func(*IMContext, *gdk.Event) bool) {
+// OverrideFilterKeypress sets the callback function.
+func (x *IMContextClass) OverrideFilterKeypress(cb func(*IMContext, *gdk.Event) bool) {
 	if cb == nil {
 		x.xFilterKeypress = 0
 	} else {
@@ -265,8 +265,8 @@ 		})
 	}
 }
 
-// GetCallbackFilterKeypress gets the callback function.
-func (x *IMContextClass) GetCallbackFilterKeypress() func(*IMContext, *gdk.Event) bool {
+// GetFilterKeypress gets the callback function.
+func (x *IMContextClass) GetFilterKeypress() func(*IMContext, *gdk.Event) bool {
 	if x.xFilterKeypress == 0 {
 		return nil
 	}
@@ -277,8 +277,8 @@ 		return rawCallback(ContextVar.GoPointer(), EventVar.GoPointer())
 	}
 }
 
-// SetCallbackFocusIn sets the callback function.
-func (x *IMContextClass) SetCallbackFocusIn(cb func(*IMContext)) {
+// OverrideFocusIn sets the callback function.
+func (x *IMContextClass) OverrideFocusIn(cb func(*IMContext)) {
 	if cb == nil {
 		x.xFocusIn = 0
 	} else {
@@ -288,8 +288,8 @@ 		})
 	}
 }
 
-// GetCallbackFocusIn gets the callback function.
-func (x *IMContextClass) GetCallbackFocusIn() func(*IMContext) {
+// GetFocusIn gets the callback function.
+func (x *IMContextClass) GetFocusIn() func(*IMContext) {
 	if x.xFocusIn == 0 {
 		return nil
 	}
@@ -300,8 +300,8 @@ 		rawCallback(ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackFocusOut sets the callback function.
-func (x *IMContextClass) SetCallbackFocusOut(cb func(*IMContext)) {
+// OverrideFocusOut sets the callback function.
+func (x *IMContextClass) OverrideFocusOut(cb func(*IMContext)) {
 	if cb == nil {
 		x.xFocusOut = 0
 	} else {
@@ -311,8 +311,8 @@ 		})
 	}
 }
 
-// GetCallbackFocusOut gets the callback function.
-func (x *IMContextClass) GetCallbackFocusOut() func(*IMContext) {
+// GetFocusOut gets the callback function.
+func (x *IMContextClass) GetFocusOut() func(*IMContext) {
 	if x.xFocusOut == 0 {
 		return nil
 	}
@@ -323,8 +323,8 @@ 		rawCallback(ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackReset sets the callback function.
-func (x *IMContextClass) SetCallbackReset(cb func(*IMContext)) {
+// OverrideReset sets the callback function.
+func (x *IMContextClass) OverrideReset(cb func(*IMContext)) {
 	if cb == nil {
 		x.xReset = 0
 	} else {
@@ -334,8 +334,8 @@ 		})
 	}
 }
 
-// GetCallbackReset gets the callback function.
-func (x *IMContextClass) GetCallbackReset() func(*IMContext) {
+// GetReset gets the callback function.
+func (x *IMContextClass) GetReset() func(*IMContext) {
 	if x.xReset == 0 {
 		return nil
 	}
@@ -346,8 +346,8 @@ 		rawCallback(ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackSetCursorLocation sets the callback function.
-func (x *IMContextClass) SetCallbackSetCursorLocation(cb func(*IMContext, *gdk.Rectangle)) {
+// OverrideSetCursorLocation sets the callback function.
+func (x *IMContextClass) OverrideSetCursorLocation(cb func(*IMContext, *gdk.Rectangle)) {
 	if cb == nil {
 		x.xSetCursorLocation = 0
 	} else {
@@ -357,8 +357,8 @@ 		})
 	}
 }
 
-// GetCallbackSetCursorLocation gets the callback function.
-func (x *IMContextClass) GetCallbackSetCursorLocation() func(*IMContext, *gdk.Rectangle) {
+// GetSetCursorLocation gets the callback function.
+func (x *IMContextClass) GetSetCursorLocation() func(*IMContext, *gdk.Rectangle) {
 	if x.xSetCursorLocation == 0 {
 		return nil
 	}
@@ -369,8 +369,8 @@ 		rawCallback(ContextVar.GoPointer(), AreaVar)
 	}
 }
 
-// SetCallbackSetUsePreedit sets the callback function.
-func (x *IMContextClass) SetCallbackSetUsePreedit(cb func(*IMContext, bool)) {
+// OverrideSetUsePreedit sets the callback function.
+func (x *IMContextClass) OverrideSetUsePreedit(cb func(*IMContext, bool)) {
 	if cb == nil {
 		x.xSetUsePreedit = 0
 	} else {
@@ -380,8 +380,8 @@ 		})
 	}
 }
 
-// GetCallbackSetUsePreedit gets the callback function.
-func (x *IMContextClass) GetCallbackSetUsePreedit() func(*IMContext, bool) {
+// GetSetUsePreedit gets the callback function.
+func (x *IMContextClass) GetSetUsePreedit() func(*IMContext, bool) {
 	if x.xSetUsePreedit == 0 {
 		return nil
 	}
@@ -392,8 +392,8 @@ 		rawCallback(ContextVar.GoPointer(), UsePreeditVar)
 	}
 }
 
-// SetCallbackSetSurrounding sets the callback function.
-func (x *IMContextClass) SetCallbackSetSurrounding(cb func(*IMContext, string, int, int)) {
+// OverrideSetSurrounding sets the callback function.
+func (x *IMContextClass) OverrideSetSurrounding(cb func(*IMContext, string, int, int)) {
 	if cb == nil {
 		x.xSetSurrounding = 0
 	} else {
@@ -403,8 +403,8 @@ 		})
 	}
 }
 
-// GetCallbackSetSurrounding gets the callback function.
-func (x *IMContextClass) GetCallbackSetSurrounding() func(*IMContext, string, int, int) {
+// GetSetSurrounding gets the callback function.
+func (x *IMContextClass) GetSetSurrounding() func(*IMContext, string, int, int) {
 	if x.xSetSurrounding == 0 {
 		return nil
 	}
@@ -415,8 +415,8 @@ 		rawCallback(ContextVar.GoPointer(), TextVar, LenVar, CursorIndexVar)
 	}
 }
 
-// SetCallbackGetSurrounding sets the callback function.
-func (x *IMContextClass) SetCallbackGetSurrounding(cb func(*IMContext, string, int) bool) {
+// OverrideGetSurrounding sets the callback function.
+func (x *IMContextClass) OverrideGetSurrounding(cb func(*IMContext, string, int) bool) {
 	if cb == nil {
 		x.xGetSurrounding = 0
 	} else {
@@ -426,8 +426,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSurrounding gets the callback function.
-func (x *IMContextClass) GetCallbackGetSurrounding() func(*IMContext, string, int) bool {
+// GetGetSurrounding gets the callback function.
+func (x *IMContextClass) GetGetSurrounding() func(*IMContext, string, int) bool {
 	if x.xGetSurrounding == 0 {
 		return nil
 	}
@@ -438,8 +438,8 @@ 		return rawCallback(ContextVar.GoPointer(), TextVar, CursorIndexVar)
 	}
 }
 
-// SetCallbackSetSurroundingWithSelection sets the callback function.
-func (x *IMContextClass) SetCallbackSetSurroundingWithSelection(cb func(*IMContext, string, int, int, int)) {
+// OverrideSetSurroundingWithSelection sets the callback function.
+func (x *IMContextClass) OverrideSetSurroundingWithSelection(cb func(*IMContext, string, int, int, int)) {
 	if cb == nil {
 		x.xSetSurroundingWithSelection = 0
 	} else {
@@ -449,8 +449,8 @@ 		})
 	}
 }
 
-// GetCallbackSetSurroundingWithSelection gets the callback function.
-func (x *IMContextClass) GetCallbackSetSurroundingWithSelection() func(*IMContext, string, int, int, int) {
+// GetSetSurroundingWithSelection gets the callback function.
+func (x *IMContextClass) GetSetSurroundingWithSelection() func(*IMContext, string, int, int, int) {
 	if x.xSetSurroundingWithSelection == 0 {
 		return nil
 	}
@@ -461,8 +461,8 @@ 		rawCallback(ContextVar.GoPointer(), TextVar, LenVar, CursorIndexVar, AnchorIndexVar)
 	}
 }
 
-// SetCallbackGetSurroundingWithSelection sets the callback function.
-func (x *IMContextClass) SetCallbackGetSurroundingWithSelection(cb func(*IMContext, string, int, int) bool) {
+// OverrideGetSurroundingWithSelection sets the callback function.
+func (x *IMContextClass) OverrideGetSurroundingWithSelection(cb func(*IMContext, string, int, int) bool) {
 	if cb == nil {
 		x.xGetSurroundingWithSelection = 0
 	} else {
@@ -472,8 +472,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSurroundingWithSelection gets the callback function.
-func (x *IMContextClass) GetCallbackGetSurroundingWithSelection() func(*IMContext, string, int, int) bool {
+// GetGetSurroundingWithSelection gets the callback function.
+func (x *IMContextClass) GetGetSurroundingWithSelection() func(*IMContext, string, int, int) bool {
 	if x.xGetSurroundingWithSelection == 0 {
 		return nil
 	}
@@ -484,8 +484,8 @@ 		return rawCallback(ContextVar.GoPointer(), TextVar, CursorIndexVar, AnchorIndexVar)
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *IMContextClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *IMContextClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -495,8 +495,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *IMContextClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *IMContextClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -507,8 +507,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *IMContextClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *IMContextClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -518,8 +518,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *IMContextClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *IMContextClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -530,8 +530,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *IMContextClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *IMContextClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -541,8 +541,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *IMContextClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *IMContextClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -553,8 +553,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *IMContextClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *IMContextClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -564,8 +564,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *IMContextClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *IMContextClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
@@ -576,8 +576,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved5 sets the callback function.
-func (x *IMContextClass) SetCallbackGtkReserved5(cb func()) {
+// OverrideGtkReserved5 sets the callback function.
+func (x *IMContextClass) OverrideGtkReserved5(cb func()) {
 	if cb == nil {
 		x.xGtkReserved5 = 0
 	} else {
@@ -587,8 +587,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved5 gets the callback function.
-func (x *IMContextClass) GetCallbackGtkReserved5() func() {
+// GetGtkReserved5 gets the callback function.
+func (x *IMContextClass) GetGtkReserved5() func() {
 	if x.xGtkReserved5 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkimmulticontext.go b/v4/gtk/gtkimmulticontext.go
index 152b446bd94bb248bccf40dea99cc7ea2de61d4d..32791d4284157077f99f4e26f5c1636b9e2fabf7 100644
--- a/v4/gtk/gtkimmulticontext.go
+++ b/v4/gtk/gtkimmulticontext.go
@@ -28,8 +28,8 @@ func (x *IMMulticontextClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *IMMulticontextClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *IMMulticontextClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -39,8 +39,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *IMMulticontextClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *IMMulticontextClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -51,8 +51,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *IMMulticontextClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *IMMulticontextClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -62,8 +62,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *IMMulticontextClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *IMMulticontextClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -74,8 +74,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *IMMulticontextClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *IMMulticontextClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -85,8 +85,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *IMMulticontextClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *IMMulticontextClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -97,8 +97,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *IMMulticontextClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *IMMulticontextClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -108,8 +108,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *IMMulticontextClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *IMMulticontextClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtklayoutmanager.go b/v4/gtk/gtklayoutmanager.go
index 36934e1e365dd7605f51b71062d5bd383f2ce73f..b39b4ddce675bde00741bf55c7041b26b1741ad5 100644
--- a/v4/gtk/gtklayoutmanager.go
+++ b/v4/gtk/gtklayoutmanager.go
@@ -40,8 +40,8 @@ func (x *LayoutManagerClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetRequestMode sets the callback function.
-func (x *LayoutManagerClass) SetCallbackGetRequestMode(cb func(*LayoutManager, *Widget) SizeRequestMode) {
+// OverrideGetRequestMode sets the callback function.
+func (x *LayoutManagerClass) OverrideGetRequestMode(cb func(*LayoutManager, *Widget) SizeRequestMode) {
 	if cb == nil {
 		x.xGetRequestMode = 0
 	} else {
@@ -51,8 +51,8 @@ 		})
 	}
 }
 
-// GetCallbackGetRequestMode gets the callback function.
-func (x *LayoutManagerClass) GetCallbackGetRequestMode() func(*LayoutManager, *Widget) SizeRequestMode {
+// GetGetRequestMode gets the callback function.
+func (x *LayoutManagerClass) GetGetRequestMode() func(*LayoutManager, *Widget) SizeRequestMode {
 	if x.xGetRequestMode == 0 {
 		return nil
 	}
@@ -63,8 +63,8 @@ 		return rawCallback(ManagerVar.GoPointer(), WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackMeasure sets the callback function.
-func (x *LayoutManagerClass) SetCallbackMeasure(cb func(*LayoutManager, *Widget, Orientation, int, int, int, int, int)) {
+// OverrideMeasure sets the callback function.
+func (x *LayoutManagerClass) OverrideMeasure(cb func(*LayoutManager, *Widget, Orientation, int, int, int, int, int)) {
 	if cb == nil {
 		x.xMeasure = 0
 	} else {
@@ -74,8 +74,8 @@ 		})
 	}
 }
 
-// GetCallbackMeasure gets the callback function.
-func (x *LayoutManagerClass) GetCallbackMeasure() func(*LayoutManager, *Widget, Orientation, int, int, int, int, int) {
+// GetMeasure gets the callback function.
+func (x *LayoutManagerClass) GetMeasure() func(*LayoutManager, *Widget, Orientation, int, int, int, int, int) {
 	if x.xMeasure == 0 {
 		return nil
 	}
@@ -86,8 +86,8 @@ 		rawCallback(ManagerVar.GoPointer(), WidgetVar.GoPointer(), OrientationVar, ForSizeVar, MinimumVar, NaturalVar, MinimumBaselineVar, NaturalBaselineVar)
 	}
 }
 
-// SetCallbackAllocate sets the callback function.
-func (x *LayoutManagerClass) SetCallbackAllocate(cb func(*LayoutManager, *Widget, int, int, int)) {
+// OverrideAllocate sets the callback function.
+func (x *LayoutManagerClass) OverrideAllocate(cb func(*LayoutManager, *Widget, int, int, int)) {
 	if cb == nil {
 		x.xAllocate = 0
 	} else {
@@ -97,8 +97,8 @@ 		})
 	}
 }
 
-// GetCallbackAllocate gets the callback function.
-func (x *LayoutManagerClass) GetCallbackAllocate() func(*LayoutManager, *Widget, int, int, int) {
+// GetAllocate gets the callback function.
+func (x *LayoutManagerClass) GetAllocate() func(*LayoutManager, *Widget, int, int, int) {
 	if x.xAllocate == 0 {
 		return nil
 	}
@@ -109,8 +109,8 @@ 		rawCallback(ManagerVar.GoPointer(), WidgetVar.GoPointer(), WidthVar, HeightVar, BaselineVar)
 	}
 }
 
-// SetCallbackCreateLayoutChild sets the callback function.
-func (x *LayoutManagerClass) SetCallbackCreateLayoutChild(cb func(*LayoutManager, *Widget, *Widget) *LayoutChild) {
+// OverrideCreateLayoutChild sets the callback function.
+func (x *LayoutManagerClass) OverrideCreateLayoutChild(cb func(*LayoutManager, *Widget, *Widget) *LayoutChild) {
 	if cb == nil {
 		x.xCreateLayoutChild = 0
 	} else {
@@ -124,8 +124,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateLayoutChild gets the callback function.
-func (x *LayoutManagerClass) GetCallbackCreateLayoutChild() func(*LayoutManager, *Widget, *Widget) *LayoutChild {
+// GetCreateLayoutChild gets the callback function.
+func (x *LayoutManagerClass) GetCreateLayoutChild() func(*LayoutManager, *Widget, *Widget) *LayoutChild {
 	if x.xCreateLayoutChild == 0 {
 		return nil
 	}
@@ -142,8 +142,8 @@ 		return ret
 	}
 }
 
-// SetCallbackRoot sets the callback function.
-func (x *LayoutManagerClass) SetCallbackRoot(cb func(*LayoutManager)) {
+// OverrideRoot sets the callback function.
+func (x *LayoutManagerClass) OverrideRoot(cb func(*LayoutManager)) {
 	if cb == nil {
 		x.xRoot = 0
 	} else {
@@ -153,8 +153,8 @@ 		})
 	}
 }
 
-// GetCallbackRoot gets the callback function.
-func (x *LayoutManagerClass) GetCallbackRoot() func(*LayoutManager) {
+// GetRoot gets the callback function.
+func (x *LayoutManagerClass) GetRoot() func(*LayoutManager) {
 	if x.xRoot == 0 {
 		return nil
 	}
@@ -165,8 +165,8 @@ 		rawCallback(ManagerVar.GoPointer())
 	}
 }
 
-// SetCallbackUnroot sets the callback function.
-func (x *LayoutManagerClass) SetCallbackUnroot(cb func(*LayoutManager)) {
+// OverrideUnroot sets the callback function.
+func (x *LayoutManagerClass) OverrideUnroot(cb func(*LayoutManager)) {
 	if cb == nil {
 		x.xUnroot = 0
 	} else {
@@ -176,8 +176,8 @@ 		})
 	}
 }
 
-// GetCallbackUnroot gets the callback function.
-func (x *LayoutManagerClass) GetCallbackUnroot() func(*LayoutManager) {
+// GetUnroot gets the callback function.
+func (x *LayoutManagerClass) GetUnroot() func(*LayoutManager) {
 	if x.xUnroot == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtklistbox.go b/v4/gtk/gtklistbox.go
index cbc78eb0036fd3b39c94260ee984b77b4e85a6d4..c76fbad397b3655c4dac187d61afbaa9feaa13ee 100644
--- a/v4/gtk/gtklistbox.go
+++ b/v4/gtk/gtklistbox.go
@@ -53,8 +53,8 @@ func (x *ListBoxRowClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackActivate sets the callback function.
-func (x *ListBoxRowClass) SetCallbackActivate(cb func(*ListBoxRow)) {
+// OverrideActivate sets the callback function.
+func (x *ListBoxRowClass) OverrideActivate(cb func(*ListBoxRow)) {
 	if cb == nil {
 		x.xActivate = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackActivate gets the callback function.
-func (x *ListBoxRowClass) GetCallbackActivate() func(*ListBoxRow) {
+// GetActivate gets the callback function.
+func (x *ListBoxRowClass) GetActivate() func(*ListBoxRow) {
 	if x.xActivate == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkmediafile.go b/v4/gtk/gtkmediafile.go
index 94b817005548200c8557c979fc530fd367832c26..4f2fd58d76ff101a18bd4449fe9b564a088b40cb 100644
--- a/v4/gtk/gtkmediafile.go
+++ b/v4/gtk/gtkmediafile.go
@@ -35,8 +35,8 @@ func (x *MediaFileClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackOpen sets the callback function.
-func (x *MediaFileClass) SetCallbackOpen(cb func(*MediaFile)) {
+// OverrideOpen sets the callback function.
+func (x *MediaFileClass) OverrideOpen(cb func(*MediaFile)) {
 	if cb == nil {
 		x.xOpen = 0
 	} else {
@@ -46,8 +46,8 @@ 		})
 	}
 }
 
-// GetCallbackOpen gets the callback function.
-func (x *MediaFileClass) GetCallbackOpen() func(*MediaFile) {
+// GetOpen gets the callback function.
+func (x *MediaFileClass) GetOpen() func(*MediaFile) {
 	if x.xOpen == 0 {
 		return nil
 	}
@@ -58,8 +58,8 @@ 		rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackClose sets the callback function.
-func (x *MediaFileClass) SetCallbackClose(cb func(*MediaFile)) {
+// OverrideClose sets the callback function.
+func (x *MediaFileClass) OverrideClose(cb func(*MediaFile)) {
 	if cb == nil {
 		x.xClose = 0
 	} else {
@@ -69,8 +69,8 @@ 		})
 	}
 }
 
-// GetCallbackClose gets the callback function.
-func (x *MediaFileClass) GetCallbackClose() func(*MediaFile) {
+// GetClose gets the callback function.
+func (x *MediaFileClass) GetClose() func(*MediaFile) {
 	if x.xClose == 0 {
 		return nil
 	}
@@ -81,8 +81,8 @@ 		rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *MediaFileClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *MediaFileClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -92,8 +92,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *MediaFileClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *MediaFileClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -104,8 +104,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *MediaFileClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *MediaFileClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -115,8 +115,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *MediaFileClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *MediaFileClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -127,8 +127,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *MediaFileClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *MediaFileClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -138,8 +138,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *MediaFileClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *MediaFileClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -150,8 +150,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *MediaFileClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *MediaFileClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -161,8 +161,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *MediaFileClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *MediaFileClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkmediastream.go b/v4/gtk/gtkmediastream.go
index accb178163d2ecf43f8ac241e53e44780295402c..43cd745a9c6837814f589e51c617dc5570c1b996 100644
--- a/v4/gtk/gtkmediastream.go
+++ b/v4/gtk/gtkmediastream.go
@@ -51,8 +51,8 @@ func (x *MediaStreamClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackPlay sets the callback function.
-func (x *MediaStreamClass) SetCallbackPlay(cb func(*MediaStream) bool) {
+// OverridePlay sets the callback function.
+func (x *MediaStreamClass) OverridePlay(cb func(*MediaStream) bool) {
 	if cb == nil {
 		x.xPlay = 0
 	} else {
@@ -62,8 +62,8 @@ 		})
 	}
 }
 
-// GetCallbackPlay gets the callback function.
-func (x *MediaStreamClass) GetCallbackPlay() func(*MediaStream) bool {
+// GetPlay gets the callback function.
+func (x *MediaStreamClass) GetPlay() func(*MediaStream) bool {
 	if x.xPlay == 0 {
 		return nil
 	}
@@ -74,8 +74,8 @@ 		return rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackPause sets the callback function.
-func (x *MediaStreamClass) SetCallbackPause(cb func(*MediaStream)) {
+// OverridePause sets the callback function.
+func (x *MediaStreamClass) OverridePause(cb func(*MediaStream)) {
 	if cb == nil {
 		x.xPause = 0
 	} else {
@@ -85,8 +85,8 @@ 		})
 	}
 }
 
-// GetCallbackPause gets the callback function.
-func (x *MediaStreamClass) GetCallbackPause() func(*MediaStream) {
+// GetPause gets the callback function.
+func (x *MediaStreamClass) GetPause() func(*MediaStream) {
 	if x.xPause == 0 {
 		return nil
 	}
@@ -97,8 +97,8 @@ 		rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackSeek sets the callback function.
-func (x *MediaStreamClass) SetCallbackSeek(cb func(*MediaStream, int64)) {
+// OverrideSeek sets the callback function.
+func (x *MediaStreamClass) OverrideSeek(cb func(*MediaStream, int64)) {
 	if cb == nil {
 		x.xSeek = 0
 	} else {
@@ -108,8 +108,8 @@ 		})
 	}
 }
 
-// GetCallbackSeek gets the callback function.
-func (x *MediaStreamClass) GetCallbackSeek() func(*MediaStream, int64) {
+// GetSeek gets the callback function.
+func (x *MediaStreamClass) GetSeek() func(*MediaStream, int64) {
 	if x.xSeek == 0 {
 		return nil
 	}
@@ -120,8 +120,8 @@ 		rawCallback(SelfVar.GoPointer(), TimestampVar)
 	}
 }
 
-// SetCallbackUpdateAudio sets the callback function.
-func (x *MediaStreamClass) SetCallbackUpdateAudio(cb func(*MediaStream, bool, float64)) {
+// OverrideUpdateAudio sets the callback function.
+func (x *MediaStreamClass) OverrideUpdateAudio(cb func(*MediaStream, bool, float64)) {
 	if cb == nil {
 		x.xUpdateAudio = 0
 	} else {
@@ -131,8 +131,8 @@ 		})
 	}
 }
 
-// GetCallbackUpdateAudio gets the callback function.
-func (x *MediaStreamClass) GetCallbackUpdateAudio() func(*MediaStream, bool, float64) {
+// GetUpdateAudio gets the callback function.
+func (x *MediaStreamClass) GetUpdateAudio() func(*MediaStream, bool, float64) {
 	if x.xUpdateAudio == 0 {
 		return nil
 	}
@@ -143,8 +143,8 @@ 		rawCallback(SelfVar.GoPointer(), MutedVar, VolumeVar)
 	}
 }
 
-// SetCallbackRealize sets the callback function.
-func (x *MediaStreamClass) SetCallbackRealize(cb func(*MediaStream, *gdk.Surface)) {
+// OverrideRealize sets the callback function.
+func (x *MediaStreamClass) OverrideRealize(cb func(*MediaStream, *gdk.Surface)) {
 	if cb == nil {
 		x.xRealize = 0
 	} else {
@@ -154,8 +154,8 @@ 		})
 	}
 }
 
-// GetCallbackRealize gets the callback function.
-func (x *MediaStreamClass) GetCallbackRealize() func(*MediaStream, *gdk.Surface) {
+// GetRealize gets the callback function.
+func (x *MediaStreamClass) GetRealize() func(*MediaStream, *gdk.Surface) {
 	if x.xRealize == 0 {
 		return nil
 	}
@@ -166,8 +166,8 @@ 		rawCallback(SelfVar.GoPointer(), SurfaceVar.GoPointer())
 	}
 }
 
-// SetCallbackUnrealize sets the callback function.
-func (x *MediaStreamClass) SetCallbackUnrealize(cb func(*MediaStream, *gdk.Surface)) {
+// OverrideUnrealize sets the callback function.
+func (x *MediaStreamClass) OverrideUnrealize(cb func(*MediaStream, *gdk.Surface)) {
 	if cb == nil {
 		x.xUnrealize = 0
 	} else {
@@ -177,8 +177,8 @@ 		})
 	}
 }
 
-// GetCallbackUnrealize gets the callback function.
-func (x *MediaStreamClass) GetCallbackUnrealize() func(*MediaStream, *gdk.Surface) {
+// GetUnrealize gets the callback function.
+func (x *MediaStreamClass) GetUnrealize() func(*MediaStream, *gdk.Surface) {
 	if x.xUnrealize == 0 {
 		return nil
 	}
@@ -189,8 +189,8 @@ 		rawCallback(SelfVar.GoPointer(), SurfaceVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *MediaStreamClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *MediaStreamClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -200,8 +200,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *MediaStreamClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *MediaStreamClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -212,8 +212,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *MediaStreamClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *MediaStreamClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -223,8 +223,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *MediaStreamClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *MediaStreamClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -235,8 +235,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *MediaStreamClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *MediaStreamClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -246,8 +246,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *MediaStreamClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *MediaStreamClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -258,8 +258,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *MediaStreamClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *MediaStreamClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -269,8 +269,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *MediaStreamClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *MediaStreamClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
@@ -281,8 +281,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved5 sets the callback function.
-func (x *MediaStreamClass) SetCallbackGtkReserved5(cb func()) {
+// OverrideGtkReserved5 sets the callback function.
+func (x *MediaStreamClass) OverrideGtkReserved5(cb func()) {
 	if cb == nil {
 		x.xGtkReserved5 = 0
 	} else {
@@ -292,8 +292,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved5 gets the callback function.
-func (x *MediaStreamClass) GetCallbackGtkReserved5() func() {
+// GetGtkReserved5 gets the callback function.
+func (x *MediaStreamClass) GetGtkReserved5() func() {
 	if x.xGtkReserved5 == 0 {
 		return nil
 	}
@@ -304,8 +304,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved6 sets the callback function.
-func (x *MediaStreamClass) SetCallbackGtkReserved6(cb func()) {
+// OverrideGtkReserved6 sets the callback function.
+func (x *MediaStreamClass) OverrideGtkReserved6(cb func()) {
 	if cb == nil {
 		x.xGtkReserved6 = 0
 	} else {
@@ -315,8 +315,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved6 gets the callback function.
-func (x *MediaStreamClass) GetCallbackGtkReserved6() func() {
+// GetGtkReserved6 gets the callback function.
+func (x *MediaStreamClass) GetGtkReserved6() func() {
 	if x.xGtkReserved6 == 0 {
 		return nil
 	}
@@ -327,8 +327,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved7 sets the callback function.
-func (x *MediaStreamClass) SetCallbackGtkReserved7(cb func()) {
+// OverrideGtkReserved7 sets the callback function.
+func (x *MediaStreamClass) OverrideGtkReserved7(cb func()) {
 	if cb == nil {
 		x.xGtkReserved7 = 0
 	} else {
@@ -338,8 +338,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved7 gets the callback function.
-func (x *MediaStreamClass) GetCallbackGtkReserved7() func() {
+// GetGtkReserved7 gets the callback function.
+func (x *MediaStreamClass) GetGtkReserved7() func() {
 	if x.xGtkReserved7 == 0 {
 		return nil
 	}
@@ -350,8 +350,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved8 sets the callback function.
-func (x *MediaStreamClass) SetCallbackGtkReserved8(cb func()) {
+// OverrideGtkReserved8 sets the callback function.
+func (x *MediaStreamClass) OverrideGtkReserved8(cb func()) {
 	if cb == nil {
 		x.xGtkReserved8 = 0
 	} else {
@@ -361,8 +361,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved8 gets the callback function.
-func (x *MediaStreamClass) GetCallbackGtkReserved8() func() {
+// GetGtkReserved8 gets the callback function.
+func (x *MediaStreamClass) GetGtkReserved8() func() {
 	if x.xGtkReserved8 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkmountoperation.go b/v4/gtk/gtkmountoperation.go
index f625125c3d76f3a07f85763b157b109c09fe1cc7..865764b8f1d969f09b99e0b88c82fda39814a000 100644
--- a/v4/gtk/gtkmountoperation.go
+++ b/v4/gtk/gtkmountoperation.go
@@ -31,8 +31,8 @@ func (x *MountOperationClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *MountOperationClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *MountOperationClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -42,8 +42,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *MountOperationClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *MountOperationClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -54,8 +54,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *MountOperationClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *MountOperationClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -65,8 +65,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *MountOperationClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *MountOperationClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *MountOperationClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *MountOperationClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *MountOperationClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *MountOperationClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *MountOperationClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *MountOperationClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *MountOperationClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *MountOperationClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtknativedialog.go b/v4/gtk/gtknativedialog.go
index afec72eccb27e5f248e2e78f6fac525091dd4860..34a790de28a5140678b5be68370afb3e8b1cdbb2 100644
--- a/v4/gtk/gtknativedialog.go
+++ b/v4/gtk/gtknativedialog.go
@@ -37,8 +37,8 @@ func (x *NativeDialogClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackResponse sets the callback function.
-func (x *NativeDialogClass) SetCallbackResponse(cb func(*NativeDialog, int)) {
+// OverrideResponse sets the callback function.
+func (x *NativeDialogClass) OverrideResponse(cb func(*NativeDialog, int)) {
 	if cb == nil {
 		x.xResponse = 0
 	} else {
@@ -48,8 +48,8 @@ 		})
 	}
 }
 
-// GetCallbackResponse gets the callback function.
-func (x *NativeDialogClass) GetCallbackResponse() func(*NativeDialog, int) {
+// GetResponse gets the callback function.
+func (x *NativeDialogClass) GetResponse() func(*NativeDialog, int) {
 	if x.xResponse == 0 {
 		return nil
 	}
@@ -60,8 +60,8 @@ 		rawCallback(SelfVar.GoPointer(), ResponseIdVar)
 	}
 }
 
-// SetCallbackShow sets the callback function.
-func (x *NativeDialogClass) SetCallbackShow(cb func(*NativeDialog)) {
+// OverrideShow sets the callback function.
+func (x *NativeDialogClass) OverrideShow(cb func(*NativeDialog)) {
 	if cb == nil {
 		x.xShow = 0
 	} else {
@@ -71,8 +71,8 @@ 		})
 	}
 }
 
-// GetCallbackShow gets the callback function.
-func (x *NativeDialogClass) GetCallbackShow() func(*NativeDialog) {
+// GetShow gets the callback function.
+func (x *NativeDialogClass) GetShow() func(*NativeDialog) {
 	if x.xShow == 0 {
 		return nil
 	}
@@ -83,8 +83,8 @@ 		rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackHide sets the callback function.
-func (x *NativeDialogClass) SetCallbackHide(cb func(*NativeDialog)) {
+// OverrideHide sets the callback function.
+func (x *NativeDialogClass) OverrideHide(cb func(*NativeDialog)) {
 	if cb == nil {
 		x.xHide = 0
 	} else {
@@ -94,8 +94,8 @@ 		})
 	}
 }
 
-// GetCallbackHide gets the callback function.
-func (x *NativeDialogClass) GetCallbackHide() func(*NativeDialog) {
+// GetHide gets the callback function.
+func (x *NativeDialogClass) GetHide() func(*NativeDialog) {
 	if x.xHide == 0 {
 		return nil
 	}
@@ -106,8 +106,8 @@ 		rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *NativeDialogClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *NativeDialogClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -117,8 +117,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *NativeDialogClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *NativeDialogClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -129,8 +129,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *NativeDialogClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *NativeDialogClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -140,8 +140,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *NativeDialogClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *NativeDialogClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -152,8 +152,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *NativeDialogClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *NativeDialogClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -163,8 +163,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *NativeDialogClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *NativeDialogClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -175,8 +175,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *NativeDialogClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *NativeDialogClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -186,8 +186,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *NativeDialogClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *NativeDialogClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkpopover.go b/v4/gtk/gtkpopover.go
index ceda28b6039ce0266fa84a5dc05e4fe6dc768f61..807d575a883876c6f9648df589c1a953387dea51 100644
--- a/v4/gtk/gtkpopover.go
+++ b/v4/gtk/gtkpopover.go
@@ -30,8 +30,8 @@ func (x *PopoverClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackClosed sets the callback function.
-func (x *PopoverClass) SetCallbackClosed(cb func(*Popover)) {
+// OverrideClosed sets the callback function.
+func (x *PopoverClass) OverrideClosed(cb func(*Popover)) {
 	if cb == nil {
 		x.xClosed = 0
 	} else {
@@ -41,8 +41,8 @@ 		})
 	}
 }
 
-// GetCallbackClosed gets the callback function.
-func (x *PopoverClass) GetCallbackClosed() func(*Popover) {
+// GetClosed gets the callback function.
+func (x *PopoverClass) GetClosed() func(*Popover) {
 	if x.xClosed == 0 {
 		return nil
 	}
@@ -53,8 +53,8 @@ 		rawCallback(PopoverVar.GoPointer())
 	}
 }
 
-// SetCallbackActivateDefault sets the callback function.
-func (x *PopoverClass) SetCallbackActivateDefault(cb func(*Popover)) {
+// OverrideActivateDefault sets the callback function.
+func (x *PopoverClass) OverrideActivateDefault(cb func(*Popover)) {
 	if cb == nil {
 		x.xActivateDefault = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackActivateDefault gets the callback function.
-func (x *PopoverClass) GetCallbackActivateDefault() func(*Popover) {
+// GetActivateDefault gets the callback function.
+func (x *PopoverClass) GetActivateDefault() func(*Popover) {
 	if x.xActivateDefault == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkprintoperation.go b/v4/gtk/gtkprintoperation.go
index a967d60beeb9203541909b526cbc39c88a7394b1..6976666c3efc869e7e18363d43a1199a7d92b711 100644
--- a/v4/gtk/gtkprintoperation.go
+++ b/v4/gtk/gtkprintoperation.go
@@ -53,8 +53,8 @@ func (x *PrintOperationClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackDone sets the callback function.
-func (x *PrintOperationClass) SetCallbackDone(cb func(*PrintOperation, PrintOperationResult)) {
+// OverrideDone sets the callback function.
+func (x *PrintOperationClass) OverrideDone(cb func(*PrintOperation, PrintOperationResult)) {
 	if cb == nil {
 		x.xDone = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackDone gets the callback function.
-func (x *PrintOperationClass) GetCallbackDone() func(*PrintOperation, PrintOperationResult) {
+// GetDone gets the callback function.
+func (x *PrintOperationClass) GetDone() func(*PrintOperation, PrintOperationResult) {
 	if x.xDone == 0 {
 		return nil
 	}
@@ -76,8 +76,8 @@ 		rawCallback(OperationVar.GoPointer(), ResultVar)
 	}
 }
 
-// SetCallbackBeginPrint sets the callback function.
-func (x *PrintOperationClass) SetCallbackBeginPrint(cb func(*PrintOperation, *PrintContext)) {
+// OverrideBeginPrint sets the callback function.
+func (x *PrintOperationClass) OverrideBeginPrint(cb func(*PrintOperation, *PrintContext)) {
 	if cb == nil {
 		x.xBeginPrint = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackBeginPrint gets the callback function.
-func (x *PrintOperationClass) GetCallbackBeginPrint() func(*PrintOperation, *PrintContext) {
+// GetBeginPrint gets the callback function.
+func (x *PrintOperationClass) GetBeginPrint() func(*PrintOperation, *PrintContext) {
 	if x.xBeginPrint == 0 {
 		return nil
 	}
@@ -99,8 +99,8 @@ 		rawCallback(OperationVar.GoPointer(), ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackPaginate sets the callback function.
-func (x *PrintOperationClass) SetCallbackPaginate(cb func(*PrintOperation, *PrintContext) bool) {
+// OverridePaginate sets the callback function.
+func (x *PrintOperationClass) OverridePaginate(cb func(*PrintOperation, *PrintContext) bool) {
 	if cb == nil {
 		x.xPaginate = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackPaginate gets the callback function.
-func (x *PrintOperationClass) GetCallbackPaginate() func(*PrintOperation, *PrintContext) bool {
+// GetPaginate gets the callback function.
+func (x *PrintOperationClass) GetPaginate() func(*PrintOperation, *PrintContext) bool {
 	if x.xPaginate == 0 {
 		return nil
 	}
@@ -122,8 +122,8 @@ 		return rawCallback(OperationVar.GoPointer(), ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackRequestPageSetup sets the callback function.
-func (x *PrintOperationClass) SetCallbackRequestPageSetup(cb func(*PrintOperation, *PrintContext, int, *PageSetup)) {
+// OverrideRequestPageSetup sets the callback function.
+func (x *PrintOperationClass) OverrideRequestPageSetup(cb func(*PrintOperation, *PrintContext, int, *PageSetup)) {
 	if cb == nil {
 		x.xRequestPageSetup = 0
 	} else {
@@ -133,8 +133,8 @@ 		})
 	}
 }
 
-// GetCallbackRequestPageSetup gets the callback function.
-func (x *PrintOperationClass) GetCallbackRequestPageSetup() func(*PrintOperation, *PrintContext, int, *PageSetup) {
+// GetRequestPageSetup gets the callback function.
+func (x *PrintOperationClass) GetRequestPageSetup() func(*PrintOperation, *PrintContext, int, *PageSetup) {
 	if x.xRequestPageSetup == 0 {
 		return nil
 	}
@@ -145,8 +145,8 @@ 		rawCallback(OperationVar.GoPointer(), ContextVar.GoPointer(), PageNrVar, SetupVar.GoPointer())
 	}
 }
 
-// SetCallbackDrawPage sets the callback function.
-func (x *PrintOperationClass) SetCallbackDrawPage(cb func(*PrintOperation, *PrintContext, int)) {
+// OverrideDrawPage sets the callback function.
+func (x *PrintOperationClass) OverrideDrawPage(cb func(*PrintOperation, *PrintContext, int)) {
 	if cb == nil {
 		x.xDrawPage = 0
 	} else {
@@ -156,8 +156,8 @@ 		})
 	}
 }
 
-// GetCallbackDrawPage gets the callback function.
-func (x *PrintOperationClass) GetCallbackDrawPage() func(*PrintOperation, *PrintContext, int) {
+// GetDrawPage gets the callback function.
+func (x *PrintOperationClass) GetDrawPage() func(*PrintOperation, *PrintContext, int) {
 	if x.xDrawPage == 0 {
 		return nil
 	}
@@ -168,8 +168,8 @@ 		rawCallback(OperationVar.GoPointer(), ContextVar.GoPointer(), PageNrVar)
 	}
 }
 
-// SetCallbackEndPrint sets the callback function.
-func (x *PrintOperationClass) SetCallbackEndPrint(cb func(*PrintOperation, *PrintContext)) {
+// OverrideEndPrint sets the callback function.
+func (x *PrintOperationClass) OverrideEndPrint(cb func(*PrintOperation, *PrintContext)) {
 	if cb == nil {
 		x.xEndPrint = 0
 	} else {
@@ -179,8 +179,8 @@ 		})
 	}
 }
 
-// GetCallbackEndPrint gets the callback function.
-func (x *PrintOperationClass) GetCallbackEndPrint() func(*PrintOperation, *PrintContext) {
+// GetEndPrint gets the callback function.
+func (x *PrintOperationClass) GetEndPrint() func(*PrintOperation, *PrintContext) {
 	if x.xEndPrint == 0 {
 		return nil
 	}
@@ -191,8 +191,8 @@ 		rawCallback(OperationVar.GoPointer(), ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackStatusChanged sets the callback function.
-func (x *PrintOperationClass) SetCallbackStatusChanged(cb func(*PrintOperation)) {
+// OverrideStatusChanged sets the callback function.
+func (x *PrintOperationClass) OverrideStatusChanged(cb func(*PrintOperation)) {
 	if cb == nil {
 		x.xStatusChanged = 0
 	} else {
@@ -202,8 +202,8 @@ 		})
 	}
 }
 
-// GetCallbackStatusChanged gets the callback function.
-func (x *PrintOperationClass) GetCallbackStatusChanged() func(*PrintOperation) {
+// GetStatusChanged gets the callback function.
+func (x *PrintOperationClass) GetStatusChanged() func(*PrintOperation) {
 	if x.xStatusChanged == 0 {
 		return nil
 	}
@@ -214,8 +214,8 @@ 		rawCallback(OperationVar.GoPointer())
 	}
 }
 
-// SetCallbackCreateCustomWidget sets the callback function.
-func (x *PrintOperationClass) SetCallbackCreateCustomWidget(cb func(*PrintOperation) *Widget) {
+// OverrideCreateCustomWidget sets the callback function.
+func (x *PrintOperationClass) OverrideCreateCustomWidget(cb func(*PrintOperation) *Widget) {
 	if cb == nil {
 		x.xCreateCustomWidget = 0
 	} else {
@@ -229,8 +229,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateCustomWidget gets the callback function.
-func (x *PrintOperationClass) GetCallbackCreateCustomWidget() func(*PrintOperation) *Widget {
+// GetCreateCustomWidget gets the callback function.
+func (x *PrintOperationClass) GetCreateCustomWidget() func(*PrintOperation) *Widget {
 	if x.xCreateCustomWidget == 0 {
 		return nil
 	}
@@ -247,8 +247,8 @@ 		return ret
 	}
 }
 
-// SetCallbackCustomWidgetApply sets the callback function.
-func (x *PrintOperationClass) SetCallbackCustomWidgetApply(cb func(*PrintOperation, *Widget)) {
+// OverrideCustomWidgetApply sets the callback function.
+func (x *PrintOperationClass) OverrideCustomWidgetApply(cb func(*PrintOperation, *Widget)) {
 	if cb == nil {
 		x.xCustomWidgetApply = 0
 	} else {
@@ -258,8 +258,8 @@ 		})
 	}
 }
 
-// GetCallbackCustomWidgetApply gets the callback function.
-func (x *PrintOperationClass) GetCallbackCustomWidgetApply() func(*PrintOperation, *Widget) {
+// GetCustomWidgetApply gets the callback function.
+func (x *PrintOperationClass) GetCustomWidgetApply() func(*PrintOperation, *Widget) {
 	if x.xCustomWidgetApply == 0 {
 		return nil
 	}
@@ -270,8 +270,8 @@ 		rawCallback(OperationVar.GoPointer(), WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackPreview sets the callback function.
-func (x *PrintOperationClass) SetCallbackPreview(cb func(*PrintOperation, PrintOperationPreview, *PrintContext, *Window) bool) {
+// OverridePreview sets the callback function.
+func (x *PrintOperationClass) OverridePreview(cb func(*PrintOperation, PrintOperationPreview, *PrintContext, *Window) bool) {
 	if cb == nil {
 		x.xPreview = 0
 	} else {
@@ -281,8 +281,8 @@ 		})
 	}
 }
 
-// GetCallbackPreview gets the callback function.
-func (x *PrintOperationClass) GetCallbackPreview() func(*PrintOperation, PrintOperationPreview, *PrintContext, *Window) bool {
+// GetPreview gets the callback function.
+func (x *PrintOperationClass) GetPreview() func(*PrintOperation, PrintOperationPreview, *PrintContext, *Window) bool {
 	if x.xPreview == 0 {
 		return nil
 	}
@@ -293,8 +293,8 @@ 		return rawCallback(OperationVar.GoPointer(), PreviewVar.GoPointer(), ContextVar.GoPointer(), ParentVar.GoPointer())
 	}
 }
 
-// SetCallbackUpdateCustomWidget sets the callback function.
-func (x *PrintOperationClass) SetCallbackUpdateCustomWidget(cb func(*PrintOperation, *Widget, *PageSetup, *PrintSettings)) {
+// OverrideUpdateCustomWidget sets the callback function.
+func (x *PrintOperationClass) OverrideUpdateCustomWidget(cb func(*PrintOperation, *Widget, *PageSetup, *PrintSettings)) {
 	if cb == nil {
 		x.xUpdateCustomWidget = 0
 	} else {
@@ -304,8 +304,8 @@ 		})
 	}
 }
 
-// GetCallbackUpdateCustomWidget gets the callback function.
-func (x *PrintOperationClass) GetCallbackUpdateCustomWidget() func(*PrintOperation, *Widget, *PageSetup, *PrintSettings) {
+// GetUpdateCustomWidget gets the callback function.
+func (x *PrintOperationClass) GetUpdateCustomWidget() func(*PrintOperation, *Widget, *PageSetup, *PrintSettings) {
 	if x.xUpdateCustomWidget == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkprintoperationpreview.go b/v4/gtk/gtkprintoperationpreview.go
index e1a19373d5315647e81f806694d1ad1e2ba30d22..e3811620fb46730061d5cbd35494a89983a0254b 100644
--- a/v4/gtk/gtkprintoperationpreview.go
+++ b/v4/gtk/gtkprintoperationpreview.go
@@ -46,8 +46,8 @@ func (x *PrintOperationPreviewIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackReady sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackReady(cb func(PrintOperationPreview, *PrintContext)) {
+// OverrideReady sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideReady(cb func(PrintOperationPreview, *PrintContext)) {
 	if cb == nil {
 		x.xReady = 0
 	} else {
@@ -57,8 +57,8 @@ 		})
 	}
 }
 
-// GetCallbackReady gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackReady() func(PrintOperationPreview, *PrintContext) {
+// GetReady gets the callback function.
+func (x *PrintOperationPreviewIface) GetReady() func(PrintOperationPreview, *PrintContext) {
 	if x.xReady == 0 {
 		return nil
 	}
@@ -69,8 +69,8 @@ 		rawCallback(PreviewVar.GoPointer(), ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackGotPageSize sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackGotPageSize(cb func(PrintOperationPreview, *PrintContext, *PageSetup)) {
+// OverrideGotPageSize sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideGotPageSize(cb func(PrintOperationPreview, *PrintContext, *PageSetup)) {
 	if cb == nil {
 		x.xGotPageSize = 0
 	} else {
@@ -80,8 +80,8 @@ 		})
 	}
 }
 
-// GetCallbackGotPageSize gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackGotPageSize() func(PrintOperationPreview, *PrintContext, *PageSetup) {
+// GetGotPageSize gets the callback function.
+func (x *PrintOperationPreviewIface) GetGotPageSize() func(PrintOperationPreview, *PrintContext, *PageSetup) {
 	if x.xGotPageSize == 0 {
 		return nil
 	}
@@ -92,8 +92,8 @@ 		rawCallback(PreviewVar.GoPointer(), ContextVar.GoPointer(), PageSetupVar.GoPointer())
 	}
 }
 
-// SetCallbackRenderPage sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackRenderPage(cb func(PrintOperationPreview, int)) {
+// OverrideRenderPage sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideRenderPage(cb func(PrintOperationPreview, int)) {
 	if cb == nil {
 		x.xRenderPage = 0
 	} else {
@@ -103,8 +103,8 @@ 		})
 	}
 }
 
-// GetCallbackRenderPage gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackRenderPage() func(PrintOperationPreview, int) {
+// GetRenderPage gets the callback function.
+func (x *PrintOperationPreviewIface) GetRenderPage() func(PrintOperationPreview, int) {
 	if x.xRenderPage == 0 {
 		return nil
 	}
@@ -115,8 +115,8 @@ 		rawCallback(PreviewVar.GoPointer(), PageNrVar)
 	}
 }
 
-// SetCallbackIsSelected sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackIsSelected(cb func(PrintOperationPreview, int) bool) {
+// OverrideIsSelected sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideIsSelected(cb func(PrintOperationPreview, int) bool) {
 	if cb == nil {
 		x.xIsSelected = 0
 	} else {
@@ -126,8 +126,8 @@ 		})
 	}
 }
 
-// GetCallbackIsSelected gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackIsSelected() func(PrintOperationPreview, int) bool {
+// GetIsSelected gets the callback function.
+func (x *PrintOperationPreviewIface) GetIsSelected() func(PrintOperationPreview, int) bool {
 	if x.xIsSelected == 0 {
 		return nil
 	}
@@ -138,8 +138,8 @@ 		return rawCallback(PreviewVar.GoPointer(), PageNrVar)
 	}
 }
 
-// SetCallbackEndPreview sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackEndPreview(cb func(PrintOperationPreview)) {
+// OverrideEndPreview sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideEndPreview(cb func(PrintOperationPreview)) {
 	if cb == nil {
 		x.xEndPreview = 0
 	} else {
@@ -149,8 +149,8 @@ 		})
 	}
 }
 
-// GetCallbackEndPreview gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackEndPreview() func(PrintOperationPreview) {
+// GetEndPreview gets the callback function.
+func (x *PrintOperationPreviewIface) GetEndPreview() func(PrintOperationPreview) {
 	if x.xEndPreview == 0 {
 		return nil
 	}
@@ -161,8 +161,8 @@ 		rawCallback(PreviewVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -172,8 +172,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *PrintOperationPreviewIface) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -184,8 +184,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -195,8 +195,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *PrintOperationPreviewIface) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -207,8 +207,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -218,8 +218,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *PrintOperationPreviewIface) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -230,8 +230,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -241,8 +241,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *PrintOperationPreviewIface) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
@@ -253,8 +253,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved5 sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackGtkReserved5(cb func()) {
+// OverrideGtkReserved5 sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideGtkReserved5(cb func()) {
 	if cb == nil {
 		x.xGtkReserved5 = 0
 	} else {
@@ -264,8 +264,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved5 gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackGtkReserved5() func() {
+// GetGtkReserved5 gets the callback function.
+func (x *PrintOperationPreviewIface) GetGtkReserved5() func() {
 	if x.xGtkReserved5 == 0 {
 		return nil
 	}
@@ -276,8 +276,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved6 sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackGtkReserved6(cb func()) {
+// OverrideGtkReserved6 sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideGtkReserved6(cb func()) {
 	if cb == nil {
 		x.xGtkReserved6 = 0
 	} else {
@@ -287,8 +287,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved6 gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackGtkReserved6() func() {
+// GetGtkReserved6 gets the callback function.
+func (x *PrintOperationPreviewIface) GetGtkReserved6() func() {
 	if x.xGtkReserved6 == 0 {
 		return nil
 	}
@@ -299,8 +299,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved7 sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackGtkReserved7(cb func()) {
+// OverrideGtkReserved7 sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideGtkReserved7(cb func()) {
 	if cb == nil {
 		x.xGtkReserved7 = 0
 	} else {
@@ -310,8 +310,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved7 gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackGtkReserved7() func() {
+// GetGtkReserved7 gets the callback function.
+func (x *PrintOperationPreviewIface) GetGtkReserved7() func() {
 	if x.xGtkReserved7 == 0 {
 		return nil
 	}
@@ -322,8 +322,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved8 sets the callback function.
-func (x *PrintOperationPreviewIface) SetCallbackGtkReserved8(cb func()) {
+// OverrideGtkReserved8 sets the callback function.
+func (x *PrintOperationPreviewIface) OverrideGtkReserved8(cb func()) {
 	if cb == nil {
 		x.xGtkReserved8 = 0
 	} else {
@@ -333,8 +333,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved8 gets the callback function.
-func (x *PrintOperationPreviewIface) GetCallbackGtkReserved8() func() {
+// GetGtkReserved8 gets the callback function.
+func (x *PrintOperationPreviewIface) GetGtkReserved8() func() {
 	if x.xGtkReserved8 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkrange.go b/v4/gtk/gtkrange.go
index b9e3f3767ace1b396b0f48189b6d378b17290f34..9a6afd042b80e8c61d4e046ca7619784185b5515 100644
--- a/v4/gtk/gtkrange.go
+++ b/v4/gtk/gtkrange.go
@@ -35,8 +35,8 @@ func (x *RangeClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackValueChanged sets the callback function.
-func (x *RangeClass) SetCallbackValueChanged(cb func(*Range)) {
+// OverrideValueChanged sets the callback function.
+func (x *RangeClass) OverrideValueChanged(cb func(*Range)) {
 	if cb == nil {
 		x.xValueChanged = 0
 	} else {
@@ -46,8 +46,8 @@ 		})
 	}
 }
 
-// GetCallbackValueChanged gets the callback function.
-func (x *RangeClass) GetCallbackValueChanged() func(*Range) {
+// GetValueChanged gets the callback function.
+func (x *RangeClass) GetValueChanged() func(*Range) {
 	if x.xValueChanged == 0 {
 		return nil
 	}
@@ -58,8 +58,8 @@ 		rawCallback(RangeVar.GoPointer())
 	}
 }
 
-// SetCallbackAdjustBounds sets the callback function.
-func (x *RangeClass) SetCallbackAdjustBounds(cb func(*Range, float64)) {
+// OverrideAdjustBounds sets the callback function.
+func (x *RangeClass) OverrideAdjustBounds(cb func(*Range, float64)) {
 	if cb == nil {
 		x.xAdjustBounds = 0
 	} else {
@@ -69,8 +69,8 @@ 		})
 	}
 }
 
-// GetCallbackAdjustBounds gets the callback function.
-func (x *RangeClass) GetCallbackAdjustBounds() func(*Range, float64) {
+// GetAdjustBounds gets the callback function.
+func (x *RangeClass) GetAdjustBounds() func(*Range, float64) {
 	if x.xAdjustBounds == 0 {
 		return nil
 	}
@@ -81,8 +81,8 @@ 		rawCallback(RangeVar.GoPointer(), NewValueVar)
 	}
 }
 
-// SetCallbackMoveSlider sets the callback function.
-func (x *RangeClass) SetCallbackMoveSlider(cb func(*Range, ScrollType)) {
+// OverrideMoveSlider sets the callback function.
+func (x *RangeClass) OverrideMoveSlider(cb func(*Range, ScrollType)) {
 	if cb == nil {
 		x.xMoveSlider = 0
 	} else {
@@ -92,8 +92,8 @@ 		})
 	}
 }
 
-// GetCallbackMoveSlider gets the callback function.
-func (x *RangeClass) GetCallbackMoveSlider() func(*Range, ScrollType) {
+// GetMoveSlider gets the callback function.
+func (x *RangeClass) GetMoveSlider() func(*Range, ScrollType) {
 	if x.xMoveSlider == 0 {
 		return nil
 	}
@@ -104,8 +104,8 @@ 		rawCallback(RangeVar.GoPointer(), ScrollVar)
 	}
 }
 
-// SetCallbackGetRangeBorder sets the callback function.
-func (x *RangeClass) SetCallbackGetRangeBorder(cb func(*Range, *Border)) {
+// OverrideGetRangeBorder sets the callback function.
+func (x *RangeClass) OverrideGetRangeBorder(cb func(*Range, *Border)) {
 	if cb == nil {
 		x.xGetRangeBorder = 0
 	} else {
@@ -115,8 +115,8 @@ 		})
 	}
 }
 
-// GetCallbackGetRangeBorder gets the callback function.
-func (x *RangeClass) GetCallbackGetRangeBorder() func(*Range, *Border) {
+// GetGetRangeBorder gets the callback function.
+func (x *RangeClass) GetGetRangeBorder() func(*Range, *Border) {
 	if x.xGetRangeBorder == 0 {
 		return nil
 	}
@@ -127,8 +127,8 @@ 		rawCallback(RangeVar.GoPointer(), BorderVar)
 	}
 }
 
-// SetCallbackChangeValue sets the callback function.
-func (x *RangeClass) SetCallbackChangeValue(cb func(*Range, ScrollType, float64) bool) {
+// OverrideChangeValue sets the callback function.
+func (x *RangeClass) OverrideChangeValue(cb func(*Range, ScrollType, float64) bool) {
 	if cb == nil {
 		x.xChangeValue = 0
 	} else {
@@ -138,8 +138,8 @@ 		})
 	}
 }
 
-// GetCallbackChangeValue gets the callback function.
-func (x *RangeClass) GetCallbackChangeValue() func(*Range, ScrollType, float64) bool {
+// GetChangeValue gets the callback function.
+func (x *RangeClass) GetChangeValue() func(*Range, ScrollType, float64) bool {
 	if x.xChangeValue == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkrecentmanager.go b/v4/gtk/gtkrecentmanager.go
index acd809f6b8700deed3b33a5f9480eaa40ca8205c..04976d3e2f1bcfea7cc22d84dae6154c13ed179b 100644
--- a/v4/gtk/gtkrecentmanager.go
+++ b/v4/gtk/gtkrecentmanager.go
@@ -346,8 +346,8 @@ func (x *RecentManagerClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *RecentManagerClass) SetCallbackChanged(cb func(*RecentManager)) {
+// OverrideChanged sets the callback function.
+func (x *RecentManagerClass) OverrideChanged(cb func(*RecentManager)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -357,8 +357,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *RecentManagerClass) GetCallbackChanged() func(*RecentManager) {
+// GetChanged gets the callback function.
+func (x *RecentManagerClass) GetChanged() func(*RecentManager) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -369,8 +369,8 @@ 		rawCallback(ManagerVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkRecent1 sets the callback function.
-func (x *RecentManagerClass) SetCallbackGtkRecent1(cb func()) {
+// OverrideGtkRecent1 sets the callback function.
+func (x *RecentManagerClass) OverrideGtkRecent1(cb func()) {
 	if cb == nil {
 		x.xGtkRecent1 = 0
 	} else {
@@ -380,8 +380,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkRecent1 gets the callback function.
-func (x *RecentManagerClass) GetCallbackGtkRecent1() func() {
+// GetGtkRecent1 gets the callback function.
+func (x *RecentManagerClass) GetGtkRecent1() func() {
 	if x.xGtkRecent1 == 0 {
 		return nil
 	}
@@ -392,8 +392,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkRecent2 sets the callback function.
-func (x *RecentManagerClass) SetCallbackGtkRecent2(cb func()) {
+// OverrideGtkRecent2 sets the callback function.
+func (x *RecentManagerClass) OverrideGtkRecent2(cb func()) {
 	if cb == nil {
 		x.xGtkRecent2 = 0
 	} else {
@@ -403,8 +403,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkRecent2 gets the callback function.
-func (x *RecentManagerClass) GetCallbackGtkRecent2() func() {
+// GetGtkRecent2 gets the callback function.
+func (x *RecentManagerClass) GetGtkRecent2() func() {
 	if x.xGtkRecent2 == 0 {
 		return nil
 	}
@@ -415,8 +415,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkRecent3 sets the callback function.
-func (x *RecentManagerClass) SetCallbackGtkRecent3(cb func()) {
+// OverrideGtkRecent3 sets the callback function.
+func (x *RecentManagerClass) OverrideGtkRecent3(cb func()) {
 	if cb == nil {
 		x.xGtkRecent3 = 0
 	} else {
@@ -426,8 +426,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkRecent3 gets the callback function.
-func (x *RecentManagerClass) GetCallbackGtkRecent3() func() {
+// GetGtkRecent3 gets the callback function.
+func (x *RecentManagerClass) GetGtkRecent3() func() {
 	if x.xGtkRecent3 == 0 {
 		return nil
 	}
@@ -438,8 +438,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkRecent4 sets the callback function.
-func (x *RecentManagerClass) SetCallbackGtkRecent4(cb func()) {
+// OverrideGtkRecent4 sets the callback function.
+func (x *RecentManagerClass) OverrideGtkRecent4(cb func()) {
 	if cb == nil {
 		x.xGtkRecent4 = 0
 	} else {
@@ -449,8 +449,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkRecent4 gets the callback function.
-func (x *RecentManagerClass) GetCallbackGtkRecent4() func() {
+// GetGtkRecent4 gets the callback function.
+func (x *RecentManagerClass) GetGtkRecent4() func() {
 	if x.xGtkRecent4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkscale.go b/v4/gtk/gtkscale.go
index 3e01f476dc70e86ac4f67facde3f73ffd5f1ab85..0c8579097d4cbd65c03c08bae1cb1c55909bffb9 100644
--- a/v4/gtk/gtkscale.go
+++ b/v4/gtk/gtkscale.go
@@ -29,8 +29,8 @@ func (x *ScaleClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetLayoutOffsets sets the callback function.
-func (x *ScaleClass) SetCallbackGetLayoutOffsets(cb func(*Scale, int, int)) {
+// OverrideGetLayoutOffsets sets the callback function.
+func (x *ScaleClass) OverrideGetLayoutOffsets(cb func(*Scale, int, int)) {
 	if cb == nil {
 		x.xGetLayoutOffsets = 0
 	} else {
@@ -40,8 +40,8 @@ 		})
 	}
 }
 
-// GetCallbackGetLayoutOffsets gets the callback function.
-func (x *ScaleClass) GetCallbackGetLayoutOffsets() func(*Scale, int, int) {
+// GetGetLayoutOffsets gets the callback function.
+func (x *ScaleClass) GetGetLayoutOffsets() func(*Scale, int, int) {
 	if x.xGetLayoutOffsets == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkscalebutton.go b/v4/gtk/gtkscalebutton.go
index c44c66474bc1d968b47508deb652bd0d63fa1ed5..c5037a6f3140aca90226aaf0db567f23931ca11c 100644
--- a/v4/gtk/gtkscalebutton.go
+++ b/v4/gtk/gtkscalebutton.go
@@ -26,8 +26,8 @@ func (x *ScaleButtonClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackValueChanged sets the callback function.
-func (x *ScaleButtonClass) SetCallbackValueChanged(cb func(*ScaleButton, float64)) {
+// OverrideValueChanged sets the callback function.
+func (x *ScaleButtonClass) OverrideValueChanged(cb func(*ScaleButton, float64)) {
 	if cb == nil {
 		x.xValueChanged = 0
 	} else {
@@ -37,8 +37,8 @@ 		})
 	}
 }
 
-// GetCallbackValueChanged gets the callback function.
-func (x *ScaleButtonClass) GetCallbackValueChanged() func(*ScaleButton, float64) {
+// GetValueChanged gets the callback function.
+func (x *ScaleButtonClass) GetValueChanged() func(*ScaleButton, float64) {
 	if x.xValueChanged == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkscrollable.go b/v4/gtk/gtkscrollable.go
index e7d3eb98bb7e116f1b040584dbf3e71295680211..fd7def4b60cb5ef70bcb8fcb634ccc4087822296 100644
--- a/v4/gtk/gtkscrollable.go
+++ b/v4/gtk/gtkscrollable.go
@@ -23,8 +23,8 @@ func (x *ScrollableInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetBorder sets the callback function.
-func (x *ScrollableInterface) SetCallbackGetBorder(cb func(Scrollable, *Border) bool) {
+// OverrideGetBorder sets the callback function.
+func (x *ScrollableInterface) OverrideGetBorder(cb func(Scrollable, *Border) bool) {
 	if cb == nil {
 		x.xGetBorder = 0
 	} else {
@@ -34,8 +34,8 @@ 		})
 	}
 }
 
-// GetCallbackGetBorder gets the callback function.
-func (x *ScrollableInterface) GetCallbackGetBorder() func(Scrollable, *Border) bool {
+// GetGetBorder gets the callback function.
+func (x *ScrollableInterface) GetGetBorder() func(Scrollable, *Border) bool {
 	if x.xGetBorder == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkselectionmodel.go b/v4/gtk/gtkselectionmodel.go
index 4e9485b2bf504159a06093ae6881ec8c6d01fe8d..7d96b3ba6e663934872b04abd7ae3f58f436ff61 100644
--- a/v4/gtk/gtkselectionmodel.go
+++ b/v4/gtk/gtkselectionmodel.go
@@ -50,8 +50,8 @@ func (x *SelectionModelInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackIsSelected sets the callback function.
-func (x *SelectionModelInterface) SetCallbackIsSelected(cb func(SelectionModel, uint) bool) {
+// OverrideIsSelected sets the callback function.
+func (x *SelectionModelInterface) OverrideIsSelected(cb func(SelectionModel, uint) bool) {
 	if cb == nil {
 		x.xIsSelected = 0
 	} else {
@@ -61,8 +61,8 @@ 		})
 	}
 }
 
-// GetCallbackIsSelected gets the callback function.
-func (x *SelectionModelInterface) GetCallbackIsSelected() func(SelectionModel, uint) bool {
+// GetIsSelected gets the callback function.
+func (x *SelectionModelInterface) GetIsSelected() func(SelectionModel, uint) bool {
 	if x.xIsSelected == 0 {
 		return nil
 	}
@@ -73,8 +73,8 @@ 		return rawCallback(ModelVar.GoPointer(), PositionVar)
 	}
 }
 
-// SetCallbackGetSelectionInRange sets the callback function.
-func (x *SelectionModelInterface) SetCallbackGetSelectionInRange(cb func(SelectionModel, uint, uint) *Bitset) {
+// OverrideGetSelectionInRange sets the callback function.
+func (x *SelectionModelInterface) OverrideGetSelectionInRange(cb func(SelectionModel, uint, uint) *Bitset) {
 	if cb == nil {
 		x.xGetSelectionInRange = 0
 	} else {
@@ -84,8 +84,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSelectionInRange gets the callback function.
-func (x *SelectionModelInterface) GetCallbackGetSelectionInRange() func(SelectionModel, uint, uint) *Bitset {
+// GetGetSelectionInRange gets the callback function.
+func (x *SelectionModelInterface) GetGetSelectionInRange() func(SelectionModel, uint, uint) *Bitset {
 	if x.xGetSelectionInRange == 0 {
 		return nil
 	}
@@ -96,8 +96,8 @@ 		return rawCallback(ModelVar.GoPointer(), PositionVar, NItemsVar)
 	}
 }
 
-// SetCallbackSelectItem sets the callback function.
-func (x *SelectionModelInterface) SetCallbackSelectItem(cb func(SelectionModel, uint, bool) bool) {
+// OverrideSelectItem sets the callback function.
+func (x *SelectionModelInterface) OverrideSelectItem(cb func(SelectionModel, uint, bool) bool) {
 	if cb == nil {
 		x.xSelectItem = 0
 	} else {
@@ -107,8 +107,8 @@ 		})
 	}
 }
 
-// GetCallbackSelectItem gets the callback function.
-func (x *SelectionModelInterface) GetCallbackSelectItem() func(SelectionModel, uint, bool) bool {
+// GetSelectItem gets the callback function.
+func (x *SelectionModelInterface) GetSelectItem() func(SelectionModel, uint, bool) bool {
 	if x.xSelectItem == 0 {
 		return nil
 	}
@@ -119,8 +119,8 @@ 		return rawCallback(ModelVar.GoPointer(), PositionVar, UnselectRestVar)
 	}
 }
 
-// SetCallbackUnselectItem sets the callback function.
-func (x *SelectionModelInterface) SetCallbackUnselectItem(cb func(SelectionModel, uint) bool) {
+// OverrideUnselectItem sets the callback function.
+func (x *SelectionModelInterface) OverrideUnselectItem(cb func(SelectionModel, uint) bool) {
 	if cb == nil {
 		x.xUnselectItem = 0
 	} else {
@@ -130,8 +130,8 @@ 		})
 	}
 }
 
-// GetCallbackUnselectItem gets the callback function.
-func (x *SelectionModelInterface) GetCallbackUnselectItem() func(SelectionModel, uint) bool {
+// GetUnselectItem gets the callback function.
+func (x *SelectionModelInterface) GetUnselectItem() func(SelectionModel, uint) bool {
 	if x.xUnselectItem == 0 {
 		return nil
 	}
@@ -142,8 +142,8 @@ 		return rawCallback(ModelVar.GoPointer(), PositionVar)
 	}
 }
 
-// SetCallbackSelectRange sets the callback function.
-func (x *SelectionModelInterface) SetCallbackSelectRange(cb func(SelectionModel, uint, uint, bool) bool) {
+// OverrideSelectRange sets the callback function.
+func (x *SelectionModelInterface) OverrideSelectRange(cb func(SelectionModel, uint, uint, bool) bool) {
 	if cb == nil {
 		x.xSelectRange = 0
 	} else {
@@ -153,8 +153,8 @@ 		})
 	}
 }
 
-// GetCallbackSelectRange gets the callback function.
-func (x *SelectionModelInterface) GetCallbackSelectRange() func(SelectionModel, uint, uint, bool) bool {
+// GetSelectRange gets the callback function.
+func (x *SelectionModelInterface) GetSelectRange() func(SelectionModel, uint, uint, bool) bool {
 	if x.xSelectRange == 0 {
 		return nil
 	}
@@ -165,8 +165,8 @@ 		return rawCallback(ModelVar.GoPointer(), PositionVar, NItemsVar, UnselectRestVar)
 	}
 }
 
-// SetCallbackUnselectRange sets the callback function.
-func (x *SelectionModelInterface) SetCallbackUnselectRange(cb func(SelectionModel, uint, uint) bool) {
+// OverrideUnselectRange sets the callback function.
+func (x *SelectionModelInterface) OverrideUnselectRange(cb func(SelectionModel, uint, uint) bool) {
 	if cb == nil {
 		x.xUnselectRange = 0
 	} else {
@@ -176,8 +176,8 @@ 		})
 	}
 }
 
-// GetCallbackUnselectRange gets the callback function.
-func (x *SelectionModelInterface) GetCallbackUnselectRange() func(SelectionModel, uint, uint) bool {
+// GetUnselectRange gets the callback function.
+func (x *SelectionModelInterface) GetUnselectRange() func(SelectionModel, uint, uint) bool {
 	if x.xUnselectRange == 0 {
 		return nil
 	}
@@ -188,8 +188,8 @@ 		return rawCallback(ModelVar.GoPointer(), PositionVar, NItemsVar)
 	}
 }
 
-// SetCallbackSelectAll sets the callback function.
-func (x *SelectionModelInterface) SetCallbackSelectAll(cb func(SelectionModel) bool) {
+// OverrideSelectAll sets the callback function.
+func (x *SelectionModelInterface) OverrideSelectAll(cb func(SelectionModel) bool) {
 	if cb == nil {
 		x.xSelectAll = 0
 	} else {
@@ -199,8 +199,8 @@ 		})
 	}
 }
 
-// GetCallbackSelectAll gets the callback function.
-func (x *SelectionModelInterface) GetCallbackSelectAll() func(SelectionModel) bool {
+// GetSelectAll gets the callback function.
+func (x *SelectionModelInterface) GetSelectAll() func(SelectionModel) bool {
 	if x.xSelectAll == 0 {
 		return nil
 	}
@@ -211,8 +211,8 @@ 		return rawCallback(ModelVar.GoPointer())
 	}
 }
 
-// SetCallbackUnselectAll sets the callback function.
-func (x *SelectionModelInterface) SetCallbackUnselectAll(cb func(SelectionModel) bool) {
+// OverrideUnselectAll sets the callback function.
+func (x *SelectionModelInterface) OverrideUnselectAll(cb func(SelectionModel) bool) {
 	if cb == nil {
 		x.xUnselectAll = 0
 	} else {
@@ -222,8 +222,8 @@ 		})
 	}
 }
 
-// GetCallbackUnselectAll gets the callback function.
-func (x *SelectionModelInterface) GetCallbackUnselectAll() func(SelectionModel) bool {
+// GetUnselectAll gets the callback function.
+func (x *SelectionModelInterface) GetUnselectAll() func(SelectionModel) bool {
 	if x.xUnselectAll == 0 {
 		return nil
 	}
@@ -234,8 +234,8 @@ 		return rawCallback(ModelVar.GoPointer())
 	}
 }
 
-// SetCallbackSetSelection sets the callback function.
-func (x *SelectionModelInterface) SetCallbackSetSelection(cb func(SelectionModel, *Bitset, *Bitset) bool) {
+// OverrideSetSelection sets the callback function.
+func (x *SelectionModelInterface) OverrideSetSelection(cb func(SelectionModel, *Bitset, *Bitset) bool) {
 	if cb == nil {
 		x.xSetSelection = 0
 	} else {
@@ -245,8 +245,8 @@ 		})
 	}
 }
 
-// GetCallbackSetSelection gets the callback function.
-func (x *SelectionModelInterface) GetCallbackSetSelection() func(SelectionModel, *Bitset, *Bitset) bool {
+// GetSetSelection gets the callback function.
+func (x *SelectionModelInterface) GetSetSelection() func(SelectionModel, *Bitset, *Bitset) bool {
 	if x.xSetSelection == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkshortcutmanager.go b/v4/gtk/gtkshortcutmanager.go
index 3d96ecc27b2e22dfc05d2182985e05e7a04e3bdb..dc8e102209c181b3a9fcdf8d9b27395a5928f49e 100644
--- a/v4/gtk/gtkshortcutmanager.go
+++ b/v4/gtk/gtkshortcutmanager.go
@@ -28,8 +28,8 @@ func (x *ShortcutManagerInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackAddController sets the callback function.
-func (x *ShortcutManagerInterface) SetCallbackAddController(cb func(ShortcutManager, *ShortcutController)) {
+// OverrideAddController sets the callback function.
+func (x *ShortcutManagerInterface) OverrideAddController(cb func(ShortcutManager, *ShortcutController)) {
 	if cb == nil {
 		x.xAddController = 0
 	} else {
@@ -39,8 +39,8 @@ 		})
 	}
 }
 
-// GetCallbackAddController gets the callback function.
-func (x *ShortcutManagerInterface) GetCallbackAddController() func(ShortcutManager, *ShortcutController) {
+// GetAddController gets the callback function.
+func (x *ShortcutManagerInterface) GetAddController() func(ShortcutManager, *ShortcutController) {
 	if x.xAddController == 0 {
 		return nil
 	}
@@ -51,8 +51,8 @@ 		rawCallback(SelfVar.GoPointer(), ControllerVar.GoPointer())
 	}
 }
 
-// SetCallbackRemoveController sets the callback function.
-func (x *ShortcutManagerInterface) SetCallbackRemoveController(cb func(ShortcutManager, *ShortcutController)) {
+// OverrideRemoveController sets the callback function.
+func (x *ShortcutManagerInterface) OverrideRemoveController(cb func(ShortcutManager, *ShortcutController)) {
 	if cb == nil {
 		x.xRemoveController = 0
 	} else {
@@ -62,8 +62,8 @@ 		})
 	}
 }
 
-// GetCallbackRemoveController gets the callback function.
-func (x *ShortcutManagerInterface) GetCallbackRemoveController() func(ShortcutManager, *ShortcutController) {
+// GetRemoveController gets the callback function.
+func (x *ShortcutManagerInterface) GetRemoveController() func(ShortcutManager, *ShortcutController) {
 	if x.xRemoveController == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtksorter.go b/v4/gtk/gtksorter.go
index 93c256b1e001ce38b2651f1dc285744ae2b2b298..112c4b9d8c3731eba32b61c22ba71e87b16e0e16 100644
--- a/v4/gtk/gtksorter.go
+++ b/v4/gtk/gtksorter.go
@@ -43,8 +43,8 @@ func (x *SorterClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackCompare sets the callback function.
-func (x *SorterClass) SetCallbackCompare(cb func(*Sorter, *gobject.Object, *gobject.Object) Ordering) {
+// OverrideCompare sets the callback function.
+func (x *SorterClass) OverrideCompare(cb func(*Sorter, *gobject.Object, *gobject.Object) Ordering) {
 	if cb == nil {
 		x.xCompare = 0
 	} else {
@@ -54,8 +54,8 @@ 		})
 	}
 }
 
-// GetCallbackCompare gets the callback function.
-func (x *SorterClass) GetCallbackCompare() func(*Sorter, *gobject.Object, *gobject.Object) Ordering {
+// GetCompare gets the callback function.
+func (x *SorterClass) GetCompare() func(*Sorter, *gobject.Object, *gobject.Object) Ordering {
 	if x.xCompare == 0 {
 		return nil
 	}
@@ -66,8 +66,8 @@ 		return rawCallback(SelfVar.GoPointer(), Item1Var.GoPointer(), Item2Var.GoPointer())
 	}
 }
 
-// SetCallbackGetOrder sets the callback function.
-func (x *SorterClass) SetCallbackGetOrder(cb func(*Sorter) SorterOrder) {
+// OverrideGetOrder sets the callback function.
+func (x *SorterClass) OverrideGetOrder(cb func(*Sorter) SorterOrder) {
 	if cb == nil {
 		x.xGetOrder = 0
 	} else {
@@ -77,8 +77,8 @@ 		})
 	}
 }
 
-// GetCallbackGetOrder gets the callback function.
-func (x *SorterClass) GetCallbackGetOrder() func(*Sorter) SorterOrder {
+// GetGetOrder gets the callback function.
+func (x *SorterClass) GetGetOrder() func(*Sorter) SorterOrder {
 	if x.xGetOrder == 0 {
 		return nil
 	}
@@ -89,8 +89,8 @@ 		return rawCallback(SelfVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *SorterClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *SorterClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -100,8 +100,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *SorterClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *SorterClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -112,8 +112,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *SorterClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *SorterClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -123,8 +123,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *SorterClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *SorterClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -135,8 +135,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *SorterClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *SorterClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -146,8 +146,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *SorterClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *SorterClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -158,8 +158,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *SorterClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *SorterClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -169,8 +169,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *SorterClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *SorterClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
@@ -181,8 +181,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved5 sets the callback function.
-func (x *SorterClass) SetCallbackGtkReserved5(cb func()) {
+// OverrideGtkReserved5 sets the callback function.
+func (x *SorterClass) OverrideGtkReserved5(cb func()) {
 	if cb == nil {
 		x.xGtkReserved5 = 0
 	} else {
@@ -192,8 +192,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved5 gets the callback function.
-func (x *SorterClass) GetCallbackGtkReserved5() func() {
+// GetGtkReserved5 gets the callback function.
+func (x *SorterClass) GetGtkReserved5() func() {
 	if x.xGtkReserved5 == 0 {
 		return nil
 	}
@@ -204,8 +204,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved6 sets the callback function.
-func (x *SorterClass) SetCallbackGtkReserved6(cb func()) {
+// OverrideGtkReserved6 sets the callback function.
+func (x *SorterClass) OverrideGtkReserved6(cb func()) {
 	if cb == nil {
 		x.xGtkReserved6 = 0
 	} else {
@@ -215,8 +215,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved6 gets the callback function.
-func (x *SorterClass) GetCallbackGtkReserved6() func() {
+// GetGtkReserved6 gets the callback function.
+func (x *SorterClass) GetGtkReserved6() func() {
 	if x.xGtkReserved6 == 0 {
 		return nil
 	}
@@ -227,8 +227,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved7 sets the callback function.
-func (x *SorterClass) SetCallbackGtkReserved7(cb func()) {
+// OverrideGtkReserved7 sets the callback function.
+func (x *SorterClass) OverrideGtkReserved7(cb func()) {
 	if cb == nil {
 		x.xGtkReserved7 = 0
 	} else {
@@ -238,8 +238,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved7 gets the callback function.
-func (x *SorterClass) GetCallbackGtkReserved7() func() {
+// GetGtkReserved7 gets the callback function.
+func (x *SorterClass) GetGtkReserved7() func() {
 	if x.xGtkReserved7 == 0 {
 		return nil
 	}
@@ -250,8 +250,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved8 sets the callback function.
-func (x *SorterClass) SetCallbackGtkReserved8(cb func()) {
+// OverrideGtkReserved8 sets the callback function.
+func (x *SorterClass) OverrideGtkReserved8(cb func()) {
 	if cb == nil {
 		x.xGtkReserved8 = 0
 	} else {
@@ -261,8 +261,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved8 gets the callback function.
-func (x *SorterClass) GetCallbackGtkReserved8() func() {
+// GetGtkReserved8 gets the callback function.
+func (x *SorterClass) GetGtkReserved8() func() {
 	if x.xGtkReserved8 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkstylecontext.go b/v4/gtk/gtkstylecontext.go
index 8740a1dbe2c5d8217ccecde63fb49d7a540e1a76..7d80bfb51535a8e564c4847dcfacfa7bd5fb6bb3 100644
--- a/v4/gtk/gtkstylecontext.go
+++ b/v4/gtk/gtkstylecontext.go
@@ -32,8 +32,8 @@ func (x *StyleContextClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *StyleContextClass) SetCallbackChanged(cb func(*StyleContext)) {
+// OverrideChanged sets the callback function.
+func (x *StyleContextClass) OverrideChanged(cb func(*StyleContext)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -43,8 +43,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *StyleContextClass) GetCallbackChanged() func(*StyleContext) {
+// GetChanged gets the callback function.
+func (x *StyleContextClass) GetChanged() func(*StyleContext) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -55,8 +55,8 @@ 		rawCallback(ContextVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *StyleContextClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *StyleContextClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -66,8 +66,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *StyleContextClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *StyleContextClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -78,8 +78,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *StyleContextClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *StyleContextClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -89,8 +89,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *StyleContextClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *StyleContextClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -101,8 +101,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *StyleContextClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *StyleContextClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -112,8 +112,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *StyleContextClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *StyleContextClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -124,8 +124,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *StyleContextClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *StyleContextClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -135,8 +135,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *StyleContextClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *StyleContextClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtksymbolicpaintable.go b/v4/gtk/gtksymbolicpaintable.go
index 061d58fe46114b09420f1f35260e5c11fb8c0b17..388feabd6af97cc6c8920f4c486742c0b6759107 100644
--- a/v4/gtk/gtksymbolicpaintable.go
+++ b/v4/gtk/gtksymbolicpaintable.go
@@ -25,8 +25,8 @@ func (x *SymbolicPaintableInterface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackSnapshotSymbolic sets the callback function.
-func (x *SymbolicPaintableInterface) SetCallbackSnapshotSymbolic(cb func(SymbolicPaintable, *gdk.Snapshot, float64, float64, []gdk.RGBA, uint)) {
+// OverrideSnapshotSymbolic sets the callback function.
+func (x *SymbolicPaintableInterface) OverrideSnapshotSymbolic(cb func(SymbolicPaintable, *gdk.Snapshot, float64, float64, []gdk.RGBA, uint)) {
 	if cb == nil {
 		x.xSnapshotSymbolic = 0
 	} else {
@@ -36,8 +36,8 @@ 		})
 	}
 }
 
-// GetCallbackSnapshotSymbolic gets the callback function.
-func (x *SymbolicPaintableInterface) GetCallbackSnapshotSymbolic() func(SymbolicPaintable, *gdk.Snapshot, float64, float64, []gdk.RGBA, uint) {
+// GetSnapshotSymbolic gets the callback function.
+func (x *SymbolicPaintableInterface) GetSnapshotSymbolic() func(SymbolicPaintable, *gdk.Snapshot, float64, float64, []gdk.RGBA, uint) {
 	if x.xSnapshotSymbolic == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtktextbuffer.go b/v4/gtk/gtktextbuffer.go
index 22dbad5825c3d686e647697e03fd428e7cb099ad..5a87e7e622e865a4dfa27ee45438d5a893c12457 100644
--- a/v4/gtk/gtktextbuffer.go
+++ b/v4/gtk/gtktextbuffer.go
@@ -62,8 +62,8 @@ func (x *TextBufferClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackInsertText sets the callback function.
-func (x *TextBufferClass) SetCallbackInsertText(cb func(*TextBuffer, *TextIter, string, int)) {
+// OverrideInsertText sets the callback function.
+func (x *TextBufferClass) OverrideInsertText(cb func(*TextBuffer, *TextIter, string, int)) {
 	if cb == nil {
 		x.xInsertText = 0
 	} else {
@@ -73,8 +73,8 @@ 		})
 	}
 }
 
-// GetCallbackInsertText gets the callback function.
-func (x *TextBufferClass) GetCallbackInsertText() func(*TextBuffer, *TextIter, string, int) {
+// GetInsertText gets the callback function.
+func (x *TextBufferClass) GetInsertText() func(*TextBuffer, *TextIter, string, int) {
 	if x.xInsertText == 0 {
 		return nil
 	}
@@ -85,8 +85,8 @@ 		rawCallback(BufferVar.GoPointer(), PosVar, NewTextVar, NewTextLengthVar)
 	}
 }
 
-// SetCallbackInsertPaintable sets the callback function.
-func (x *TextBufferClass) SetCallbackInsertPaintable(cb func(*TextBuffer, *TextIter, gdk.Paintable)) {
+// OverrideInsertPaintable sets the callback function.
+func (x *TextBufferClass) OverrideInsertPaintable(cb func(*TextBuffer, *TextIter, gdk.Paintable)) {
 	if cb == nil {
 		x.xInsertPaintable = 0
 	} else {
@@ -96,8 +96,8 @@ 		})
 	}
 }
 
-// GetCallbackInsertPaintable gets the callback function.
-func (x *TextBufferClass) GetCallbackInsertPaintable() func(*TextBuffer, *TextIter, gdk.Paintable) {
+// GetInsertPaintable gets the callback function.
+func (x *TextBufferClass) GetInsertPaintable() func(*TextBuffer, *TextIter, gdk.Paintable) {
 	if x.xInsertPaintable == 0 {
 		return nil
 	}
@@ -108,8 +108,8 @@ 		rawCallback(BufferVar.GoPointer(), IterVar, PaintableVar.GoPointer())
 	}
 }
 
-// SetCallbackInsertChildAnchor sets the callback function.
-func (x *TextBufferClass) SetCallbackInsertChildAnchor(cb func(*TextBuffer, *TextIter, *TextChildAnchor)) {
+// OverrideInsertChildAnchor sets the callback function.
+func (x *TextBufferClass) OverrideInsertChildAnchor(cb func(*TextBuffer, *TextIter, *TextChildAnchor)) {
 	if cb == nil {
 		x.xInsertChildAnchor = 0
 	} else {
@@ -119,8 +119,8 @@ 		})
 	}
 }
 
-// GetCallbackInsertChildAnchor gets the callback function.
-func (x *TextBufferClass) GetCallbackInsertChildAnchor() func(*TextBuffer, *TextIter, *TextChildAnchor) {
+// GetInsertChildAnchor gets the callback function.
+func (x *TextBufferClass) GetInsertChildAnchor() func(*TextBuffer, *TextIter, *TextChildAnchor) {
 	if x.xInsertChildAnchor == 0 {
 		return nil
 	}
@@ -131,8 +131,8 @@ 		rawCallback(BufferVar.GoPointer(), IterVar, AnchorVar.GoPointer())
 	}
 }
 
-// SetCallbackDeleteRange sets the callback function.
-func (x *TextBufferClass) SetCallbackDeleteRange(cb func(*TextBuffer, *TextIter, *TextIter)) {
+// OverrideDeleteRange sets the callback function.
+func (x *TextBufferClass) OverrideDeleteRange(cb func(*TextBuffer, *TextIter, *TextIter)) {
 	if cb == nil {
 		x.xDeleteRange = 0
 	} else {
@@ -142,8 +142,8 @@ 		})
 	}
 }
 
-// GetCallbackDeleteRange gets the callback function.
-func (x *TextBufferClass) GetCallbackDeleteRange() func(*TextBuffer, *TextIter, *TextIter) {
+// GetDeleteRange gets the callback function.
+func (x *TextBufferClass) GetDeleteRange() func(*TextBuffer, *TextIter, *TextIter) {
 	if x.xDeleteRange == 0 {
 		return nil
 	}
@@ -154,8 +154,8 @@ 		rawCallback(BufferVar.GoPointer(), StartVar, EndVar)
 	}
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *TextBufferClass) SetCallbackChanged(cb func(*TextBuffer)) {
+// OverrideChanged sets the callback function.
+func (x *TextBufferClass) OverrideChanged(cb func(*TextBuffer)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -165,8 +165,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *TextBufferClass) GetCallbackChanged() func(*TextBuffer) {
+// GetChanged gets the callback function.
+func (x *TextBufferClass) GetChanged() func(*TextBuffer) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -177,8 +177,8 @@ 		rawCallback(BufferVar.GoPointer())
 	}
 }
 
-// SetCallbackModifiedChanged sets the callback function.
-func (x *TextBufferClass) SetCallbackModifiedChanged(cb func(*TextBuffer)) {
+// OverrideModifiedChanged sets the callback function.
+func (x *TextBufferClass) OverrideModifiedChanged(cb func(*TextBuffer)) {
 	if cb == nil {
 		x.xModifiedChanged = 0
 	} else {
@@ -188,8 +188,8 @@ 		})
 	}
 }
 
-// GetCallbackModifiedChanged gets the callback function.
-func (x *TextBufferClass) GetCallbackModifiedChanged() func(*TextBuffer) {
+// GetModifiedChanged gets the callback function.
+func (x *TextBufferClass) GetModifiedChanged() func(*TextBuffer) {
 	if x.xModifiedChanged == 0 {
 		return nil
 	}
@@ -200,8 +200,8 @@ 		rawCallback(BufferVar.GoPointer())
 	}
 }
 
-// SetCallbackMarkSet sets the callback function.
-func (x *TextBufferClass) SetCallbackMarkSet(cb func(*TextBuffer, *TextIter, *TextMark)) {
+// OverrideMarkSet sets the callback function.
+func (x *TextBufferClass) OverrideMarkSet(cb func(*TextBuffer, *TextIter, *TextMark)) {
 	if cb == nil {
 		x.xMarkSet = 0
 	} else {
@@ -211,8 +211,8 @@ 		})
 	}
 }
 
-// GetCallbackMarkSet gets the callback function.
-func (x *TextBufferClass) GetCallbackMarkSet() func(*TextBuffer, *TextIter, *TextMark) {
+// GetMarkSet gets the callback function.
+func (x *TextBufferClass) GetMarkSet() func(*TextBuffer, *TextIter, *TextMark) {
 	if x.xMarkSet == 0 {
 		return nil
 	}
@@ -223,8 +223,8 @@ 		rawCallback(BufferVar.GoPointer(), LocationVar, MarkVar.GoPointer())
 	}
 }
 
-// SetCallbackMarkDeleted sets the callback function.
-func (x *TextBufferClass) SetCallbackMarkDeleted(cb func(*TextBuffer, *TextMark)) {
+// OverrideMarkDeleted sets the callback function.
+func (x *TextBufferClass) OverrideMarkDeleted(cb func(*TextBuffer, *TextMark)) {
 	if cb == nil {
 		x.xMarkDeleted = 0
 	} else {
@@ -234,8 +234,8 @@ 		})
 	}
 }
 
-// GetCallbackMarkDeleted gets the callback function.
-func (x *TextBufferClass) GetCallbackMarkDeleted() func(*TextBuffer, *TextMark) {
+// GetMarkDeleted gets the callback function.
+func (x *TextBufferClass) GetMarkDeleted() func(*TextBuffer, *TextMark) {
 	if x.xMarkDeleted == 0 {
 		return nil
 	}
@@ -246,8 +246,8 @@ 		rawCallback(BufferVar.GoPointer(), MarkVar.GoPointer())
 	}
 }
 
-// SetCallbackApplyTag sets the callback function.
-func (x *TextBufferClass) SetCallbackApplyTag(cb func(*TextBuffer, *TextTag, *TextIter, *TextIter)) {
+// OverrideApplyTag sets the callback function.
+func (x *TextBufferClass) OverrideApplyTag(cb func(*TextBuffer, *TextTag, *TextIter, *TextIter)) {
 	if cb == nil {
 		x.xApplyTag = 0
 	} else {
@@ -257,8 +257,8 @@ 		})
 	}
 }
 
-// GetCallbackApplyTag gets the callback function.
-func (x *TextBufferClass) GetCallbackApplyTag() func(*TextBuffer, *TextTag, *TextIter, *TextIter) {
+// GetApplyTag gets the callback function.
+func (x *TextBufferClass) GetApplyTag() func(*TextBuffer, *TextTag, *TextIter, *TextIter) {
 	if x.xApplyTag == 0 {
 		return nil
 	}
@@ -269,8 +269,8 @@ 		rawCallback(BufferVar.GoPointer(), TagVar.GoPointer(), StartVar, EndVar)
 	}
 }
 
-// SetCallbackRemoveTag sets the callback function.
-func (x *TextBufferClass) SetCallbackRemoveTag(cb func(*TextBuffer, *TextTag, *TextIter, *TextIter)) {
+// OverrideRemoveTag sets the callback function.
+func (x *TextBufferClass) OverrideRemoveTag(cb func(*TextBuffer, *TextTag, *TextIter, *TextIter)) {
 	if cb == nil {
 		x.xRemoveTag = 0
 	} else {
@@ -280,8 +280,8 @@ 		})
 	}
 }
 
-// GetCallbackRemoveTag gets the callback function.
-func (x *TextBufferClass) GetCallbackRemoveTag() func(*TextBuffer, *TextTag, *TextIter, *TextIter) {
+// GetRemoveTag gets the callback function.
+func (x *TextBufferClass) GetRemoveTag() func(*TextBuffer, *TextTag, *TextIter, *TextIter) {
 	if x.xRemoveTag == 0 {
 		return nil
 	}
@@ -292,8 +292,8 @@ 		rawCallback(BufferVar.GoPointer(), TagVar.GoPointer(), StartVar, EndVar)
 	}
 }
 
-// SetCallbackBeginUserAction sets the callback function.
-func (x *TextBufferClass) SetCallbackBeginUserAction(cb func(*TextBuffer)) {
+// OverrideBeginUserAction sets the callback function.
+func (x *TextBufferClass) OverrideBeginUserAction(cb func(*TextBuffer)) {
 	if cb == nil {
 		x.xBeginUserAction = 0
 	} else {
@@ -303,8 +303,8 @@ 		})
 	}
 }
 
-// GetCallbackBeginUserAction gets the callback function.
-func (x *TextBufferClass) GetCallbackBeginUserAction() func(*TextBuffer) {
+// GetBeginUserAction gets the callback function.
+func (x *TextBufferClass) GetBeginUserAction() func(*TextBuffer) {
 	if x.xBeginUserAction == 0 {
 		return nil
 	}
@@ -315,8 +315,8 @@ 		rawCallback(BufferVar.GoPointer())
 	}
 }
 
-// SetCallbackEndUserAction sets the callback function.
-func (x *TextBufferClass) SetCallbackEndUserAction(cb func(*TextBuffer)) {
+// OverrideEndUserAction sets the callback function.
+func (x *TextBufferClass) OverrideEndUserAction(cb func(*TextBuffer)) {
 	if cb == nil {
 		x.xEndUserAction = 0
 	} else {
@@ -326,8 +326,8 @@ 		})
 	}
 }
 
-// GetCallbackEndUserAction gets the callback function.
-func (x *TextBufferClass) GetCallbackEndUserAction() func(*TextBuffer) {
+// GetEndUserAction gets the callback function.
+func (x *TextBufferClass) GetEndUserAction() func(*TextBuffer) {
 	if x.xEndUserAction == 0 {
 		return nil
 	}
@@ -338,8 +338,8 @@ 		rawCallback(BufferVar.GoPointer())
 	}
 }
 
-// SetCallbackPasteDone sets the callback function.
-func (x *TextBufferClass) SetCallbackPasteDone(cb func(*TextBuffer, *gdk.Clipboard)) {
+// OverridePasteDone sets the callback function.
+func (x *TextBufferClass) OverridePasteDone(cb func(*TextBuffer, *gdk.Clipboard)) {
 	if cb == nil {
 		x.xPasteDone = 0
 	} else {
@@ -349,8 +349,8 @@ 		})
 	}
 }
 
-// GetCallbackPasteDone gets the callback function.
-func (x *TextBufferClass) GetCallbackPasteDone() func(*TextBuffer, *gdk.Clipboard) {
+// GetPasteDone gets the callback function.
+func (x *TextBufferClass) GetPasteDone() func(*TextBuffer, *gdk.Clipboard) {
 	if x.xPasteDone == 0 {
 		return nil
 	}
@@ -361,8 +361,8 @@ 		rawCallback(BufferVar.GoPointer(), ClipboardVar.GoPointer())
 	}
 }
 
-// SetCallbackUndo sets the callback function.
-func (x *TextBufferClass) SetCallbackUndo(cb func(*TextBuffer)) {
+// OverrideUndo sets the callback function.
+func (x *TextBufferClass) OverrideUndo(cb func(*TextBuffer)) {
 	if cb == nil {
 		x.xUndo = 0
 	} else {
@@ -372,8 +372,8 @@ 		})
 	}
 }
 
-// GetCallbackUndo gets the callback function.
-func (x *TextBufferClass) GetCallbackUndo() func(*TextBuffer) {
+// GetUndo gets the callback function.
+func (x *TextBufferClass) GetUndo() func(*TextBuffer) {
 	if x.xUndo == 0 {
 		return nil
 	}
@@ -384,8 +384,8 @@ 		rawCallback(BufferVar.GoPointer())
 	}
 }
 
-// SetCallbackRedo sets the callback function.
-func (x *TextBufferClass) SetCallbackRedo(cb func(*TextBuffer)) {
+// OverrideRedo sets the callback function.
+func (x *TextBufferClass) OverrideRedo(cb func(*TextBuffer)) {
 	if cb == nil {
 		x.xRedo = 0
 	} else {
@@ -395,8 +395,8 @@ 		})
 	}
 }
 
-// GetCallbackRedo gets the callback function.
-func (x *TextBufferClass) GetCallbackRedo() func(*TextBuffer) {
+// GetRedo gets the callback function.
+func (x *TextBufferClass) GetRedo() func(*TextBuffer) {
 	if x.xRedo == 0 {
 		return nil
 	}
@@ -407,8 +407,8 @@ 		rawCallback(BufferVar.GoPointer())
 	}
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *TextBufferClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *TextBufferClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -418,8 +418,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *TextBufferClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *TextBufferClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -430,8 +430,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *TextBufferClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *TextBufferClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -441,8 +441,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *TextBufferClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *TextBufferClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -453,8 +453,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *TextBufferClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *TextBufferClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -464,8 +464,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *TextBufferClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *TextBufferClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -476,8 +476,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *TextBufferClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *TextBufferClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -487,8 +487,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *TextBufferClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *TextBufferClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtktextchild.go b/v4/gtk/gtktextchild.go
index 478527d93dc7064e55cb8a4c863868fe3a636114..9e9976cec7f25d093345074a9f41ad8588133c87 100644
--- a/v4/gtk/gtktextchild.go
+++ b/v4/gtk/gtktextchild.go
@@ -29,8 +29,8 @@ func (x *TextChildAnchorClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *TextChildAnchorClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *TextChildAnchorClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -40,8 +40,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *TextChildAnchorClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *TextChildAnchorClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -52,8 +52,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *TextChildAnchorClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *TextChildAnchorClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -63,8 +63,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *TextChildAnchorClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *TextChildAnchorClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -75,8 +75,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *TextChildAnchorClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *TextChildAnchorClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -86,8 +86,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *TextChildAnchorClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *TextChildAnchorClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -98,8 +98,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *TextChildAnchorClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *TextChildAnchorClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -109,8 +109,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *TextChildAnchorClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *TextChildAnchorClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtktextview.go b/v4/gtk/gtktextview.go
index a729949ce1805d3209b871eaf45a671465bc71d4..d4599f60be9bd5f8f6ff762a825939fddcf77c9a 100644
--- a/v4/gtk/gtktextview.go
+++ b/v4/gtk/gtktextview.go
@@ -53,8 +53,8 @@ func (x *TextViewClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackMoveCursor sets the callback function.
-func (x *TextViewClass) SetCallbackMoveCursor(cb func(*TextView, MovementStep, int, bool)) {
+// OverrideMoveCursor sets the callback function.
+func (x *TextViewClass) OverrideMoveCursor(cb func(*TextView, MovementStep, int, bool)) {
 	if cb == nil {
 		x.xMoveCursor = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackMoveCursor gets the callback function.
-func (x *TextViewClass) GetCallbackMoveCursor() func(*TextView, MovementStep, int, bool) {
+// GetMoveCursor gets the callback function.
+func (x *TextViewClass) GetMoveCursor() func(*TextView, MovementStep, int, bool) {
 	if x.xMoveCursor == 0 {
 		return nil
 	}
@@ -76,8 +76,8 @@ 		rawCallback(TextViewVar.GoPointer(), StepVar, CountVar, ExtendSelectionVar)
 	}
 }
 
-// SetCallbackSetAnchor sets the callback function.
-func (x *TextViewClass) SetCallbackSetAnchor(cb func(*TextView)) {
+// OverrideSetAnchor sets the callback function.
+func (x *TextViewClass) OverrideSetAnchor(cb func(*TextView)) {
 	if cb == nil {
 		x.xSetAnchor = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackSetAnchor gets the callback function.
-func (x *TextViewClass) GetCallbackSetAnchor() func(*TextView) {
+// GetSetAnchor gets the callback function.
+func (x *TextViewClass) GetSetAnchor() func(*TextView) {
 	if x.xSetAnchor == 0 {
 		return nil
 	}
@@ -99,8 +99,8 @@ 		rawCallback(TextViewVar.GoPointer())
 	}
 }
 
-// SetCallbackInsertAtCursor sets the callback function.
-func (x *TextViewClass) SetCallbackInsertAtCursor(cb func(*TextView, string)) {
+// OverrideInsertAtCursor sets the callback function.
+func (x *TextViewClass) OverrideInsertAtCursor(cb func(*TextView, string)) {
 	if cb == nil {
 		x.xInsertAtCursor = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackInsertAtCursor gets the callback function.
-func (x *TextViewClass) GetCallbackInsertAtCursor() func(*TextView, string) {
+// GetInsertAtCursor gets the callback function.
+func (x *TextViewClass) GetInsertAtCursor() func(*TextView, string) {
 	if x.xInsertAtCursor == 0 {
 		return nil
 	}
@@ -122,8 +122,8 @@ 		rawCallback(TextViewVar.GoPointer(), StrVar)
 	}
 }
 
-// SetCallbackDeleteFromCursor sets the callback function.
-func (x *TextViewClass) SetCallbackDeleteFromCursor(cb func(*TextView, DeleteType, int)) {
+// OverrideDeleteFromCursor sets the callback function.
+func (x *TextViewClass) OverrideDeleteFromCursor(cb func(*TextView, DeleteType, int)) {
 	if cb == nil {
 		x.xDeleteFromCursor = 0
 	} else {
@@ -133,8 +133,8 @@ 		})
 	}
 }
 
-// GetCallbackDeleteFromCursor gets the callback function.
-func (x *TextViewClass) GetCallbackDeleteFromCursor() func(*TextView, DeleteType, int) {
+// GetDeleteFromCursor gets the callback function.
+func (x *TextViewClass) GetDeleteFromCursor() func(*TextView, DeleteType, int) {
 	if x.xDeleteFromCursor == 0 {
 		return nil
 	}
@@ -145,8 +145,8 @@ 		rawCallback(TextViewVar.GoPointer(), TypeVar, CountVar)
 	}
 }
 
-// SetCallbackBackspace sets the callback function.
-func (x *TextViewClass) SetCallbackBackspace(cb func(*TextView)) {
+// OverrideBackspace sets the callback function.
+func (x *TextViewClass) OverrideBackspace(cb func(*TextView)) {
 	if cb == nil {
 		x.xBackspace = 0
 	} else {
@@ -156,8 +156,8 @@ 		})
 	}
 }
 
-// GetCallbackBackspace gets the callback function.
-func (x *TextViewClass) GetCallbackBackspace() func(*TextView) {
+// GetBackspace gets the callback function.
+func (x *TextViewClass) GetBackspace() func(*TextView) {
 	if x.xBackspace == 0 {
 		return nil
 	}
@@ -168,8 +168,8 @@ 		rawCallback(TextViewVar.GoPointer())
 	}
 }
 
-// SetCallbackCutClipboard sets the callback function.
-func (x *TextViewClass) SetCallbackCutClipboard(cb func(*TextView)) {
+// OverrideCutClipboard sets the callback function.
+func (x *TextViewClass) OverrideCutClipboard(cb func(*TextView)) {
 	if cb == nil {
 		x.xCutClipboard = 0
 	} else {
@@ -179,8 +179,8 @@ 		})
 	}
 }
 
-// GetCallbackCutClipboard gets the callback function.
-func (x *TextViewClass) GetCallbackCutClipboard() func(*TextView) {
+// GetCutClipboard gets the callback function.
+func (x *TextViewClass) GetCutClipboard() func(*TextView) {
 	if x.xCutClipboard == 0 {
 		return nil
 	}
@@ -191,8 +191,8 @@ 		rawCallback(TextViewVar.GoPointer())
 	}
 }
 
-// SetCallbackCopyClipboard sets the callback function.
-func (x *TextViewClass) SetCallbackCopyClipboard(cb func(*TextView)) {
+// OverrideCopyClipboard sets the callback function.
+func (x *TextViewClass) OverrideCopyClipboard(cb func(*TextView)) {
 	if cb == nil {
 		x.xCopyClipboard = 0
 	} else {
@@ -202,8 +202,8 @@ 		})
 	}
 }
 
-// GetCallbackCopyClipboard gets the callback function.
-func (x *TextViewClass) GetCallbackCopyClipboard() func(*TextView) {
+// GetCopyClipboard gets the callback function.
+func (x *TextViewClass) GetCopyClipboard() func(*TextView) {
 	if x.xCopyClipboard == 0 {
 		return nil
 	}
@@ -214,8 +214,8 @@ 		rawCallback(TextViewVar.GoPointer())
 	}
 }
 
-// SetCallbackPasteClipboard sets the callback function.
-func (x *TextViewClass) SetCallbackPasteClipboard(cb func(*TextView)) {
+// OverridePasteClipboard sets the callback function.
+func (x *TextViewClass) OverridePasteClipboard(cb func(*TextView)) {
 	if cb == nil {
 		x.xPasteClipboard = 0
 	} else {
@@ -225,8 +225,8 @@ 		})
 	}
 }
 
-// GetCallbackPasteClipboard gets the callback function.
-func (x *TextViewClass) GetCallbackPasteClipboard() func(*TextView) {
+// GetPasteClipboard gets the callback function.
+func (x *TextViewClass) GetPasteClipboard() func(*TextView) {
 	if x.xPasteClipboard == 0 {
 		return nil
 	}
@@ -237,8 +237,8 @@ 		rawCallback(TextViewVar.GoPointer())
 	}
 }
 
-// SetCallbackToggleOverwrite sets the callback function.
-func (x *TextViewClass) SetCallbackToggleOverwrite(cb func(*TextView)) {
+// OverrideToggleOverwrite sets the callback function.
+func (x *TextViewClass) OverrideToggleOverwrite(cb func(*TextView)) {
 	if cb == nil {
 		x.xToggleOverwrite = 0
 	} else {
@@ -248,8 +248,8 @@ 		})
 	}
 }
 
-// GetCallbackToggleOverwrite gets the callback function.
-func (x *TextViewClass) GetCallbackToggleOverwrite() func(*TextView) {
+// GetToggleOverwrite gets the callback function.
+func (x *TextViewClass) GetToggleOverwrite() func(*TextView) {
 	if x.xToggleOverwrite == 0 {
 		return nil
 	}
@@ -260,8 +260,8 @@ 		rawCallback(TextViewVar.GoPointer())
 	}
 }
 
-// SetCallbackCreateBuffer sets the callback function.
-func (x *TextViewClass) SetCallbackCreateBuffer(cb func(*TextView) *TextBuffer) {
+// OverrideCreateBuffer sets the callback function.
+func (x *TextViewClass) OverrideCreateBuffer(cb func(*TextView) *TextBuffer) {
 	if cb == nil {
 		x.xCreateBuffer = 0
 	} else {
@@ -275,8 +275,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateBuffer gets the callback function.
-func (x *TextViewClass) GetCallbackCreateBuffer() func(*TextView) *TextBuffer {
+// GetCreateBuffer gets the callback function.
+func (x *TextViewClass) GetCreateBuffer() func(*TextView) *TextBuffer {
 	if x.xCreateBuffer == 0 {
 		return nil
 	}
@@ -293,8 +293,8 @@ 		return ret
 	}
 }
 
-// SetCallbackSnapshotLayer sets the callback function.
-func (x *TextViewClass) SetCallbackSnapshotLayer(cb func(*TextView, TextViewLayer, *Snapshot)) {
+// OverrideSnapshotLayer sets the callback function.
+func (x *TextViewClass) OverrideSnapshotLayer(cb func(*TextView, TextViewLayer, *Snapshot)) {
 	if cb == nil {
 		x.xSnapshotLayer = 0
 	} else {
@@ -304,8 +304,8 @@ 		})
 	}
 }
 
-// GetCallbackSnapshotLayer gets the callback function.
-func (x *TextViewClass) GetCallbackSnapshotLayer() func(*TextView, TextViewLayer, *Snapshot) {
+// GetSnapshotLayer gets the callback function.
+func (x *TextViewClass) GetSnapshotLayer() func(*TextView, TextViewLayer, *Snapshot) {
 	if x.xSnapshotLayer == 0 {
 		return nil
 	}
@@ -316,8 +316,8 @@ 		rawCallback(TextViewVar.GoPointer(), LayerVar, SnapshotVar.GoPointer())
 	}
 }
 
-// SetCallbackExtendSelection sets the callback function.
-func (x *TextViewClass) SetCallbackExtendSelection(cb func(*TextView, TextExtendSelection, *TextIter, *TextIter, *TextIter) bool) {
+// OverrideExtendSelection sets the callback function.
+func (x *TextViewClass) OverrideExtendSelection(cb func(*TextView, TextExtendSelection, *TextIter, *TextIter, *TextIter) bool) {
 	if cb == nil {
 		x.xExtendSelection = 0
 	} else {
@@ -327,8 +327,8 @@ 		})
 	}
 }
 
-// GetCallbackExtendSelection gets the callback function.
-func (x *TextViewClass) GetCallbackExtendSelection() func(*TextView, TextExtendSelection, *TextIter, *TextIter, *TextIter) bool {
+// GetExtendSelection gets the callback function.
+func (x *TextViewClass) GetExtendSelection() func(*TextView, TextExtendSelection, *TextIter, *TextIter, *TextIter) bool {
 	if x.xExtendSelection == 0 {
 		return nil
 	}
@@ -339,8 +339,8 @@ 		return rawCallback(TextViewVar.GoPointer(), GranularityVar, LocationVar, StartVar, EndVar)
 	}
 }
 
-// SetCallbackInsertEmoji sets the callback function.
-func (x *TextViewClass) SetCallbackInsertEmoji(cb func(*TextView)) {
+// OverrideInsertEmoji sets the callback function.
+func (x *TextViewClass) OverrideInsertEmoji(cb func(*TextView)) {
 	if cb == nil {
 		x.xInsertEmoji = 0
 	} else {
@@ -350,8 +350,8 @@ 		})
 	}
 }
 
-// GetCallbackInsertEmoji gets the callback function.
-func (x *TextViewClass) GetCallbackInsertEmoji() func(*TextView) {
+// GetInsertEmoji gets the callback function.
+func (x *TextViewClass) GetInsertEmoji() func(*TextView) {
 	if x.xInsertEmoji == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtktogglebutton.go b/v4/gtk/gtktogglebutton.go
index 78fd127c8482b0e0e40b7efe19419ad0703a1a78..7f96ea5afe37c2b0dde0cdd4ff1e3b64259daa53 100644
--- a/v4/gtk/gtktogglebutton.go
+++ b/v4/gtk/gtktogglebutton.go
@@ -26,8 +26,8 @@ func (x *ToggleButtonClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackToggled sets the callback function.
-func (x *ToggleButtonClass) SetCallbackToggled(cb func(*ToggleButton)) {
+// OverrideToggled sets the callback function.
+func (x *ToggleButtonClass) OverrideToggled(cb func(*ToggleButton)) {
 	if cb == nil {
 		x.xToggled = 0
 	} else {
@@ -37,8 +37,8 @@ 		})
 	}
 }
 
-// GetCallbackToggled gets the callback function.
-func (x *ToggleButtonClass) GetCallbackToggled() func(*ToggleButton) {
+// GetToggled gets the callback function.
+func (x *ToggleButtonClass) GetToggled() func(*ToggleButton) {
 	if x.xToggled == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtktreednd.go b/v4/gtk/gtktreednd.go
index 028562129cf9955baa5a4723200cbdbff518f79a..e8521a9c9871591ddbbe0921fe8d43c7f6e1abe7 100644
--- a/v4/gtk/gtktreednd.go
+++ b/v4/gtk/gtktreednd.go
@@ -26,8 +26,8 @@ func (x *TreeDragDestIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackDragDataReceived sets the callback function.
-func (x *TreeDragDestIface) SetCallbackDragDataReceived(cb func(TreeDragDest, *TreePath, *gobject.Value) bool) {
+// OverrideDragDataReceived sets the callback function.
+func (x *TreeDragDestIface) OverrideDragDataReceived(cb func(TreeDragDest, *TreePath, *gobject.Value) bool) {
 	if cb == nil {
 		x.xDragDataReceived = 0
 	} else {
@@ -37,8 +37,8 @@ 		})
 	}
 }
 
-// GetCallbackDragDataReceived gets the callback function.
-func (x *TreeDragDestIface) GetCallbackDragDataReceived() func(TreeDragDest, *TreePath, *gobject.Value) bool {
+// GetDragDataReceived gets the callback function.
+func (x *TreeDragDestIface) GetDragDataReceived() func(TreeDragDest, *TreePath, *gobject.Value) bool {
 	if x.xDragDataReceived == 0 {
 		return nil
 	}
@@ -49,8 +49,8 @@ 		return rawCallback(DragDestVar.GoPointer(), DestVar, ValueVar)
 	}
 }
 
-// SetCallbackRowDropPossible sets the callback function.
-func (x *TreeDragDestIface) SetCallbackRowDropPossible(cb func(TreeDragDest, *TreePath, *gobject.Value) bool) {
+// OverrideRowDropPossible sets the callback function.
+func (x *TreeDragDestIface) OverrideRowDropPossible(cb func(TreeDragDest, *TreePath, *gobject.Value) bool) {
 	if cb == nil {
 		x.xRowDropPossible = 0
 	} else {
@@ -60,8 +60,8 @@ 		})
 	}
 }
 
-// GetCallbackRowDropPossible gets the callback function.
-func (x *TreeDragDestIface) GetCallbackRowDropPossible() func(TreeDragDest, *TreePath, *gobject.Value) bool {
+// GetRowDropPossible gets the callback function.
+func (x *TreeDragDestIface) GetRowDropPossible() func(TreeDragDest, *TreePath, *gobject.Value) bool {
 	if x.xRowDropPossible == 0 {
 		return nil
 	}
@@ -88,8 +88,8 @@ func (x *TreeDragSourceIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackRowDraggable sets the callback function.
-func (x *TreeDragSourceIface) SetCallbackRowDraggable(cb func(TreeDragSource, *TreePath) bool) {
+// OverrideRowDraggable sets the callback function.
+func (x *TreeDragSourceIface) OverrideRowDraggable(cb func(TreeDragSource, *TreePath) bool) {
 	if cb == nil {
 		x.xRowDraggable = 0
 	} else {
@@ -99,8 +99,8 @@ 		})
 	}
 }
 
-// GetCallbackRowDraggable gets the callback function.
-func (x *TreeDragSourceIface) GetCallbackRowDraggable() func(TreeDragSource, *TreePath) bool {
+// GetRowDraggable gets the callback function.
+func (x *TreeDragSourceIface) GetRowDraggable() func(TreeDragSource, *TreePath) bool {
 	if x.xRowDraggable == 0 {
 		return nil
 	}
@@ -111,8 +111,8 @@ 		return rawCallback(DragSourceVar.GoPointer(), PathVar)
 	}
 }
 
-// SetCallbackDragDataGet sets the callback function.
-func (x *TreeDragSourceIface) SetCallbackDragDataGet(cb func(TreeDragSource, *TreePath) *gdk.ContentProvider) {
+// OverrideDragDataGet sets the callback function.
+func (x *TreeDragSourceIface) OverrideDragDataGet(cb func(TreeDragSource, *TreePath) *gdk.ContentProvider) {
 	if cb == nil {
 		x.xDragDataGet = 0
 	} else {
@@ -126,8 +126,8 @@ 		})
 	}
 }
 
-// GetCallbackDragDataGet gets the callback function.
-func (x *TreeDragSourceIface) GetCallbackDragDataGet() func(TreeDragSource, *TreePath) *gdk.ContentProvider {
+// GetDragDataGet gets the callback function.
+func (x *TreeDragSourceIface) GetDragDataGet() func(TreeDragSource, *TreePath) *gdk.ContentProvider {
 	if x.xDragDataGet == 0 {
 		return nil
 	}
@@ -144,8 +144,8 @@ 		return ret
 	}
 }
 
-// SetCallbackDragDataDelete sets the callback function.
-func (x *TreeDragSourceIface) SetCallbackDragDataDelete(cb func(TreeDragSource, *TreePath) bool) {
+// OverrideDragDataDelete sets the callback function.
+func (x *TreeDragSourceIface) OverrideDragDataDelete(cb func(TreeDragSource, *TreePath) bool) {
 	if cb == nil {
 		x.xDragDataDelete = 0
 	} else {
@@ -155,8 +155,8 @@ 		})
 	}
 }
 
-// GetCallbackDragDataDelete gets the callback function.
-func (x *TreeDragSourceIface) GetCallbackDragDataDelete() func(TreeDragSource, *TreePath) bool {
+// GetDragDataDelete gets the callback function.
+func (x *TreeDragSourceIface) GetDragDataDelete() func(TreeDragSource, *TreePath) bool {
 	if x.xDragDataDelete == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtktreemodel.go b/v4/gtk/gtktreemodel.go
index a1e9252a69a066923c6ee0c1d3d2370be366b0bf..e348951aa1f1bd23b3825f197a404c4793595557 100644
--- a/v4/gtk/gtktreemodel.go
+++ b/v4/gtk/gtktreemodel.go
@@ -118,8 +118,8 @@ func (x *TreeModelIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackRowChanged sets the callback function.
-func (x *TreeModelIface) SetCallbackRowChanged(cb func(TreeModel, *TreePath, *TreeIter)) {
+// OverrideRowChanged sets the callback function.
+func (x *TreeModelIface) OverrideRowChanged(cb func(TreeModel, *TreePath, *TreeIter)) {
 	if cb == nil {
 		x.xRowChanged = 0
 	} else {
@@ -129,8 +129,8 @@ 		})
 	}
 }
 
-// GetCallbackRowChanged gets the callback function.
-func (x *TreeModelIface) GetCallbackRowChanged() func(TreeModel, *TreePath, *TreeIter) {
+// GetRowChanged gets the callback function.
+func (x *TreeModelIface) GetRowChanged() func(TreeModel, *TreePath, *TreeIter) {
 	if x.xRowChanged == 0 {
 		return nil
 	}
@@ -141,8 +141,8 @@ 		rawCallback(TreeModelVar.GoPointer(), PathVar, IterVar)
 	}
 }
 
-// SetCallbackRowInserted sets the callback function.
-func (x *TreeModelIface) SetCallbackRowInserted(cb func(TreeModel, *TreePath, *TreeIter)) {
+// OverrideRowInserted sets the callback function.
+func (x *TreeModelIface) OverrideRowInserted(cb func(TreeModel, *TreePath, *TreeIter)) {
 	if cb == nil {
 		x.xRowInserted = 0
 	} else {
@@ -152,8 +152,8 @@ 		})
 	}
 }
 
-// GetCallbackRowInserted gets the callback function.
-func (x *TreeModelIface) GetCallbackRowInserted() func(TreeModel, *TreePath, *TreeIter) {
+// GetRowInserted gets the callback function.
+func (x *TreeModelIface) GetRowInserted() func(TreeModel, *TreePath, *TreeIter) {
 	if x.xRowInserted == 0 {
 		return nil
 	}
@@ -164,8 +164,8 @@ 		rawCallback(TreeModelVar.GoPointer(), PathVar, IterVar)
 	}
 }
 
-// SetCallbackRowHasChildToggled sets the callback function.
-func (x *TreeModelIface) SetCallbackRowHasChildToggled(cb func(TreeModel, *TreePath, *TreeIter)) {
+// OverrideRowHasChildToggled sets the callback function.
+func (x *TreeModelIface) OverrideRowHasChildToggled(cb func(TreeModel, *TreePath, *TreeIter)) {
 	if cb == nil {
 		x.xRowHasChildToggled = 0
 	} else {
@@ -175,8 +175,8 @@ 		})
 	}
 }
 
-// GetCallbackRowHasChildToggled gets the callback function.
-func (x *TreeModelIface) GetCallbackRowHasChildToggled() func(TreeModel, *TreePath, *TreeIter) {
+// GetRowHasChildToggled gets the callback function.
+func (x *TreeModelIface) GetRowHasChildToggled() func(TreeModel, *TreePath, *TreeIter) {
 	if x.xRowHasChildToggled == 0 {
 		return nil
 	}
@@ -187,8 +187,8 @@ 		rawCallback(TreeModelVar.GoPointer(), PathVar, IterVar)
 	}
 }
 
-// SetCallbackRowDeleted sets the callback function.
-func (x *TreeModelIface) SetCallbackRowDeleted(cb func(TreeModel, *TreePath)) {
+// OverrideRowDeleted sets the callback function.
+func (x *TreeModelIface) OverrideRowDeleted(cb func(TreeModel, *TreePath)) {
 	if cb == nil {
 		x.xRowDeleted = 0
 	} else {
@@ -198,8 +198,8 @@ 		})
 	}
 }
 
-// GetCallbackRowDeleted gets the callback function.
-func (x *TreeModelIface) GetCallbackRowDeleted() func(TreeModel, *TreePath) {
+// GetRowDeleted gets the callback function.
+func (x *TreeModelIface) GetRowDeleted() func(TreeModel, *TreePath) {
 	if x.xRowDeleted == 0 {
 		return nil
 	}
@@ -210,8 +210,8 @@ 		rawCallback(TreeModelVar.GoPointer(), PathVar)
 	}
 }
 
-// SetCallbackRowsReordered sets the callback function.
-func (x *TreeModelIface) SetCallbackRowsReordered(cb func(TreeModel, *TreePath, *TreeIter, int)) {
+// OverrideRowsReordered sets the callback function.
+func (x *TreeModelIface) OverrideRowsReordered(cb func(TreeModel, *TreePath, *TreeIter, int)) {
 	if cb == nil {
 		x.xRowsReordered = 0
 	} else {
@@ -221,8 +221,8 @@ 		})
 	}
 }
 
-// GetCallbackRowsReordered gets the callback function.
-func (x *TreeModelIface) GetCallbackRowsReordered() func(TreeModel, *TreePath, *TreeIter, int) {
+// GetRowsReordered gets the callback function.
+func (x *TreeModelIface) GetRowsReordered() func(TreeModel, *TreePath, *TreeIter, int) {
 	if x.xRowsReordered == 0 {
 		return nil
 	}
@@ -233,8 +233,8 @@ 		rawCallback(TreeModelVar.GoPointer(), PathVar, IterVar, NewOrderVar)
 	}
 }
 
-// SetCallbackGetFlags sets the callback function.
-func (x *TreeModelIface) SetCallbackGetFlags(cb func(TreeModel) TreeModelFlags) {
+// OverrideGetFlags sets the callback function.
+func (x *TreeModelIface) OverrideGetFlags(cb func(TreeModel) TreeModelFlags) {
 	if cb == nil {
 		x.xGetFlags = 0
 	} else {
@@ -244,8 +244,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFlags gets the callback function.
-func (x *TreeModelIface) GetCallbackGetFlags() func(TreeModel) TreeModelFlags {
+// GetGetFlags gets the callback function.
+func (x *TreeModelIface) GetGetFlags() func(TreeModel) TreeModelFlags {
 	if x.xGetFlags == 0 {
 		return nil
 	}
@@ -256,8 +256,8 @@ 		return rawCallback(TreeModelVar.GoPointer())
 	}
 }
 
-// SetCallbackGetNColumns sets the callback function.
-func (x *TreeModelIface) SetCallbackGetNColumns(cb func(TreeModel) int) {
+// OverrideGetNColumns sets the callback function.
+func (x *TreeModelIface) OverrideGetNColumns(cb func(TreeModel) int) {
 	if cb == nil {
 		x.xGetNColumns = 0
 	} else {
@@ -267,8 +267,8 @@ 		})
 	}
 }
 
-// GetCallbackGetNColumns gets the callback function.
-func (x *TreeModelIface) GetCallbackGetNColumns() func(TreeModel) int {
+// GetGetNColumns gets the callback function.
+func (x *TreeModelIface) GetGetNColumns() func(TreeModel) int {
 	if x.xGetNColumns == 0 {
 		return nil
 	}
@@ -279,8 +279,8 @@ 		return rawCallback(TreeModelVar.GoPointer())
 	}
 }
 
-// SetCallbackGetColumnType sets the callback function.
-func (x *TreeModelIface) SetCallbackGetColumnType(cb func(TreeModel, int) types.GType) {
+// OverrideGetColumnType sets the callback function.
+func (x *TreeModelIface) OverrideGetColumnType(cb func(TreeModel, int) types.GType) {
 	if cb == nil {
 		x.xGetColumnType = 0
 	} else {
@@ -290,8 +290,8 @@ 		})
 	}
 }
 
-// GetCallbackGetColumnType gets the callback function.
-func (x *TreeModelIface) GetCallbackGetColumnType() func(TreeModel, int) types.GType {
+// GetGetColumnType gets the callback function.
+func (x *TreeModelIface) GetGetColumnType() func(TreeModel, int) types.GType {
 	if x.xGetColumnType == 0 {
 		return nil
 	}
@@ -302,8 +302,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IndexVar)
 	}
 }
 
-// SetCallbackGetIter sets the callback function.
-func (x *TreeModelIface) SetCallbackGetIter(cb func(TreeModel, *TreeIter, *TreePath) bool) {
+// OverrideGetIter sets the callback function.
+func (x *TreeModelIface) OverrideGetIter(cb func(TreeModel, *TreeIter, *TreePath) bool) {
 	if cb == nil {
 		x.xGetIter = 0
 	} else {
@@ -313,8 +313,8 @@ 		})
 	}
 }
 
-// GetCallbackGetIter gets the callback function.
-func (x *TreeModelIface) GetCallbackGetIter() func(TreeModel, *TreeIter, *TreePath) bool {
+// GetGetIter gets the callback function.
+func (x *TreeModelIface) GetGetIter() func(TreeModel, *TreeIter, *TreePath) bool {
 	if x.xGetIter == 0 {
 		return nil
 	}
@@ -325,8 +325,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IterVar, PathVar)
 	}
 }
 
-// SetCallbackGetPath sets the callback function.
-func (x *TreeModelIface) SetCallbackGetPath(cb func(TreeModel, *TreeIter) *TreePath) {
+// OverrideGetPath sets the callback function.
+func (x *TreeModelIface) OverrideGetPath(cb func(TreeModel, *TreeIter) *TreePath) {
 	if cb == nil {
 		x.xGetPath = 0
 	} else {
@@ -336,8 +336,8 @@ 		})
 	}
 }
 
-// GetCallbackGetPath gets the callback function.
-func (x *TreeModelIface) GetCallbackGetPath() func(TreeModel, *TreeIter) *TreePath {
+// GetGetPath gets the callback function.
+func (x *TreeModelIface) GetGetPath() func(TreeModel, *TreeIter) *TreePath {
 	if x.xGetPath == 0 {
 		return nil
 	}
@@ -348,8 +348,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IterVar)
 	}
 }
 
-// SetCallbackGetValue sets the callback function.
-func (x *TreeModelIface) SetCallbackGetValue(cb func(TreeModel, *TreeIter, int, *gobject.Value)) {
+// OverrideGetValue sets the callback function.
+func (x *TreeModelIface) OverrideGetValue(cb func(TreeModel, *TreeIter, int, *gobject.Value)) {
 	if cb == nil {
 		x.xGetValue = 0
 	} else {
@@ -359,8 +359,8 @@ 		})
 	}
 }
 
-// GetCallbackGetValue gets the callback function.
-func (x *TreeModelIface) GetCallbackGetValue() func(TreeModel, *TreeIter, int, *gobject.Value) {
+// GetGetValue gets the callback function.
+func (x *TreeModelIface) GetGetValue() func(TreeModel, *TreeIter, int, *gobject.Value) {
 	if x.xGetValue == 0 {
 		return nil
 	}
@@ -371,8 +371,8 @@ 		rawCallback(TreeModelVar.GoPointer(), IterVar, ColumnVar, ValueVar)
 	}
 }
 
-// SetCallbackIterNext sets the callback function.
-func (x *TreeModelIface) SetCallbackIterNext(cb func(TreeModel, *TreeIter) bool) {
+// OverrideIterNext sets the callback function.
+func (x *TreeModelIface) OverrideIterNext(cb func(TreeModel, *TreeIter) bool) {
 	if cb == nil {
 		x.xIterNext = 0
 	} else {
@@ -382,8 +382,8 @@ 		})
 	}
 }
 
-// GetCallbackIterNext gets the callback function.
-func (x *TreeModelIface) GetCallbackIterNext() func(TreeModel, *TreeIter) bool {
+// GetIterNext gets the callback function.
+func (x *TreeModelIface) GetIterNext() func(TreeModel, *TreeIter) bool {
 	if x.xIterNext == 0 {
 		return nil
 	}
@@ -394,8 +394,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IterVar)
 	}
 }
 
-// SetCallbackIterPrevious sets the callback function.
-func (x *TreeModelIface) SetCallbackIterPrevious(cb func(TreeModel, *TreeIter) bool) {
+// OverrideIterPrevious sets the callback function.
+func (x *TreeModelIface) OverrideIterPrevious(cb func(TreeModel, *TreeIter) bool) {
 	if cb == nil {
 		x.xIterPrevious = 0
 	} else {
@@ -405,8 +405,8 @@ 		})
 	}
 }
 
-// GetCallbackIterPrevious gets the callback function.
-func (x *TreeModelIface) GetCallbackIterPrevious() func(TreeModel, *TreeIter) bool {
+// GetIterPrevious gets the callback function.
+func (x *TreeModelIface) GetIterPrevious() func(TreeModel, *TreeIter) bool {
 	if x.xIterPrevious == 0 {
 		return nil
 	}
@@ -417,8 +417,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IterVar)
 	}
 }
 
-// SetCallbackIterChildren sets the callback function.
-func (x *TreeModelIface) SetCallbackIterChildren(cb func(TreeModel, *TreeIter, *TreeIter) bool) {
+// OverrideIterChildren sets the callback function.
+func (x *TreeModelIface) OverrideIterChildren(cb func(TreeModel, *TreeIter, *TreeIter) bool) {
 	if cb == nil {
 		x.xIterChildren = 0
 	} else {
@@ -428,8 +428,8 @@ 		})
 	}
 }
 
-// GetCallbackIterChildren gets the callback function.
-func (x *TreeModelIface) GetCallbackIterChildren() func(TreeModel, *TreeIter, *TreeIter) bool {
+// GetIterChildren gets the callback function.
+func (x *TreeModelIface) GetIterChildren() func(TreeModel, *TreeIter, *TreeIter) bool {
 	if x.xIterChildren == 0 {
 		return nil
 	}
@@ -440,8 +440,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IterVar, ParentVar)
 	}
 }
 
-// SetCallbackIterHasChild sets the callback function.
-func (x *TreeModelIface) SetCallbackIterHasChild(cb func(TreeModel, *TreeIter) bool) {
+// OverrideIterHasChild sets the callback function.
+func (x *TreeModelIface) OverrideIterHasChild(cb func(TreeModel, *TreeIter) bool) {
 	if cb == nil {
 		x.xIterHasChild = 0
 	} else {
@@ -451,8 +451,8 @@ 		})
 	}
 }
 
-// GetCallbackIterHasChild gets the callback function.
-func (x *TreeModelIface) GetCallbackIterHasChild() func(TreeModel, *TreeIter) bool {
+// GetIterHasChild gets the callback function.
+func (x *TreeModelIface) GetIterHasChild() func(TreeModel, *TreeIter) bool {
 	if x.xIterHasChild == 0 {
 		return nil
 	}
@@ -463,8 +463,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IterVar)
 	}
 }
 
-// SetCallbackIterNChildren sets the callback function.
-func (x *TreeModelIface) SetCallbackIterNChildren(cb func(TreeModel, *TreeIter) int) {
+// OverrideIterNChildren sets the callback function.
+func (x *TreeModelIface) OverrideIterNChildren(cb func(TreeModel, *TreeIter) int) {
 	if cb == nil {
 		x.xIterNChildren = 0
 	} else {
@@ -474,8 +474,8 @@ 		})
 	}
 }
 
-// GetCallbackIterNChildren gets the callback function.
-func (x *TreeModelIface) GetCallbackIterNChildren() func(TreeModel, *TreeIter) int {
+// GetIterNChildren gets the callback function.
+func (x *TreeModelIface) GetIterNChildren() func(TreeModel, *TreeIter) int {
 	if x.xIterNChildren == 0 {
 		return nil
 	}
@@ -486,8 +486,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IterVar)
 	}
 }
 
-// SetCallbackIterNthChild sets the callback function.
-func (x *TreeModelIface) SetCallbackIterNthChild(cb func(TreeModel, *TreeIter, *TreeIter, int) bool) {
+// OverrideIterNthChild sets the callback function.
+func (x *TreeModelIface) OverrideIterNthChild(cb func(TreeModel, *TreeIter, *TreeIter, int) bool) {
 	if cb == nil {
 		x.xIterNthChild = 0
 	} else {
@@ -497,8 +497,8 @@ 		})
 	}
 }
 
-// GetCallbackIterNthChild gets the callback function.
-func (x *TreeModelIface) GetCallbackIterNthChild() func(TreeModel, *TreeIter, *TreeIter, int) bool {
+// GetIterNthChild gets the callback function.
+func (x *TreeModelIface) GetIterNthChild() func(TreeModel, *TreeIter, *TreeIter, int) bool {
 	if x.xIterNthChild == 0 {
 		return nil
 	}
@@ -509,8 +509,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IterVar, ParentVar, NVar)
 	}
 }
 
-// SetCallbackIterParent sets the callback function.
-func (x *TreeModelIface) SetCallbackIterParent(cb func(TreeModel, *TreeIter, *TreeIter) bool) {
+// OverrideIterParent sets the callback function.
+func (x *TreeModelIface) OverrideIterParent(cb func(TreeModel, *TreeIter, *TreeIter) bool) {
 	if cb == nil {
 		x.xIterParent = 0
 	} else {
@@ -520,8 +520,8 @@ 		})
 	}
 }
 
-// GetCallbackIterParent gets the callback function.
-func (x *TreeModelIface) GetCallbackIterParent() func(TreeModel, *TreeIter, *TreeIter) bool {
+// GetIterParent gets the callback function.
+func (x *TreeModelIface) GetIterParent() func(TreeModel, *TreeIter, *TreeIter) bool {
 	if x.xIterParent == 0 {
 		return nil
 	}
@@ -532,8 +532,8 @@ 		return rawCallback(TreeModelVar.GoPointer(), IterVar, ChildVar)
 	}
 }
 
-// SetCallbackRefNode sets the callback function.
-func (x *TreeModelIface) SetCallbackRefNode(cb func(TreeModel, *TreeIter)) {
+// OverrideRefNode sets the callback function.
+func (x *TreeModelIface) OverrideRefNode(cb func(TreeModel, *TreeIter)) {
 	if cb == nil {
 		x.xRefNode = 0
 	} else {
@@ -543,8 +543,8 @@ 		})
 	}
 }
 
-// GetCallbackRefNode gets the callback function.
-func (x *TreeModelIface) GetCallbackRefNode() func(TreeModel, *TreeIter) {
+// GetRefNode gets the callback function.
+func (x *TreeModelIface) GetRefNode() func(TreeModel, *TreeIter) {
 	if x.xRefNode == 0 {
 		return nil
 	}
@@ -555,8 +555,8 @@ 		rawCallback(TreeModelVar.GoPointer(), IterVar)
 	}
 }
 
-// SetCallbackUnrefNode sets the callback function.
-func (x *TreeModelIface) SetCallbackUnrefNode(cb func(TreeModel, *TreeIter)) {
+// OverrideUnrefNode sets the callback function.
+func (x *TreeModelIface) OverrideUnrefNode(cb func(TreeModel, *TreeIter)) {
 	if cb == nil {
 		x.xUnrefNode = 0
 	} else {
@@ -566,8 +566,8 @@ 		})
 	}
 }
 
-// GetCallbackUnrefNode gets the callback function.
-func (x *TreeModelIface) GetCallbackUnrefNode() func(TreeModel, *TreeIter) {
+// GetUnrefNode gets the callback function.
+func (x *TreeModelIface) GetUnrefNode() func(TreeModel, *TreeIter) {
 	if x.xUnrefNode == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtktreemodelfilter.go b/v4/gtk/gtktreemodelfilter.go
index 9186123a3311bb07d7b3079849d1ef490bb345c0..69e57dea532b78adc430dc39acb58949869caaa3 100644
--- a/v4/gtk/gtktreemodelfilter.go
+++ b/v4/gtk/gtktreemodelfilter.go
@@ -40,9 +40,9 @@ func (x *TreeModelFilterClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackVisible sets the callback function.
+// OverrideVisible sets the callback function.
 // A function which decides whether the row indicated by @iter is visible.
-func (x *TreeModelFilterClass) SetCallbackVisible(cb func(*TreeModelFilter, TreeModel, *TreeIter) bool) {
+func (x *TreeModelFilterClass) OverrideVisible(cb func(*TreeModelFilter, TreeModel, *TreeIter) bool) {
 	if cb == nil {
 		x.xVisible = 0
 	} else {
@@ -52,9 +52,9 @@ 		})
 	}
 }
 
-// GetCallbackVisible gets the callback function.
+// GetVisible gets the callback function.
 // A function which decides whether the row indicated by @iter is visible.
-func (x *TreeModelFilterClass) GetCallbackVisible() func(*TreeModelFilter, TreeModel, *TreeIter) bool {
+func (x *TreeModelFilterClass) GetVisible() func(*TreeModelFilter, TreeModel, *TreeIter) bool {
 	if x.xVisible == 0 {
 		return nil
 	}
@@ -65,14 +65,14 @@ 		return rawCallback(SelfVar.GoPointer(), ChildModelVar.GoPointer(), IterVar)
 	}
 }
 
-// SetCallbackModify sets the callback function.
+// OverrideModify sets the callback function.
 // A function which calculates display values from raw values in the model.
 // It must fill @value with the display value for the column @column in the
 // row indicated by @iter.
 //
 // Since this function is called for each data access, it’s not a
 // particularly efficient operation.
-func (x *TreeModelFilterClass) SetCallbackModify(cb func(*TreeModelFilter, TreeModel, *TreeIter, *gobject.Value, int)) {
+func (x *TreeModelFilterClass) OverrideModify(cb func(*TreeModelFilter, TreeModel, *TreeIter, *gobject.Value, int)) {
 	if cb == nil {
 		x.xModify = 0
 	} else {
@@ -82,14 +82,14 @@ 		})
 	}
 }
 
-// GetCallbackModify gets the callback function.
+// GetModify gets the callback function.
 // A function which calculates display values from raw values in the model.
 // It must fill @value with the display value for the column @column in the
 // row indicated by @iter.
 //
 // Since this function is called for each data access, it’s not a
 // particularly efficient operation.
-func (x *TreeModelFilterClass) GetCallbackModify() func(*TreeModelFilter, TreeModel, *TreeIter, *gobject.Value, int) {
+func (x *TreeModelFilterClass) GetModify() func(*TreeModelFilter, TreeModel, *TreeIter, *gobject.Value, int) {
 	if x.xModify == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtktreesortable.go b/v4/gtk/gtktreesortable.go
index f24955df4bb59da3994b3a15cda00ba16205a203..e72384b04859209a3366a0de65d1dd8901a97d49 100644
--- a/v4/gtk/gtktreesortable.go
+++ b/v4/gtk/gtktreesortable.go
@@ -47,8 +47,8 @@ func (x *TreeSortableIface) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackSortColumnChanged sets the callback function.
-func (x *TreeSortableIface) SetCallbackSortColumnChanged(cb func(TreeSortable)) {
+// OverrideSortColumnChanged sets the callback function.
+func (x *TreeSortableIface) OverrideSortColumnChanged(cb func(TreeSortable)) {
 	if cb == nil {
 		x.xSortColumnChanged = 0
 	} else {
@@ -58,8 +58,8 @@ 		})
 	}
 }
 
-// GetCallbackSortColumnChanged gets the callback function.
-func (x *TreeSortableIface) GetCallbackSortColumnChanged() func(TreeSortable) {
+// GetSortColumnChanged gets the callback function.
+func (x *TreeSortableIface) GetSortColumnChanged() func(TreeSortable) {
 	if x.xSortColumnChanged == 0 {
 		return nil
 	}
@@ -70,8 +70,8 @@ 		rawCallback(SortableVar.GoPointer())
 	}
 }
 
-// SetCallbackGetSortColumnId sets the callback function.
-func (x *TreeSortableIface) SetCallbackGetSortColumnId(cb func(TreeSortable, int, *SortType) bool) {
+// OverrideGetSortColumnId sets the callback function.
+func (x *TreeSortableIface) OverrideGetSortColumnId(cb func(TreeSortable, int, *SortType) bool) {
 	if cb == nil {
 		x.xGetSortColumnId = 0
 	} else {
@@ -81,8 +81,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSortColumnId gets the callback function.
-func (x *TreeSortableIface) GetCallbackGetSortColumnId() func(TreeSortable, int, *SortType) bool {
+// GetGetSortColumnId gets the callback function.
+func (x *TreeSortableIface) GetGetSortColumnId() func(TreeSortable, int, *SortType) bool {
 	if x.xGetSortColumnId == 0 {
 		return nil
 	}
@@ -93,8 +93,8 @@ 		return rawCallback(SortableVar.GoPointer(), SortColumnIdVar, OrderVar)
 	}
 }
 
-// SetCallbackSetSortColumnId sets the callback function.
-func (x *TreeSortableIface) SetCallbackSetSortColumnId(cb func(TreeSortable, int, SortType)) {
+// OverrideSetSortColumnId sets the callback function.
+func (x *TreeSortableIface) OverrideSetSortColumnId(cb func(TreeSortable, int, SortType)) {
 	if cb == nil {
 		x.xSetSortColumnId = 0
 	} else {
@@ -104,8 +104,8 @@ 		})
 	}
 }
 
-// GetCallbackSetSortColumnId gets the callback function.
-func (x *TreeSortableIface) GetCallbackSetSortColumnId() func(TreeSortable, int, SortType) {
+// GetSetSortColumnId gets the callback function.
+func (x *TreeSortableIface) GetSetSortColumnId() func(TreeSortable, int, SortType) {
 	if x.xSetSortColumnId == 0 {
 		return nil
 	}
@@ -116,8 +116,8 @@ 		rawCallback(SortableVar.GoPointer(), SortColumnIdVar, OrderVar)
 	}
 }
 
-// SetCallbackSetSortFunc sets the callback function.
-func (x *TreeSortableIface) SetCallbackSetSortFunc(cb func(TreeSortable, int, *TreeIterCompareFunc, uintptr, *glib.DestroyNotify)) {
+// OverrideSetSortFunc sets the callback function.
+func (x *TreeSortableIface) OverrideSetSortFunc(cb func(TreeSortable, int, *TreeIterCompareFunc, uintptr, *glib.DestroyNotify)) {
 	if cb == nil {
 		x.xSetSortFunc = 0
 	} else {
@@ -127,8 +127,8 @@ 		})
 	}
 }
 
-// GetCallbackSetSortFunc gets the callback function.
-func (x *TreeSortableIface) GetCallbackSetSortFunc() func(TreeSortable, int, *TreeIterCompareFunc, uintptr, *glib.DestroyNotify) {
+// GetSetSortFunc gets the callback function.
+func (x *TreeSortableIface) GetSetSortFunc() func(TreeSortable, int, *TreeIterCompareFunc, uintptr, *glib.DestroyNotify) {
 	if x.xSetSortFunc == 0 {
 		return nil
 	}
@@ -139,8 +139,8 @@ 		rawCallback(SortableVar.GoPointer(), SortColumnIdVar, glib.NewCallback(SortFuncVar), UserDataVar, glib.NewCallbackNullable(DestroyVar))
 	}
 }
 
-// SetCallbackSetDefaultSortFunc sets the callback function.
-func (x *TreeSortableIface) SetCallbackSetDefaultSortFunc(cb func(TreeSortable, *TreeIterCompareFunc, uintptr, *glib.DestroyNotify)) {
+// OverrideSetDefaultSortFunc sets the callback function.
+func (x *TreeSortableIface) OverrideSetDefaultSortFunc(cb func(TreeSortable, *TreeIterCompareFunc, uintptr, *glib.DestroyNotify)) {
 	if cb == nil {
 		x.xSetDefaultSortFunc = 0
 	} else {
@@ -150,8 +150,8 @@ 		})
 	}
 }
 
-// GetCallbackSetDefaultSortFunc gets the callback function.
-func (x *TreeSortableIface) GetCallbackSetDefaultSortFunc() func(TreeSortable, *TreeIterCompareFunc, uintptr, *glib.DestroyNotify) {
+// GetSetDefaultSortFunc gets the callback function.
+func (x *TreeSortableIface) GetSetDefaultSortFunc() func(TreeSortable, *TreeIterCompareFunc, uintptr, *glib.DestroyNotify) {
 	if x.xSetDefaultSortFunc == 0 {
 		return nil
 	}
@@ -162,8 +162,8 @@ 		rawCallback(SortableVar.GoPointer(), glib.NewCallback(SortFuncVar), UserDataVar, glib.NewCallbackNullable(DestroyVar))
 	}
 }
 
-// SetCallbackHasDefaultSortFunc sets the callback function.
-func (x *TreeSortableIface) SetCallbackHasDefaultSortFunc(cb func(TreeSortable) bool) {
+// OverrideHasDefaultSortFunc sets the callback function.
+func (x *TreeSortableIface) OverrideHasDefaultSortFunc(cb func(TreeSortable) bool) {
 	if cb == nil {
 		x.xHasDefaultSortFunc = 0
 	} else {
@@ -173,8 +173,8 @@ 		})
 	}
 }
 
-// GetCallbackHasDefaultSortFunc gets the callback function.
-func (x *TreeSortableIface) GetCallbackHasDefaultSortFunc() func(TreeSortable) bool {
+// GetHasDefaultSortFunc gets the callback function.
+func (x *TreeSortableIface) GetHasDefaultSortFunc() func(TreeSortable) bool {
 	if x.xHasDefaultSortFunc == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtktreeview.go b/v4/gtk/gtktreeview.go
index 6300a03b5aa4af643051f112735aa74be38cb5bb..fafab6349704eb9bdb91ae1e6b7097116d286058 100644
--- a/v4/gtk/gtktreeview.go
+++ b/v4/gtk/gtktreeview.go
@@ -80,8 +80,8 @@ func (x *TreeViewClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackRowActivated sets the callback function.
-func (x *TreeViewClass) SetCallbackRowActivated(cb func(*TreeView, *TreePath, *TreeViewColumn)) {
+// OverrideRowActivated sets the callback function.
+func (x *TreeViewClass) OverrideRowActivated(cb func(*TreeView, *TreePath, *TreeViewColumn)) {
 	if cb == nil {
 		x.xRowActivated = 0
 	} else {
@@ -91,8 +91,8 @@ 		})
 	}
 }
 
-// GetCallbackRowActivated gets the callback function.
-func (x *TreeViewClass) GetCallbackRowActivated() func(*TreeView, *TreePath, *TreeViewColumn) {
+// GetRowActivated gets the callback function.
+func (x *TreeViewClass) GetRowActivated() func(*TreeView, *TreePath, *TreeViewColumn) {
 	if x.xRowActivated == 0 {
 		return nil
 	}
@@ -103,8 +103,8 @@ 		rawCallback(TreeViewVar.GoPointer(), PathVar, ColumnVar.GoPointer())
 	}
 }
 
-// SetCallbackTestExpandRow sets the callback function.
-func (x *TreeViewClass) SetCallbackTestExpandRow(cb func(*TreeView, *TreeIter, *TreePath) bool) {
+// OverrideTestExpandRow sets the callback function.
+func (x *TreeViewClass) OverrideTestExpandRow(cb func(*TreeView, *TreeIter, *TreePath) bool) {
 	if cb == nil {
 		x.xTestExpandRow = 0
 	} else {
@@ -114,8 +114,8 @@ 		})
 	}
 }
 
-// GetCallbackTestExpandRow gets the callback function.
-func (x *TreeViewClass) GetCallbackTestExpandRow() func(*TreeView, *TreeIter, *TreePath) bool {
+// GetTestExpandRow gets the callback function.
+func (x *TreeViewClass) GetTestExpandRow() func(*TreeView, *TreeIter, *TreePath) bool {
 	if x.xTestExpandRow == 0 {
 		return nil
 	}
@@ -126,8 +126,8 @@ 		return rawCallback(TreeViewVar.GoPointer(), IterVar, PathVar)
 	}
 }
 
-// SetCallbackTestCollapseRow sets the callback function.
-func (x *TreeViewClass) SetCallbackTestCollapseRow(cb func(*TreeView, *TreeIter, *TreePath) bool) {
+// OverrideTestCollapseRow sets the callback function.
+func (x *TreeViewClass) OverrideTestCollapseRow(cb func(*TreeView, *TreeIter, *TreePath) bool) {
 	if cb == nil {
 		x.xTestCollapseRow = 0
 	} else {
@@ -137,8 +137,8 @@ 		})
 	}
 }
 
-// GetCallbackTestCollapseRow gets the callback function.
-func (x *TreeViewClass) GetCallbackTestCollapseRow() func(*TreeView, *TreeIter, *TreePath) bool {
+// GetTestCollapseRow gets the callback function.
+func (x *TreeViewClass) GetTestCollapseRow() func(*TreeView, *TreeIter, *TreePath) bool {
 	if x.xTestCollapseRow == 0 {
 		return nil
 	}
@@ -149,8 +149,8 @@ 		return rawCallback(TreeViewVar.GoPointer(), IterVar, PathVar)
 	}
 }
 
-// SetCallbackRowExpanded sets the callback function.
-func (x *TreeViewClass) SetCallbackRowExpanded(cb func(*TreeView, *TreeIter, *TreePath)) {
+// OverrideRowExpanded sets the callback function.
+func (x *TreeViewClass) OverrideRowExpanded(cb func(*TreeView, *TreeIter, *TreePath)) {
 	if cb == nil {
 		x.xRowExpanded = 0
 	} else {
@@ -160,8 +160,8 @@ 		})
 	}
 }
 
-// GetCallbackRowExpanded gets the callback function.
-func (x *TreeViewClass) GetCallbackRowExpanded() func(*TreeView, *TreeIter, *TreePath) {
+// GetRowExpanded gets the callback function.
+func (x *TreeViewClass) GetRowExpanded() func(*TreeView, *TreeIter, *TreePath) {
 	if x.xRowExpanded == 0 {
 		return nil
 	}
@@ -172,8 +172,8 @@ 		rawCallback(TreeViewVar.GoPointer(), IterVar, PathVar)
 	}
 }
 
-// SetCallbackRowCollapsed sets the callback function.
-func (x *TreeViewClass) SetCallbackRowCollapsed(cb func(*TreeView, *TreeIter, *TreePath)) {
+// OverrideRowCollapsed sets the callback function.
+func (x *TreeViewClass) OverrideRowCollapsed(cb func(*TreeView, *TreeIter, *TreePath)) {
 	if cb == nil {
 		x.xRowCollapsed = 0
 	} else {
@@ -183,8 +183,8 @@ 		})
 	}
 }
 
-// GetCallbackRowCollapsed gets the callback function.
-func (x *TreeViewClass) GetCallbackRowCollapsed() func(*TreeView, *TreeIter, *TreePath) {
+// GetRowCollapsed gets the callback function.
+func (x *TreeViewClass) GetRowCollapsed() func(*TreeView, *TreeIter, *TreePath) {
 	if x.xRowCollapsed == 0 {
 		return nil
 	}
@@ -195,8 +195,8 @@ 		rawCallback(TreeViewVar.GoPointer(), IterVar, PathVar)
 	}
 }
 
-// SetCallbackColumnsChanged sets the callback function.
-func (x *TreeViewClass) SetCallbackColumnsChanged(cb func(*TreeView)) {
+// OverrideColumnsChanged sets the callback function.
+func (x *TreeViewClass) OverrideColumnsChanged(cb func(*TreeView)) {
 	if cb == nil {
 		x.xColumnsChanged = 0
 	} else {
@@ -206,8 +206,8 @@ 		})
 	}
 }
 
-// GetCallbackColumnsChanged gets the callback function.
-func (x *TreeViewClass) GetCallbackColumnsChanged() func(*TreeView) {
+// GetColumnsChanged gets the callback function.
+func (x *TreeViewClass) GetColumnsChanged() func(*TreeView) {
 	if x.xColumnsChanged == 0 {
 		return nil
 	}
@@ -218,8 +218,8 @@ 		rawCallback(TreeViewVar.GoPointer())
 	}
 }
 
-// SetCallbackCursorChanged sets the callback function.
-func (x *TreeViewClass) SetCallbackCursorChanged(cb func(*TreeView)) {
+// OverrideCursorChanged sets the callback function.
+func (x *TreeViewClass) OverrideCursorChanged(cb func(*TreeView)) {
 	if cb == nil {
 		x.xCursorChanged = 0
 	} else {
@@ -229,8 +229,8 @@ 		})
 	}
 }
 
-// GetCallbackCursorChanged gets the callback function.
-func (x *TreeViewClass) GetCallbackCursorChanged() func(*TreeView) {
+// GetCursorChanged gets the callback function.
+func (x *TreeViewClass) GetCursorChanged() func(*TreeView) {
 	if x.xCursorChanged == 0 {
 		return nil
 	}
@@ -241,8 +241,8 @@ 		rawCallback(TreeViewVar.GoPointer())
 	}
 }
 
-// SetCallbackMoveCursor sets the callback function.
-func (x *TreeViewClass) SetCallbackMoveCursor(cb func(*TreeView, MovementStep, int, bool, bool) bool) {
+// OverrideMoveCursor sets the callback function.
+func (x *TreeViewClass) OverrideMoveCursor(cb func(*TreeView, MovementStep, int, bool, bool) bool) {
 	if cb == nil {
 		x.xMoveCursor = 0
 	} else {
@@ -252,8 +252,8 @@ 		})
 	}
 }
 
-// GetCallbackMoveCursor gets the callback function.
-func (x *TreeViewClass) GetCallbackMoveCursor() func(*TreeView, MovementStep, int, bool, bool) bool {
+// GetMoveCursor gets the callback function.
+func (x *TreeViewClass) GetMoveCursor() func(*TreeView, MovementStep, int, bool, bool) bool {
 	if x.xMoveCursor == 0 {
 		return nil
 	}
@@ -264,8 +264,8 @@ 		return rawCallback(TreeViewVar.GoPointer(), StepVar, CountVar, ExtendVar, ModifyVar)
 	}
 }
 
-// SetCallbackSelectAll sets the callback function.
-func (x *TreeViewClass) SetCallbackSelectAll(cb func(*TreeView) bool) {
+// OverrideSelectAll sets the callback function.
+func (x *TreeViewClass) OverrideSelectAll(cb func(*TreeView) bool) {
 	if cb == nil {
 		x.xSelectAll = 0
 	} else {
@@ -275,8 +275,8 @@ 		})
 	}
 }
 
-// GetCallbackSelectAll gets the callback function.
-func (x *TreeViewClass) GetCallbackSelectAll() func(*TreeView) bool {
+// GetSelectAll gets the callback function.
+func (x *TreeViewClass) GetSelectAll() func(*TreeView) bool {
 	if x.xSelectAll == 0 {
 		return nil
 	}
@@ -287,8 +287,8 @@ 		return rawCallback(TreeViewVar.GoPointer())
 	}
 }
 
-// SetCallbackUnselectAll sets the callback function.
-func (x *TreeViewClass) SetCallbackUnselectAll(cb func(*TreeView) bool) {
+// OverrideUnselectAll sets the callback function.
+func (x *TreeViewClass) OverrideUnselectAll(cb func(*TreeView) bool) {
 	if cb == nil {
 		x.xUnselectAll = 0
 	} else {
@@ -298,8 +298,8 @@ 		})
 	}
 }
 
-// GetCallbackUnselectAll gets the callback function.
-func (x *TreeViewClass) GetCallbackUnselectAll() func(*TreeView) bool {
+// GetUnselectAll gets the callback function.
+func (x *TreeViewClass) GetUnselectAll() func(*TreeView) bool {
 	if x.xUnselectAll == 0 {
 		return nil
 	}
@@ -310,8 +310,8 @@ 		return rawCallback(TreeViewVar.GoPointer())
 	}
 }
 
-// SetCallbackSelectCursorRow sets the callback function.
-func (x *TreeViewClass) SetCallbackSelectCursorRow(cb func(*TreeView, bool) bool) {
+// OverrideSelectCursorRow sets the callback function.
+func (x *TreeViewClass) OverrideSelectCursorRow(cb func(*TreeView, bool) bool) {
 	if cb == nil {
 		x.xSelectCursorRow = 0
 	} else {
@@ -321,8 +321,8 @@ 		})
 	}
 }
 
-// GetCallbackSelectCursorRow gets the callback function.
-func (x *TreeViewClass) GetCallbackSelectCursorRow() func(*TreeView, bool) bool {
+// GetSelectCursorRow gets the callback function.
+func (x *TreeViewClass) GetSelectCursorRow() func(*TreeView, bool) bool {
 	if x.xSelectCursorRow == 0 {
 		return nil
 	}
@@ -333,8 +333,8 @@ 		return rawCallback(TreeViewVar.GoPointer(), StartEditingVar)
 	}
 }
 
-// SetCallbackToggleCursorRow sets the callback function.
-func (x *TreeViewClass) SetCallbackToggleCursorRow(cb func(*TreeView) bool) {
+// OverrideToggleCursorRow sets the callback function.
+func (x *TreeViewClass) OverrideToggleCursorRow(cb func(*TreeView) bool) {
 	if cb == nil {
 		x.xToggleCursorRow = 0
 	} else {
@@ -344,8 +344,8 @@ 		})
 	}
 }
 
-// GetCallbackToggleCursorRow gets the callback function.
-func (x *TreeViewClass) GetCallbackToggleCursorRow() func(*TreeView) bool {
+// GetToggleCursorRow gets the callback function.
+func (x *TreeViewClass) GetToggleCursorRow() func(*TreeView) bool {
 	if x.xToggleCursorRow == 0 {
 		return nil
 	}
@@ -356,8 +356,8 @@ 		return rawCallback(TreeViewVar.GoPointer())
 	}
 }
 
-// SetCallbackExpandCollapseCursorRow sets the callback function.
-func (x *TreeViewClass) SetCallbackExpandCollapseCursorRow(cb func(*TreeView, bool, bool, bool) bool) {
+// OverrideExpandCollapseCursorRow sets the callback function.
+func (x *TreeViewClass) OverrideExpandCollapseCursorRow(cb func(*TreeView, bool, bool, bool) bool) {
 	if cb == nil {
 		x.xExpandCollapseCursorRow = 0
 	} else {
@@ -367,8 +367,8 @@ 		})
 	}
 }
 
-// GetCallbackExpandCollapseCursorRow gets the callback function.
-func (x *TreeViewClass) GetCallbackExpandCollapseCursorRow() func(*TreeView, bool, bool, bool) bool {
+// GetExpandCollapseCursorRow gets the callback function.
+func (x *TreeViewClass) GetExpandCollapseCursorRow() func(*TreeView, bool, bool, bool) bool {
 	if x.xExpandCollapseCursorRow == 0 {
 		return nil
 	}
@@ -379,8 +379,8 @@ 		return rawCallback(TreeViewVar.GoPointer(), LogicalVar, ExpandVar, OpenAllVar)
 	}
 }
 
-// SetCallbackSelectCursorParent sets the callback function.
-func (x *TreeViewClass) SetCallbackSelectCursorParent(cb func(*TreeView) bool) {
+// OverrideSelectCursorParent sets the callback function.
+func (x *TreeViewClass) OverrideSelectCursorParent(cb func(*TreeView) bool) {
 	if cb == nil {
 		x.xSelectCursorParent = 0
 	} else {
@@ -390,8 +390,8 @@ 		})
 	}
 }
 
-// GetCallbackSelectCursorParent gets the callback function.
-func (x *TreeViewClass) GetCallbackSelectCursorParent() func(*TreeView) bool {
+// GetSelectCursorParent gets the callback function.
+func (x *TreeViewClass) GetSelectCursorParent() func(*TreeView) bool {
 	if x.xSelectCursorParent == 0 {
 		return nil
 	}
@@ -402,8 +402,8 @@ 		return rawCallback(TreeViewVar.GoPointer())
 	}
 }
 
-// SetCallbackStartInteractiveSearch sets the callback function.
-func (x *TreeViewClass) SetCallbackStartInteractiveSearch(cb func(*TreeView) bool) {
+// OverrideStartInteractiveSearch sets the callback function.
+func (x *TreeViewClass) OverrideStartInteractiveSearch(cb func(*TreeView) bool) {
 	if cb == nil {
 		x.xStartInteractiveSearch = 0
 	} else {
@@ -413,8 +413,8 @@ 		})
 	}
 }
 
-// GetCallbackStartInteractiveSearch gets the callback function.
-func (x *TreeViewClass) GetCallbackStartInteractiveSearch() func(*TreeView) bool {
+// GetStartInteractiveSearch gets the callback function.
+func (x *TreeViewClass) GetStartInteractiveSearch() func(*TreeView) bool {
 	if x.xStartInteractiveSearch == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkwidget.go b/v4/gtk/gtkwidget.go
index a71c2163e8b535854e61d631a736ecd97e33c5f0..07244782018bc7c38116913d45cfba527fe04e13 100644
--- a/v4/gtk/gtkwidget.go
+++ b/v4/gtk/gtkwidget.go
@@ -480,8 +480,8 @@ 	xWidgetClassSetTemplateScope(x.GoPointer(), ScopeVar.GoPointer())
 
 }
 
-// SetCallbackShow sets the callback function.
-func (x *WidgetClass) SetCallbackShow(cb func(*Widget)) {
+// OverrideShow sets the callback function.
+func (x *WidgetClass) OverrideShow(cb func(*Widget)) {
 	if cb == nil {
 		x.xShow = 0
 	} else {
@@ -491,8 +491,8 @@ 		})
 	}
 }
 
-// GetCallbackShow gets the callback function.
-func (x *WidgetClass) GetCallbackShow() func(*Widget) {
+// GetShow gets the callback function.
+func (x *WidgetClass) GetShow() func(*Widget) {
 	if x.xShow == 0 {
 		return nil
 	}
@@ -503,8 +503,8 @@ 		rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackHide sets the callback function.
-func (x *WidgetClass) SetCallbackHide(cb func(*Widget)) {
+// OverrideHide sets the callback function.
+func (x *WidgetClass) OverrideHide(cb func(*Widget)) {
 	if cb == nil {
 		x.xHide = 0
 	} else {
@@ -514,8 +514,8 @@ 		})
 	}
 }
 
-// GetCallbackHide gets the callback function.
-func (x *WidgetClass) GetCallbackHide() func(*Widget) {
+// GetHide gets the callback function.
+func (x *WidgetClass) GetHide() func(*Widget) {
 	if x.xHide == 0 {
 		return nil
 	}
@@ -526,8 +526,8 @@ 		rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackMap sets the callback function.
-func (x *WidgetClass) SetCallbackMap(cb func(*Widget)) {
+// OverrideMap sets the callback function.
+func (x *WidgetClass) OverrideMap(cb func(*Widget)) {
 	if cb == nil {
 		x.xMap = 0
 	} else {
@@ -537,8 +537,8 @@ 		})
 	}
 }
 
-// GetCallbackMap gets the callback function.
-func (x *WidgetClass) GetCallbackMap() func(*Widget) {
+// GetMap gets the callback function.
+func (x *WidgetClass) GetMap() func(*Widget) {
 	if x.xMap == 0 {
 		return nil
 	}
@@ -549,8 +549,8 @@ 		rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackUnmap sets the callback function.
-func (x *WidgetClass) SetCallbackUnmap(cb func(*Widget)) {
+// OverrideUnmap sets the callback function.
+func (x *WidgetClass) OverrideUnmap(cb func(*Widget)) {
 	if cb == nil {
 		x.xUnmap = 0
 	} else {
@@ -560,8 +560,8 @@ 		})
 	}
 }
 
-// GetCallbackUnmap gets the callback function.
-func (x *WidgetClass) GetCallbackUnmap() func(*Widget) {
+// GetUnmap gets the callback function.
+func (x *WidgetClass) GetUnmap() func(*Widget) {
 	if x.xUnmap == 0 {
 		return nil
 	}
@@ -572,8 +572,8 @@ 		rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackRealize sets the callback function.
-func (x *WidgetClass) SetCallbackRealize(cb func(*Widget)) {
+// OverrideRealize sets the callback function.
+func (x *WidgetClass) OverrideRealize(cb func(*Widget)) {
 	if cb == nil {
 		x.xRealize = 0
 	} else {
@@ -583,8 +583,8 @@ 		})
 	}
 }
 
-// GetCallbackRealize gets the callback function.
-func (x *WidgetClass) GetCallbackRealize() func(*Widget) {
+// GetRealize gets the callback function.
+func (x *WidgetClass) GetRealize() func(*Widget) {
 	if x.xRealize == 0 {
 		return nil
 	}
@@ -595,8 +595,8 @@ 		rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackUnrealize sets the callback function.
-func (x *WidgetClass) SetCallbackUnrealize(cb func(*Widget)) {
+// OverrideUnrealize sets the callback function.
+func (x *WidgetClass) OverrideUnrealize(cb func(*Widget)) {
 	if cb == nil {
 		x.xUnrealize = 0
 	} else {
@@ -606,8 +606,8 @@ 		})
 	}
 }
 
-// GetCallbackUnrealize gets the callback function.
-func (x *WidgetClass) GetCallbackUnrealize() func(*Widget) {
+// GetUnrealize gets the callback function.
+func (x *WidgetClass) GetUnrealize() func(*Widget) {
 	if x.xUnrealize == 0 {
 		return nil
 	}
@@ -618,8 +618,8 @@ 		rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackRoot sets the callback function.
-func (x *WidgetClass) SetCallbackRoot(cb func(*Widget)) {
+// OverrideRoot sets the callback function.
+func (x *WidgetClass) OverrideRoot(cb func(*Widget)) {
 	if cb == nil {
 		x.xRoot = 0
 	} else {
@@ -629,8 +629,8 @@ 		})
 	}
 }
 
-// GetCallbackRoot gets the callback function.
-func (x *WidgetClass) GetCallbackRoot() func(*Widget) {
+// GetRoot gets the callback function.
+func (x *WidgetClass) GetRoot() func(*Widget) {
 	if x.xRoot == 0 {
 		return nil
 	}
@@ -641,8 +641,8 @@ 		rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackUnroot sets the callback function.
-func (x *WidgetClass) SetCallbackUnroot(cb func(*Widget)) {
+// OverrideUnroot sets the callback function.
+func (x *WidgetClass) OverrideUnroot(cb func(*Widget)) {
 	if cb == nil {
 		x.xUnroot = 0
 	} else {
@@ -652,8 +652,8 @@ 		})
 	}
 }
 
-// GetCallbackUnroot gets the callback function.
-func (x *WidgetClass) GetCallbackUnroot() func(*Widget) {
+// GetUnroot gets the callback function.
+func (x *WidgetClass) GetUnroot() func(*Widget) {
 	if x.xUnroot == 0 {
 		return nil
 	}
@@ -664,8 +664,8 @@ 		rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackSizeAllocate sets the callback function.
-func (x *WidgetClass) SetCallbackSizeAllocate(cb func(*Widget, int, int, int)) {
+// OverrideSizeAllocate sets the callback function.
+func (x *WidgetClass) OverrideSizeAllocate(cb func(*Widget, int, int, int)) {
 	if cb == nil {
 		x.xSizeAllocate = 0
 	} else {
@@ -675,8 +675,8 @@ 		})
 	}
 }
 
-// GetCallbackSizeAllocate gets the callback function.
-func (x *WidgetClass) GetCallbackSizeAllocate() func(*Widget, int, int, int) {
+// GetSizeAllocate gets the callback function.
+func (x *WidgetClass) GetSizeAllocate() func(*Widget, int, int, int) {
 	if x.xSizeAllocate == 0 {
 		return nil
 	}
@@ -687,8 +687,8 @@ 		rawCallback(WidgetVar.GoPointer(), WidthVar, HeightVar, BaselineVar)
 	}
 }
 
-// SetCallbackStateFlagsChanged sets the callback function.
-func (x *WidgetClass) SetCallbackStateFlagsChanged(cb func(*Widget, StateFlags)) {
+// OverrideStateFlagsChanged sets the callback function.
+func (x *WidgetClass) OverrideStateFlagsChanged(cb func(*Widget, StateFlags)) {
 	if cb == nil {
 		x.xStateFlagsChanged = 0
 	} else {
@@ -698,8 +698,8 @@ 		})
 	}
 }
 
-// GetCallbackStateFlagsChanged gets the callback function.
-func (x *WidgetClass) GetCallbackStateFlagsChanged() func(*Widget, StateFlags) {
+// GetStateFlagsChanged gets the callback function.
+func (x *WidgetClass) GetStateFlagsChanged() func(*Widget, StateFlags) {
 	if x.xStateFlagsChanged == 0 {
 		return nil
 	}
@@ -710,8 +710,8 @@ 		rawCallback(WidgetVar.GoPointer(), PreviousStateFlagsVar)
 	}
 }
 
-// SetCallbackDirectionChanged sets the callback function.
-func (x *WidgetClass) SetCallbackDirectionChanged(cb func(*Widget, TextDirection)) {
+// OverrideDirectionChanged sets the callback function.
+func (x *WidgetClass) OverrideDirectionChanged(cb func(*Widget, TextDirection)) {
 	if cb == nil {
 		x.xDirectionChanged = 0
 	} else {
@@ -721,8 +721,8 @@ 		})
 	}
 }
 
-// GetCallbackDirectionChanged gets the callback function.
-func (x *WidgetClass) GetCallbackDirectionChanged() func(*Widget, TextDirection) {
+// GetDirectionChanged gets the callback function.
+func (x *WidgetClass) GetDirectionChanged() func(*Widget, TextDirection) {
 	if x.xDirectionChanged == 0 {
 		return nil
 	}
@@ -733,8 +733,8 @@ 		rawCallback(WidgetVar.GoPointer(), PreviousDirectionVar)
 	}
 }
 
-// SetCallbackGetRequestMode sets the callback function.
-func (x *WidgetClass) SetCallbackGetRequestMode(cb func(*Widget) SizeRequestMode) {
+// OverrideGetRequestMode sets the callback function.
+func (x *WidgetClass) OverrideGetRequestMode(cb func(*Widget) SizeRequestMode) {
 	if cb == nil {
 		x.xGetRequestMode = 0
 	} else {
@@ -744,8 +744,8 @@ 		})
 	}
 }
 
-// GetCallbackGetRequestMode gets the callback function.
-func (x *WidgetClass) GetCallbackGetRequestMode() func(*Widget) SizeRequestMode {
+// GetGetRequestMode gets the callback function.
+func (x *WidgetClass) GetGetRequestMode() func(*Widget) SizeRequestMode {
 	if x.xGetRequestMode == 0 {
 		return nil
 	}
@@ -756,8 +756,8 @@ 		return rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackMeasure sets the callback function.
-func (x *WidgetClass) SetCallbackMeasure(cb func(*Widget, Orientation, int, int, int, int, int)) {
+// OverrideMeasure sets the callback function.
+func (x *WidgetClass) OverrideMeasure(cb func(*Widget, Orientation, int, int, int, int, int)) {
 	if cb == nil {
 		x.xMeasure = 0
 	} else {
@@ -767,8 +767,8 @@ 		})
 	}
 }
 
-// GetCallbackMeasure gets the callback function.
-func (x *WidgetClass) GetCallbackMeasure() func(*Widget, Orientation, int, int, int, int, int) {
+// GetMeasure gets the callback function.
+func (x *WidgetClass) GetMeasure() func(*Widget, Orientation, int, int, int, int, int) {
 	if x.xMeasure == 0 {
 		return nil
 	}
@@ -779,8 +779,8 @@ 		rawCallback(WidgetVar.GoPointer(), OrientationVar, ForSizeVar, MinimumVar, NaturalVar, MinimumBaselineVar, NaturalBaselineVar)
 	}
 }
 
-// SetCallbackMnemonicActivate sets the callback function.
-func (x *WidgetClass) SetCallbackMnemonicActivate(cb func(*Widget, bool) bool) {
+// OverrideMnemonicActivate sets the callback function.
+func (x *WidgetClass) OverrideMnemonicActivate(cb func(*Widget, bool) bool) {
 	if cb == nil {
 		x.xMnemonicActivate = 0
 	} else {
@@ -790,8 +790,8 @@ 		})
 	}
 }
 
-// GetCallbackMnemonicActivate gets the callback function.
-func (x *WidgetClass) GetCallbackMnemonicActivate() func(*Widget, bool) bool {
+// GetMnemonicActivate gets the callback function.
+func (x *WidgetClass) GetMnemonicActivate() func(*Widget, bool) bool {
 	if x.xMnemonicActivate == 0 {
 		return nil
 	}
@@ -802,8 +802,8 @@ 		return rawCallback(WidgetVar.GoPointer(), GroupCyclingVar)
 	}
 }
 
-// SetCallbackGrabFocus sets the callback function.
-func (x *WidgetClass) SetCallbackGrabFocus(cb func(*Widget) bool) {
+// OverrideGrabFocus sets the callback function.
+func (x *WidgetClass) OverrideGrabFocus(cb func(*Widget) bool) {
 	if cb == nil {
 		x.xGrabFocus = 0
 	} else {
@@ -813,8 +813,8 @@ 		})
 	}
 }
 
-// GetCallbackGrabFocus gets the callback function.
-func (x *WidgetClass) GetCallbackGrabFocus() func(*Widget) bool {
+// GetGrabFocus gets the callback function.
+func (x *WidgetClass) GetGrabFocus() func(*Widget) bool {
 	if x.xGrabFocus == 0 {
 		return nil
 	}
@@ -825,8 +825,8 @@ 		return rawCallback(WidgetVar.GoPointer())
 	}
 }
 
-// SetCallbackFocus sets the callback function.
-func (x *WidgetClass) SetCallbackFocus(cb func(*Widget, DirectionType) bool) {
+// OverrideFocus sets the callback function.
+func (x *WidgetClass) OverrideFocus(cb func(*Widget, DirectionType) bool) {
 	if cb == nil {
 		x.xFocus = 0
 	} else {
@@ -836,8 +836,8 @@ 		})
 	}
 }
 
-// GetCallbackFocus gets the callback function.
-func (x *WidgetClass) GetCallbackFocus() func(*Widget, DirectionType) bool {
+// GetFocus gets the callback function.
+func (x *WidgetClass) GetFocus() func(*Widget, DirectionType) bool {
 	if x.xFocus == 0 {
 		return nil
 	}
@@ -848,8 +848,8 @@ 		return rawCallback(WidgetVar.GoPointer(), DirectionVar)
 	}
 }
 
-// SetCallbackSetFocusChild sets the callback function.
-func (x *WidgetClass) SetCallbackSetFocusChild(cb func(*Widget, *Widget)) {
+// OverrideSetFocusChild sets the callback function.
+func (x *WidgetClass) OverrideSetFocusChild(cb func(*Widget, *Widget)) {
 	if cb == nil {
 		x.xSetFocusChild = 0
 	} else {
@@ -859,8 +859,8 @@ 		})
 	}
 }
 
-// GetCallbackSetFocusChild gets the callback function.
-func (x *WidgetClass) GetCallbackSetFocusChild() func(*Widget, *Widget) {
+// GetSetFocusChild gets the callback function.
+func (x *WidgetClass) GetSetFocusChild() func(*Widget, *Widget) {
 	if x.xSetFocusChild == 0 {
 		return nil
 	}
@@ -871,8 +871,8 @@ 		rawCallback(WidgetVar.GoPointer(), ChildVar.GoPointer())
 	}
 }
 
-// SetCallbackMoveFocus sets the callback function.
-func (x *WidgetClass) SetCallbackMoveFocus(cb func(*Widget, DirectionType)) {
+// OverrideMoveFocus sets the callback function.
+func (x *WidgetClass) OverrideMoveFocus(cb func(*Widget, DirectionType)) {
 	if cb == nil {
 		x.xMoveFocus = 0
 	} else {
@@ -882,8 +882,8 @@ 		})
 	}
 }
 
-// GetCallbackMoveFocus gets the callback function.
-func (x *WidgetClass) GetCallbackMoveFocus() func(*Widget, DirectionType) {
+// GetMoveFocus gets the callback function.
+func (x *WidgetClass) GetMoveFocus() func(*Widget, DirectionType) {
 	if x.xMoveFocus == 0 {
 		return nil
 	}
@@ -894,8 +894,8 @@ 		rawCallback(WidgetVar.GoPointer(), DirectionVar)
 	}
 }
 
-// SetCallbackKeynavFailed sets the callback function.
-func (x *WidgetClass) SetCallbackKeynavFailed(cb func(*Widget, DirectionType) bool) {
+// OverrideKeynavFailed sets the callback function.
+func (x *WidgetClass) OverrideKeynavFailed(cb func(*Widget, DirectionType) bool) {
 	if cb == nil {
 		x.xKeynavFailed = 0
 	} else {
@@ -905,8 +905,8 @@ 		})
 	}
 }
 
-// GetCallbackKeynavFailed gets the callback function.
-func (x *WidgetClass) GetCallbackKeynavFailed() func(*Widget, DirectionType) bool {
+// GetKeynavFailed gets the callback function.
+func (x *WidgetClass) GetKeynavFailed() func(*Widget, DirectionType) bool {
 	if x.xKeynavFailed == 0 {
 		return nil
 	}
@@ -917,8 +917,8 @@ 		return rawCallback(WidgetVar.GoPointer(), DirectionVar)
 	}
 }
 
-// SetCallbackQueryTooltip sets the callback function.
-func (x *WidgetClass) SetCallbackQueryTooltip(cb func(*Widget, int, int, bool, *Tooltip) bool) {
+// OverrideQueryTooltip sets the callback function.
+func (x *WidgetClass) OverrideQueryTooltip(cb func(*Widget, int, int, bool, *Tooltip) bool) {
 	if cb == nil {
 		x.xQueryTooltip = 0
 	} else {
@@ -928,8 +928,8 @@ 		})
 	}
 }
 
-// GetCallbackQueryTooltip gets the callback function.
-func (x *WidgetClass) GetCallbackQueryTooltip() func(*Widget, int, int, bool, *Tooltip) bool {
+// GetQueryTooltip gets the callback function.
+func (x *WidgetClass) GetQueryTooltip() func(*Widget, int, int, bool, *Tooltip) bool {
 	if x.xQueryTooltip == 0 {
 		return nil
 	}
@@ -940,8 +940,8 @@ 		return rawCallback(WidgetVar.GoPointer(), XVar, YVar, KeyboardTooltipVar, TooltipVar.GoPointer())
 	}
 }
 
-// SetCallbackComputeExpand sets the callback function.
-func (x *WidgetClass) SetCallbackComputeExpand(cb func(*Widget, bool, bool)) {
+// OverrideComputeExpand sets the callback function.
+func (x *WidgetClass) OverrideComputeExpand(cb func(*Widget, bool, bool)) {
 	if cb == nil {
 		x.xComputeExpand = 0
 	} else {
@@ -951,8 +951,8 @@ 		})
 	}
 }
 
-// GetCallbackComputeExpand gets the callback function.
-func (x *WidgetClass) GetCallbackComputeExpand() func(*Widget, bool, bool) {
+// GetComputeExpand gets the callback function.
+func (x *WidgetClass) GetComputeExpand() func(*Widget, bool, bool) {
 	if x.xComputeExpand == 0 {
 		return nil
 	}
@@ -963,8 +963,8 @@ 		rawCallback(WidgetVar.GoPointer(), HexpandPVar, VexpandPVar)
 	}
 }
 
-// SetCallbackCssChanged sets the callback function.
-func (x *WidgetClass) SetCallbackCssChanged(cb func(*Widget, *CssStyleChange)) {
+// OverrideCssChanged sets the callback function.
+func (x *WidgetClass) OverrideCssChanged(cb func(*Widget, *CssStyleChange)) {
 	if cb == nil {
 		x.xCssChanged = 0
 	} else {
@@ -974,8 +974,8 @@ 		})
 	}
 }
 
-// GetCallbackCssChanged gets the callback function.
-func (x *WidgetClass) GetCallbackCssChanged() func(*Widget, *CssStyleChange) {
+// GetCssChanged gets the callback function.
+func (x *WidgetClass) GetCssChanged() func(*Widget, *CssStyleChange) {
 	if x.xCssChanged == 0 {
 		return nil
 	}
@@ -986,8 +986,8 @@ 		rawCallback(WidgetVar.GoPointer(), ChangeVar)
 	}
 }
 
-// SetCallbackSystemSettingChanged sets the callback function.
-func (x *WidgetClass) SetCallbackSystemSettingChanged(cb func(*Widget, SystemSetting)) {
+// OverrideSystemSettingChanged sets the callback function.
+func (x *WidgetClass) OverrideSystemSettingChanged(cb func(*Widget, SystemSetting)) {
 	if cb == nil {
 		x.xSystemSettingChanged = 0
 	} else {
@@ -997,8 +997,8 @@ 		})
 	}
 }
 
-// GetCallbackSystemSettingChanged gets the callback function.
-func (x *WidgetClass) GetCallbackSystemSettingChanged() func(*Widget, SystemSetting) {
+// GetSystemSettingChanged gets the callback function.
+func (x *WidgetClass) GetSystemSettingChanged() func(*Widget, SystemSetting) {
 	if x.xSystemSettingChanged == 0 {
 		return nil
 	}
@@ -1009,8 +1009,8 @@ 		rawCallback(WidgetVar.GoPointer(), SettingsVar)
 	}
 }
 
-// SetCallbackSnapshot sets the callback function.
-func (x *WidgetClass) SetCallbackSnapshot(cb func(*Widget, *Snapshot)) {
+// OverrideSnapshot sets the callback function.
+func (x *WidgetClass) OverrideSnapshot(cb func(*Widget, *Snapshot)) {
 	if cb == nil {
 		x.xSnapshot = 0
 	} else {
@@ -1020,8 +1020,8 @@ 		})
 	}
 }
 
-// GetCallbackSnapshot gets the callback function.
-func (x *WidgetClass) GetCallbackSnapshot() func(*Widget, *Snapshot) {
+// GetSnapshot gets the callback function.
+func (x *WidgetClass) GetSnapshot() func(*Widget, *Snapshot) {
 	if x.xSnapshot == 0 {
 		return nil
 	}
@@ -1032,8 +1032,8 @@ 		rawCallback(WidgetVar.GoPointer(), SnapshotVar.GoPointer())
 	}
 }
 
-// SetCallbackContains sets the callback function.
-func (x *WidgetClass) SetCallbackContains(cb func(*Widget, float64, float64) bool) {
+// OverrideContains sets the callback function.
+func (x *WidgetClass) OverrideContains(cb func(*Widget, float64, float64) bool) {
 	if cb == nil {
 		x.xContains = 0
 	} else {
@@ -1043,8 +1043,8 @@ 		})
 	}
 }
 
-// GetCallbackContains gets the callback function.
-func (x *WidgetClass) GetCallbackContains() func(*Widget, float64, float64) bool {
+// GetContains gets the callback function.
+func (x *WidgetClass) GetContains() func(*Widget, float64, float64) bool {
 	if x.xContains == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkwindow.go b/v4/gtk/gtkwindow.go
index f43aa5bc8911ff71615bfbb4d5d5024e86549036..2afb10df9d5ff705fe8901f5926cea543e3b1a45 100644
--- a/v4/gtk/gtkwindow.go
+++ b/v4/gtk/gtkwindow.go
@@ -37,8 +37,8 @@ func (x *WindowClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackActivateFocus sets the callback function.
-func (x *WindowClass) SetCallbackActivateFocus(cb func(*Window)) {
+// OverrideActivateFocus sets the callback function.
+func (x *WindowClass) OverrideActivateFocus(cb func(*Window)) {
 	if cb == nil {
 		x.xActivateFocus = 0
 	} else {
@@ -48,8 +48,8 @@ 		})
 	}
 }
 
-// GetCallbackActivateFocus gets the callback function.
-func (x *WindowClass) GetCallbackActivateFocus() func(*Window) {
+// GetActivateFocus gets the callback function.
+func (x *WindowClass) GetActivateFocus() func(*Window) {
 	if x.xActivateFocus == 0 {
 		return nil
 	}
@@ -60,8 +60,8 @@ 		rawCallback(WindowVar.GoPointer())
 	}
 }
 
-// SetCallbackActivateDefault sets the callback function.
-func (x *WindowClass) SetCallbackActivateDefault(cb func(*Window)) {
+// OverrideActivateDefault sets the callback function.
+func (x *WindowClass) OverrideActivateDefault(cb func(*Window)) {
 	if cb == nil {
 		x.xActivateDefault = 0
 	} else {
@@ -71,8 +71,8 @@ 		})
 	}
 }
 
-// GetCallbackActivateDefault gets the callback function.
-func (x *WindowClass) GetCallbackActivateDefault() func(*Window) {
+// GetActivateDefault gets the callback function.
+func (x *WindowClass) GetActivateDefault() func(*Window) {
 	if x.xActivateDefault == 0 {
 		return nil
 	}
@@ -83,8 +83,8 @@ 		rawCallback(WindowVar.GoPointer())
 	}
 }
 
-// SetCallbackKeysChanged sets the callback function.
-func (x *WindowClass) SetCallbackKeysChanged(cb func(*Window)) {
+// OverrideKeysChanged sets the callback function.
+func (x *WindowClass) OverrideKeysChanged(cb func(*Window)) {
 	if cb == nil {
 		x.xKeysChanged = 0
 	} else {
@@ -94,8 +94,8 @@ 		})
 	}
 }
 
-// GetCallbackKeysChanged gets the callback function.
-func (x *WindowClass) GetCallbackKeysChanged() func(*Window) {
+// GetKeysChanged gets the callback function.
+func (x *WindowClass) GetKeysChanged() func(*Window) {
 	if x.xKeysChanged == 0 {
 		return nil
 	}
@@ -106,8 +106,8 @@ 		rawCallback(WindowVar.GoPointer())
 	}
 }
 
-// SetCallbackEnableDebugging sets the callback function.
-func (x *WindowClass) SetCallbackEnableDebugging(cb func(*Window, bool) bool) {
+// OverrideEnableDebugging sets the callback function.
+func (x *WindowClass) OverrideEnableDebugging(cb func(*Window, bool) bool) {
 	if cb == nil {
 		x.xEnableDebugging = 0
 	} else {
@@ -117,8 +117,8 @@ 		})
 	}
 }
 
-// GetCallbackEnableDebugging gets the callback function.
-func (x *WindowClass) GetCallbackEnableDebugging() func(*Window, bool) bool {
+// GetEnableDebugging gets the callback function.
+func (x *WindowClass) GetEnableDebugging() func(*Window, bool) bool {
 	if x.xEnableDebugging == 0 {
 		return nil
 	}
@@ -129,8 +129,8 @@ 		return rawCallback(WindowVar.GoPointer(), ToggleVar)
 	}
 }
 
-// SetCallbackCloseRequest sets the callback function.
-func (x *WindowClass) SetCallbackCloseRequest(cb func(*Window) bool) {
+// OverrideCloseRequest sets the callback function.
+func (x *WindowClass) OverrideCloseRequest(cb func(*Window) bool) {
 	if cb == nil {
 		x.xCloseRequest = 0
 	} else {
@@ -140,8 +140,8 @@ 		})
 	}
 }
 
-// GetCallbackCloseRequest gets the callback function.
-func (x *WindowClass) GetCallbackCloseRequest() func(*Window) bool {
+// GetCloseRequest gets the callback function.
+func (x *WindowClass) GetCloseRequest() func(*Window) bool {
 	if x.xCloseRequest == 0 {
 		return nil
 	}
diff --git a/v4/gtk/gtkwindowgroup.go b/v4/gtk/gtkwindowgroup.go
index 51e107f58087cd908658a978bbee6506adbcf192..be91077aaa3af568c3da70f34640845209d8323c 100644
--- a/v4/gtk/gtkwindowgroup.go
+++ b/v4/gtk/gtkwindowgroup.go
@@ -30,8 +30,8 @@ func (x *WindowGroupClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGtkReserved1 sets the callback function.
-func (x *WindowGroupClass) SetCallbackGtkReserved1(cb func()) {
+// OverrideGtkReserved1 sets the callback function.
+func (x *WindowGroupClass) OverrideGtkReserved1(cb func()) {
 	if cb == nil {
 		x.xGtkReserved1 = 0
 	} else {
@@ -41,8 +41,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved1 gets the callback function.
-func (x *WindowGroupClass) GetCallbackGtkReserved1() func() {
+// GetGtkReserved1 gets the callback function.
+func (x *WindowGroupClass) GetGtkReserved1() func() {
 	if x.xGtkReserved1 == 0 {
 		return nil
 	}
@@ -53,8 +53,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved2 sets the callback function.
-func (x *WindowGroupClass) SetCallbackGtkReserved2(cb func()) {
+// OverrideGtkReserved2 sets the callback function.
+func (x *WindowGroupClass) OverrideGtkReserved2(cb func()) {
 	if cb == nil {
 		x.xGtkReserved2 = 0
 	} else {
@@ -64,8 +64,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved2 gets the callback function.
-func (x *WindowGroupClass) GetCallbackGtkReserved2() func() {
+// GetGtkReserved2 gets the callback function.
+func (x *WindowGroupClass) GetGtkReserved2() func() {
 	if x.xGtkReserved2 == 0 {
 		return nil
 	}
@@ -76,8 +76,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved3 sets the callback function.
-func (x *WindowGroupClass) SetCallbackGtkReserved3(cb func()) {
+// OverrideGtkReserved3 sets the callback function.
+func (x *WindowGroupClass) OverrideGtkReserved3(cb func()) {
 	if cb == nil {
 		x.xGtkReserved3 = 0
 	} else {
@@ -87,8 +87,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved3 gets the callback function.
-func (x *WindowGroupClass) GetCallbackGtkReserved3() func() {
+// GetGtkReserved3 gets the callback function.
+func (x *WindowGroupClass) GetGtkReserved3() func() {
 	if x.xGtkReserved3 == 0 {
 		return nil
 	}
@@ -99,8 +99,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackGtkReserved4 sets the callback function.
-func (x *WindowGroupClass) SetCallbackGtkReserved4(cb func()) {
+// OverrideGtkReserved4 sets the callback function.
+func (x *WindowGroupClass) OverrideGtkReserved4(cb func()) {
 	if cb == nil {
 		x.xGtkReserved4 = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackGtkReserved4 gets the callback function.
-func (x *WindowGroupClass) GetCallbackGtkReserved4() func() {
+// GetGtkReserved4 gets the callback function.
+func (x *WindowGroupClass) GetGtkReserved4() func() {
 	if x.xGtkReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/pango/pango-attributes.go b/v4/pango/pango-attributes.go
index 052bda45fb9d602c92e2e03a1253be038c822f4e..fda9e7d393f71dfba55731bd6a08ddcb8635a336 100644
--- a/v4/pango/pango-attributes.go
+++ b/v4/pango/pango-attributes.go
@@ -38,8 +38,8 @@ func (x *AttrClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackCopy sets the callback function.
-func (x *AttrClass) SetCallbackCopy(cb func(*Attribute) *Attribute) {
+// OverrideCopy sets the callback function.
+func (x *AttrClass) OverrideCopy(cb func(*Attribute) *Attribute) {
 	if cb == nil {
 		x.xCopy = 0
 	} else {
@@ -49,8 +49,8 @@ 		})
 	}
 }
 
-// GetCallbackCopy gets the callback function.
-func (x *AttrClass) GetCallbackCopy() func(*Attribute) *Attribute {
+// GetCopy gets the callback function.
+func (x *AttrClass) GetCopy() func(*Attribute) *Attribute {
 	if x.xCopy == 0 {
 		return nil
 	}
@@ -61,8 +61,8 @@ 		return rawCallback(AttrVar)
 	}
 }
 
-// SetCallbackDestroy sets the callback function.
-func (x *AttrClass) SetCallbackDestroy(cb func(*Attribute)) {
+// OverrideDestroy sets the callback function.
+func (x *AttrClass) OverrideDestroy(cb func(*Attribute)) {
 	if cb == nil {
 		x.xDestroy = 0
 	} else {
@@ -72,8 +72,8 @@ 		})
 	}
 }
 
-// GetCallbackDestroy gets the callback function.
-func (x *AttrClass) GetCallbackDestroy() func(*Attribute) {
+// GetDestroy gets the callback function.
+func (x *AttrClass) GetDestroy() func(*Attribute) {
 	if x.xDestroy == 0 {
 		return nil
 	}
@@ -84,8 +84,8 @@ 		rawCallback(AttrVar)
 	}
 }
 
-// SetCallbackEqual sets the callback function.
-func (x *AttrClass) SetCallbackEqual(cb func(*Attribute, *Attribute) bool) {
+// OverrideEqual sets the callback function.
+func (x *AttrClass) OverrideEqual(cb func(*Attribute, *Attribute) bool) {
 	if cb == nil {
 		x.xEqual = 0
 	} else {
@@ -95,8 +95,8 @@ 		})
 	}
 }
 
-// GetCallbackEqual gets the callback function.
-func (x *AttrClass) GetCallbackEqual() func(*Attribute, *Attribute) bool {
+// GetEqual gets the callback function.
+func (x *AttrClass) GetEqual() func(*Attribute, *Attribute) bool {
 	if x.xEqual == 0 {
 		return nil
 	}
diff --git a/v4/pango/pango-font.go b/v4/pango/pango-font.go
index 84cb37ec4f295217848a971dc945a363dfaaed1b..dc6cd7ee0caf09384e16045f860966097a10b496 100644
--- a/v4/pango/pango-font.go
+++ b/v4/pango/pango-font.go
@@ -38,8 +38,8 @@ func (x *FontClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackDescribe sets the callback function.
-func (x *FontClass) SetCallbackDescribe(cb func(*Font) *FontDescription) {
+// OverrideDescribe sets the callback function.
+func (x *FontClass) OverrideDescribe(cb func(*Font) *FontDescription) {
 	if cb == nil {
 		x.xDescribe = 0
 	} else {
@@ -49,8 +49,8 @@ 		})
 	}
 }
 
-// GetCallbackDescribe gets the callback function.
-func (x *FontClass) GetCallbackDescribe() func(*Font) *FontDescription {
+// GetDescribe gets the callback function.
+func (x *FontClass) GetDescribe() func(*Font) *FontDescription {
 	if x.xDescribe == 0 {
 		return nil
 	}
@@ -61,8 +61,8 @@ 		return rawCallback(FontVar.GoPointer())
 	}
 }
 
-// SetCallbackGetCoverage sets the callback function.
-func (x *FontClass) SetCallbackGetCoverage(cb func(*Font, *Language) *Coverage) {
+// OverrideGetCoverage sets the callback function.
+func (x *FontClass) OverrideGetCoverage(cb func(*Font, *Language) *Coverage) {
 	if cb == nil {
 		x.xGetCoverage = 0
 	} else {
@@ -76,8 +76,8 @@ 		})
 	}
 }
 
-// GetCallbackGetCoverage gets the callback function.
-func (x *FontClass) GetCallbackGetCoverage() func(*Font, *Language) *Coverage {
+// GetGetCoverage gets the callback function.
+func (x *FontClass) GetGetCoverage() func(*Font, *Language) *Coverage {
 	if x.xGetCoverage == 0 {
 		return nil
 	}
@@ -94,8 +94,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetGlyphExtents sets the callback function.
-func (x *FontClass) SetCallbackGetGlyphExtents(cb func(*Font, Glyph, *Rectangle, *Rectangle)) {
+// OverrideGetGlyphExtents sets the callback function.
+func (x *FontClass) OverrideGetGlyphExtents(cb func(*Font, Glyph, *Rectangle, *Rectangle)) {
 	if cb == nil {
 		x.xGetGlyphExtents = 0
 	} else {
@@ -105,8 +105,8 @@ 		})
 	}
 }
 
-// GetCallbackGetGlyphExtents gets the callback function.
-func (x *FontClass) GetCallbackGetGlyphExtents() func(*Font, Glyph, *Rectangle, *Rectangle) {
+// GetGetGlyphExtents gets the callback function.
+func (x *FontClass) GetGetGlyphExtents() func(*Font, Glyph, *Rectangle, *Rectangle) {
 	if x.xGetGlyphExtents == 0 {
 		return nil
 	}
@@ -117,8 +117,8 @@ 		rawCallback(FontVar.GoPointer(), GlyphVar, InkRectVar, LogicalRectVar)
 	}
 }
 
-// SetCallbackGetMetrics sets the callback function.
-func (x *FontClass) SetCallbackGetMetrics(cb func(*Font, *Language) *FontMetrics) {
+// OverrideGetMetrics sets the callback function.
+func (x *FontClass) OverrideGetMetrics(cb func(*Font, *Language) *FontMetrics) {
 	if cb == nil {
 		x.xGetMetrics = 0
 	} else {
@@ -128,8 +128,8 @@ 		})
 	}
 }
 
-// GetCallbackGetMetrics gets the callback function.
-func (x *FontClass) GetCallbackGetMetrics() func(*Font, *Language) *FontMetrics {
+// GetGetMetrics gets the callback function.
+func (x *FontClass) GetGetMetrics() func(*Font, *Language) *FontMetrics {
 	if x.xGetMetrics == 0 {
 		return nil
 	}
@@ -140,8 +140,8 @@ 		return rawCallback(FontVar.GoPointer(), LanguageVar)
 	}
 }
 
-// SetCallbackGetFontMap sets the callback function.
-func (x *FontClass) SetCallbackGetFontMap(cb func(*Font) *FontMap) {
+// OverrideGetFontMap sets the callback function.
+func (x *FontClass) OverrideGetFontMap(cb func(*Font) *FontMap) {
 	if cb == nil {
 		x.xGetFontMap = 0
 	} else {
@@ -155,8 +155,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFontMap gets the callback function.
-func (x *FontClass) GetCallbackGetFontMap() func(*Font) *FontMap {
+// GetGetFontMap gets the callback function.
+func (x *FontClass) GetGetFontMap() func(*Font) *FontMap {
 	if x.xGetFontMap == 0 {
 		return nil
 	}
@@ -173,8 +173,8 @@ 		return ret
 	}
 }
 
-// SetCallbackDescribeAbsolute sets the callback function.
-func (x *FontClass) SetCallbackDescribeAbsolute(cb func(*Font) *FontDescription) {
+// OverrideDescribeAbsolute sets the callback function.
+func (x *FontClass) OverrideDescribeAbsolute(cb func(*Font) *FontDescription) {
 	if cb == nil {
 		x.xDescribeAbsolute = 0
 	} else {
@@ -184,8 +184,8 @@ 		})
 	}
 }
 
-// GetCallbackDescribeAbsolute gets the callback function.
-func (x *FontClass) GetCallbackDescribeAbsolute() func(*Font) *FontDescription {
+// GetDescribeAbsolute gets the callback function.
+func (x *FontClass) GetDescribeAbsolute() func(*Font) *FontDescription {
 	if x.xDescribeAbsolute == 0 {
 		return nil
 	}
@@ -196,8 +196,8 @@ 		return rawCallback(FontVar.GoPointer())
 	}
 }
 
-// SetCallbackGetFeatures sets the callback function.
-func (x *FontClass) SetCallbackGetFeatures(cb func(*Font, []uintptr, uint, uint)) {
+// OverrideGetFeatures sets the callback function.
+func (x *FontClass) OverrideGetFeatures(cb func(*Font, []uintptr, uint, uint)) {
 	if cb == nil {
 		x.xGetFeatures = 0
 	} else {
@@ -207,8 +207,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFeatures gets the callback function.
-func (x *FontClass) GetCallbackGetFeatures() func(*Font, []uintptr, uint, uint) {
+// GetGetFeatures gets the callback function.
+func (x *FontClass) GetGetFeatures() func(*Font, []uintptr, uint, uint) {
 	if x.xGetFeatures == 0 {
 		return nil
 	}
@@ -219,8 +219,8 @@ 		rawCallback(FontVar.GoPointer(), FeaturesVar, LenVar, NumFeaturesVar)
 	}
 }
 
-// SetCallbackCreateHbFont sets the callback function.
-func (x *FontClass) SetCallbackCreateHbFont(cb func(*Font) uintptr) {
+// OverrideCreateHbFont sets the callback function.
+func (x *FontClass) OverrideCreateHbFont(cb func(*Font) uintptr) {
 	if cb == nil {
 		x.xCreateHbFont = 0
 	} else {
@@ -230,8 +230,8 @@ 		})
 	}
 }
 
-// GetCallbackCreateHbFont gets the callback function.
-func (x *FontClass) GetCallbackCreateHbFont() func(*Font) uintptr {
+// GetCreateHbFont gets the callback function.
+func (x *FontClass) GetCreateHbFont() func(*Font) uintptr {
 	if x.xCreateHbFont == 0 {
 		return nil
 	}
@@ -720,8 +720,8 @@ func (x *FontFaceClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetFaceName sets the callback function.
-func (x *FontFaceClass) SetCallbackGetFaceName(cb func(*FontFace) string) {
+// OverrideGetFaceName sets the callback function.
+func (x *FontFaceClass) OverrideGetFaceName(cb func(*FontFace) string) {
 	if cb == nil {
 		x.xGetFaceName = 0
 	} else {
@@ -731,8 +731,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFaceName gets the callback function.
-func (x *FontFaceClass) GetCallbackGetFaceName() func(*FontFace) string {
+// GetGetFaceName gets the callback function.
+func (x *FontFaceClass) GetGetFaceName() func(*FontFace) string {
 	if x.xGetFaceName == 0 {
 		return nil
 	}
@@ -743,8 +743,8 @@ 		return rawCallback(FaceVar.GoPointer())
 	}
 }
 
-// SetCallbackDescribe sets the callback function.
-func (x *FontFaceClass) SetCallbackDescribe(cb func(*FontFace) *FontDescription) {
+// OverrideDescribe sets the callback function.
+func (x *FontFaceClass) OverrideDescribe(cb func(*FontFace) *FontDescription) {
 	if cb == nil {
 		x.xDescribe = 0
 	} else {
@@ -754,8 +754,8 @@ 		})
 	}
 }
 
-// GetCallbackDescribe gets the callback function.
-func (x *FontFaceClass) GetCallbackDescribe() func(*FontFace) *FontDescription {
+// GetDescribe gets the callback function.
+func (x *FontFaceClass) GetDescribe() func(*FontFace) *FontDescription {
 	if x.xDescribe == 0 {
 		return nil
 	}
@@ -766,8 +766,8 @@ 		return rawCallback(FaceVar.GoPointer())
 	}
 }
 
-// SetCallbackListSizes sets the callback function.
-func (x *FontFaceClass) SetCallbackListSizes(cb func(*FontFace, []int, int)) {
+// OverrideListSizes sets the callback function.
+func (x *FontFaceClass) OverrideListSizes(cb func(*FontFace, []int, int)) {
 	if cb == nil {
 		x.xListSizes = 0
 	} else {
@@ -777,8 +777,8 @@ 		})
 	}
 }
 
-// GetCallbackListSizes gets the callback function.
-func (x *FontFaceClass) GetCallbackListSizes() func(*FontFace, []int, int) {
+// GetListSizes gets the callback function.
+func (x *FontFaceClass) GetListSizes() func(*FontFace, []int, int) {
 	if x.xListSizes == 0 {
 		return nil
 	}
@@ -789,8 +789,8 @@ 		rawCallback(FaceVar.GoPointer(), SizesVar, NSizesVar)
 	}
 }
 
-// SetCallbackIsSynthesized sets the callback function.
-func (x *FontFaceClass) SetCallbackIsSynthesized(cb func(*FontFace) bool) {
+// OverrideIsSynthesized sets the callback function.
+func (x *FontFaceClass) OverrideIsSynthesized(cb func(*FontFace) bool) {
 	if cb == nil {
 		x.xIsSynthesized = 0
 	} else {
@@ -800,8 +800,8 @@ 		})
 	}
 }
 
-// GetCallbackIsSynthesized gets the callback function.
-func (x *FontFaceClass) GetCallbackIsSynthesized() func(*FontFace) bool {
+// GetIsSynthesized gets the callback function.
+func (x *FontFaceClass) GetIsSynthesized() func(*FontFace) bool {
 	if x.xIsSynthesized == 0 {
 		return nil
 	}
@@ -812,8 +812,8 @@ 		return rawCallback(FaceVar.GoPointer())
 	}
 }
 
-// SetCallbackGetFamily sets the callback function.
-func (x *FontFaceClass) SetCallbackGetFamily(cb func(*FontFace) *FontFamily) {
+// OverrideGetFamily sets the callback function.
+func (x *FontFaceClass) OverrideGetFamily(cb func(*FontFace) *FontFamily) {
 	if cb == nil {
 		x.xGetFamily = 0
 	} else {
@@ -827,8 +827,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFamily gets the callback function.
-func (x *FontFaceClass) GetCallbackGetFamily() func(*FontFace) *FontFamily {
+// GetGetFamily gets the callback function.
+func (x *FontFaceClass) GetGetFamily() func(*FontFace) *FontFamily {
 	if x.xGetFamily == 0 {
 		return nil
 	}
@@ -845,8 +845,8 @@ 		return ret
 	}
 }
 
-// SetCallbackPangoReserved3 sets the callback function.
-func (x *FontFaceClass) SetCallbackPangoReserved3(cb func()) {
+// OverridePangoReserved3 sets the callback function.
+func (x *FontFaceClass) OverridePangoReserved3(cb func()) {
 	if cb == nil {
 		x.xPangoReserved3 = 0
 	} else {
@@ -856,8 +856,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved3 gets the callback function.
-func (x *FontFaceClass) GetCallbackPangoReserved3() func() {
+// GetPangoReserved3 gets the callback function.
+func (x *FontFaceClass) GetPangoReserved3() func() {
 	if x.xPangoReserved3 == 0 {
 		return nil
 	}
@@ -868,8 +868,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackPangoReserved4 sets the callback function.
-func (x *FontFaceClass) SetCallbackPangoReserved4(cb func()) {
+// OverridePangoReserved4 sets the callback function.
+func (x *FontFaceClass) OverridePangoReserved4(cb func()) {
 	if cb == nil {
 		x.xPangoReserved4 = 0
 	} else {
@@ -879,8 +879,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved4 gets the callback function.
-func (x *FontFaceClass) GetCallbackPangoReserved4() func() {
+// GetPangoReserved4 gets the callback function.
+func (x *FontFaceClass) GetPangoReserved4() func() {
 	if x.xPangoReserved4 == 0 {
 		return nil
 	}
@@ -913,8 +913,8 @@ func (x *FontFamilyClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackListFaces sets the callback function.
-func (x *FontFamilyClass) SetCallbackListFaces(cb func(*FontFamily, uintptr, int)) {
+// OverrideListFaces sets the callback function.
+func (x *FontFamilyClass) OverrideListFaces(cb func(*FontFamily, uintptr, int)) {
 	if cb == nil {
 		x.xListFaces = 0
 	} else {
@@ -924,8 +924,8 @@ 		})
 	}
 }
 
-// GetCallbackListFaces gets the callback function.
-func (x *FontFamilyClass) GetCallbackListFaces() func(*FontFamily, uintptr, int) {
+// GetListFaces gets the callback function.
+func (x *FontFamilyClass) GetListFaces() func(*FontFamily, uintptr, int) {
 	if x.xListFaces == 0 {
 		return nil
 	}
@@ -936,8 +936,8 @@ 		rawCallback(FamilyVar.GoPointer(), FacesVar, NFacesVar)
 	}
 }
 
-// SetCallbackGetName sets the callback function.
-func (x *FontFamilyClass) SetCallbackGetName(cb func(*FontFamily) string) {
+// OverrideGetName sets the callback function.
+func (x *FontFamilyClass) OverrideGetName(cb func(*FontFamily) string) {
 	if cb == nil {
 		x.xGetName = 0
 	} else {
@@ -947,8 +947,8 @@ 		})
 	}
 }
 
-// GetCallbackGetName gets the callback function.
-func (x *FontFamilyClass) GetCallbackGetName() func(*FontFamily) string {
+// GetGetName gets the callback function.
+func (x *FontFamilyClass) GetGetName() func(*FontFamily) string {
 	if x.xGetName == 0 {
 		return nil
 	}
@@ -959,8 +959,8 @@ 		return rawCallback(FamilyVar.GoPointer())
 	}
 }
 
-// SetCallbackIsMonospace sets the callback function.
-func (x *FontFamilyClass) SetCallbackIsMonospace(cb func(*FontFamily) bool) {
+// OverrideIsMonospace sets the callback function.
+func (x *FontFamilyClass) OverrideIsMonospace(cb func(*FontFamily) bool) {
 	if cb == nil {
 		x.xIsMonospace = 0
 	} else {
@@ -970,8 +970,8 @@ 		})
 	}
 }
 
-// GetCallbackIsMonospace gets the callback function.
-func (x *FontFamilyClass) GetCallbackIsMonospace() func(*FontFamily) bool {
+// GetIsMonospace gets the callback function.
+func (x *FontFamilyClass) GetIsMonospace() func(*FontFamily) bool {
 	if x.xIsMonospace == 0 {
 		return nil
 	}
@@ -982,8 +982,8 @@ 		return rawCallback(FamilyVar.GoPointer())
 	}
 }
 
-// SetCallbackIsVariable sets the callback function.
-func (x *FontFamilyClass) SetCallbackIsVariable(cb func(*FontFamily) bool) {
+// OverrideIsVariable sets the callback function.
+func (x *FontFamilyClass) OverrideIsVariable(cb func(*FontFamily) bool) {
 	if cb == nil {
 		x.xIsVariable = 0
 	} else {
@@ -993,8 +993,8 @@ 		})
 	}
 }
 
-// GetCallbackIsVariable gets the callback function.
-func (x *FontFamilyClass) GetCallbackIsVariable() func(*FontFamily) bool {
+// GetIsVariable gets the callback function.
+func (x *FontFamilyClass) GetIsVariable() func(*FontFamily) bool {
 	if x.xIsVariable == 0 {
 		return nil
 	}
@@ -1005,8 +1005,8 @@ 		return rawCallback(FamilyVar.GoPointer())
 	}
 }
 
-// SetCallbackGetFace sets the callback function.
-func (x *FontFamilyClass) SetCallbackGetFace(cb func(*FontFamily, string) *FontFace) {
+// OverrideGetFace sets the callback function.
+func (x *FontFamilyClass) OverrideGetFace(cb func(*FontFamily, string) *FontFace) {
 	if cb == nil {
 		x.xGetFace = 0
 	} else {
@@ -1020,8 +1020,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFace gets the callback function.
-func (x *FontFamilyClass) GetCallbackGetFace() func(*FontFamily, string) *FontFace {
+// GetGetFace gets the callback function.
+func (x *FontFamilyClass) GetGetFace() func(*FontFamily, string) *FontFace {
 	if x.xGetFace == 0 {
 		return nil
 	}
@@ -1038,8 +1038,8 @@ 		return ret
 	}
 }
 
-// SetCallbackPangoReserved2 sets the callback function.
-func (x *FontFamilyClass) SetCallbackPangoReserved2(cb func()) {
+// OverridePangoReserved2 sets the callback function.
+func (x *FontFamilyClass) OverridePangoReserved2(cb func()) {
 	if cb == nil {
 		x.xPangoReserved2 = 0
 	} else {
@@ -1049,8 +1049,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved2 gets the callback function.
-func (x *FontFamilyClass) GetCallbackPangoReserved2() func() {
+// GetPangoReserved2 gets the callback function.
+func (x *FontFamilyClass) GetPangoReserved2() func() {
 	if x.xPangoReserved2 == 0 {
 		return nil
 	}
diff --git a/v4/pango/pango-fontmap.go b/v4/pango/pango-fontmap.go
index 04d6da4ca071865eefecc52c972e26d0e785d973..fdeb944a641533156aeab12b49acf4ceab2c1e4c 100644
--- a/v4/pango/pango-fontmap.go
+++ b/v4/pango/pango-fontmap.go
@@ -39,8 +39,8 @@ func (x *FontMapClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackLoadFont sets the callback function.
-func (x *FontMapClass) SetCallbackLoadFont(cb func(*FontMap, *Context, *FontDescription) *Font) {
+// OverrideLoadFont sets the callback function.
+func (x *FontMapClass) OverrideLoadFont(cb func(*FontMap, *Context, *FontDescription) *Font) {
 	if cb == nil {
 		x.xLoadFont = 0
 	} else {
@@ -54,8 +54,8 @@ 		})
 	}
 }
 
-// GetCallbackLoadFont gets the callback function.
-func (x *FontMapClass) GetCallbackLoadFont() func(*FontMap, *Context, *FontDescription) *Font {
+// GetLoadFont gets the callback function.
+func (x *FontMapClass) GetLoadFont() func(*FontMap, *Context, *FontDescription) *Font {
 	if x.xLoadFont == 0 {
 		return nil
 	}
@@ -72,8 +72,8 @@ 		return ret
 	}
 }
 
-// SetCallbackListFamilies sets the callback function.
-func (x *FontMapClass) SetCallbackListFamilies(cb func(*FontMap, uintptr, int)) {
+// OverrideListFamilies sets the callback function.
+func (x *FontMapClass) OverrideListFamilies(cb func(*FontMap, uintptr, int)) {
 	if cb == nil {
 		x.xListFamilies = 0
 	} else {
@@ -83,8 +83,8 @@ 		})
 	}
 }
 
-// GetCallbackListFamilies gets the callback function.
-func (x *FontMapClass) GetCallbackListFamilies() func(*FontMap, uintptr, int) {
+// GetListFamilies gets the callback function.
+func (x *FontMapClass) GetListFamilies() func(*FontMap, uintptr, int) {
 	if x.xListFamilies == 0 {
 		return nil
 	}
@@ -95,8 +95,8 @@ 		rawCallback(FontmapVar.GoPointer(), FamiliesVar, NFamiliesVar)
 	}
 }
 
-// SetCallbackLoadFontset sets the callback function.
-func (x *FontMapClass) SetCallbackLoadFontset(cb func(*FontMap, *Context, *FontDescription, *Language) *Fontset) {
+// OverrideLoadFontset sets the callback function.
+func (x *FontMapClass) OverrideLoadFontset(cb func(*FontMap, *Context, *FontDescription, *Language) *Fontset) {
 	if cb == nil {
 		x.xLoadFontset = 0
 	} else {
@@ -110,8 +110,8 @@ 		})
 	}
 }
 
-// GetCallbackLoadFontset gets the callback function.
-func (x *FontMapClass) GetCallbackLoadFontset() func(*FontMap, *Context, *FontDescription, *Language) *Fontset {
+// GetLoadFontset gets the callback function.
+func (x *FontMapClass) GetLoadFontset() func(*FontMap, *Context, *FontDescription, *Language) *Fontset {
 	if x.xLoadFontset == 0 {
 		return nil
 	}
@@ -128,8 +128,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetSerial sets the callback function.
-func (x *FontMapClass) SetCallbackGetSerial(cb func(*FontMap) uint) {
+// OverrideGetSerial sets the callback function.
+func (x *FontMapClass) OverrideGetSerial(cb func(*FontMap) uint) {
 	if cb == nil {
 		x.xGetSerial = 0
 	} else {
@@ -139,8 +139,8 @@ 		})
 	}
 }
 
-// GetCallbackGetSerial gets the callback function.
-func (x *FontMapClass) GetCallbackGetSerial() func(*FontMap) uint {
+// GetGetSerial gets the callback function.
+func (x *FontMapClass) GetGetSerial() func(*FontMap) uint {
 	if x.xGetSerial == 0 {
 		return nil
 	}
@@ -151,8 +151,8 @@ 		return rawCallback(FontmapVar.GoPointer())
 	}
 }
 
-// SetCallbackChanged sets the callback function.
-func (x *FontMapClass) SetCallbackChanged(cb func(*FontMap)) {
+// OverrideChanged sets the callback function.
+func (x *FontMapClass) OverrideChanged(cb func(*FontMap)) {
 	if cb == nil {
 		x.xChanged = 0
 	} else {
@@ -162,8 +162,8 @@ 		})
 	}
 }
 
-// GetCallbackChanged gets the callback function.
-func (x *FontMapClass) GetCallbackChanged() func(*FontMap) {
+// GetChanged gets the callback function.
+func (x *FontMapClass) GetChanged() func(*FontMap) {
 	if x.xChanged == 0 {
 		return nil
 	}
@@ -174,8 +174,8 @@ 		rawCallback(FontmapVar.GoPointer())
 	}
 }
 
-// SetCallbackGetFamily sets the callback function.
-func (x *FontMapClass) SetCallbackGetFamily(cb func(*FontMap, string) *FontFamily) {
+// OverrideGetFamily sets the callback function.
+func (x *FontMapClass) OverrideGetFamily(cb func(*FontMap, string) *FontFamily) {
 	if cb == nil {
 		x.xGetFamily = 0
 	} else {
@@ -189,8 +189,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFamily gets the callback function.
-func (x *FontMapClass) GetCallbackGetFamily() func(*FontMap, string) *FontFamily {
+// GetGetFamily gets the callback function.
+func (x *FontMapClass) GetGetFamily() func(*FontMap, string) *FontFamily {
 	if x.xGetFamily == 0 {
 		return nil
 	}
@@ -207,8 +207,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetFace sets the callback function.
-func (x *FontMapClass) SetCallbackGetFace(cb func(*FontMap, *Font) *FontFace) {
+// OverrideGetFace sets the callback function.
+func (x *FontMapClass) OverrideGetFace(cb func(*FontMap, *Font) *FontFace) {
 	if cb == nil {
 		x.xGetFace = 0
 	} else {
@@ -222,8 +222,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFace gets the callback function.
-func (x *FontMapClass) GetCallbackGetFace() func(*FontMap, *Font) *FontFace {
+// GetGetFace gets the callback function.
+func (x *FontMapClass) GetGetFace() func(*FontMap, *Font) *FontFace {
 	if x.xGetFace == 0 {
 		return nil
 	}
diff --git a/v4/pango/pango-fontset.go b/v4/pango/pango-fontset.go
index f55437313b698c9544ba30ed0a7a84ed7bd50c3e..cc970d3d7539e16ea41920a666b445a732e64fa8 100644
--- a/v4/pango/pango-fontset.go
+++ b/v4/pango/pango-fontset.go
@@ -44,8 +44,8 @@ func (x *FontsetClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackGetFont sets the callback function.
-func (x *FontsetClass) SetCallbackGetFont(cb func(*Fontset, uint) *Font) {
+// OverrideGetFont sets the callback function.
+func (x *FontsetClass) OverrideGetFont(cb func(*Fontset, uint) *Font) {
 	if cb == nil {
 		x.xGetFont = 0
 	} else {
@@ -59,8 +59,8 @@ 		})
 	}
 }
 
-// GetCallbackGetFont gets the callback function.
-func (x *FontsetClass) GetCallbackGetFont() func(*Fontset, uint) *Font {
+// GetGetFont gets the callback function.
+func (x *FontsetClass) GetGetFont() func(*Fontset, uint) *Font {
 	if x.xGetFont == 0 {
 		return nil
 	}
@@ -77,8 +77,8 @@ 		return ret
 	}
 }
 
-// SetCallbackGetMetrics sets the callback function.
-func (x *FontsetClass) SetCallbackGetMetrics(cb func(*Fontset) *FontMetrics) {
+// OverrideGetMetrics sets the callback function.
+func (x *FontsetClass) OverrideGetMetrics(cb func(*Fontset) *FontMetrics) {
 	if cb == nil {
 		x.xGetMetrics = 0
 	} else {
@@ -88,8 +88,8 @@ 		})
 	}
 }
 
-// GetCallbackGetMetrics gets the callback function.
-func (x *FontsetClass) GetCallbackGetMetrics() func(*Fontset) *FontMetrics {
+// GetGetMetrics gets the callback function.
+func (x *FontsetClass) GetGetMetrics() func(*Fontset) *FontMetrics {
 	if x.xGetMetrics == 0 {
 		return nil
 	}
@@ -100,8 +100,8 @@ 		return rawCallback(FontsetVar.GoPointer())
 	}
 }
 
-// SetCallbackGetLanguage sets the callback function.
-func (x *FontsetClass) SetCallbackGetLanguage(cb func(*Fontset) *Language) {
+// OverrideGetLanguage sets the callback function.
+func (x *FontsetClass) OverrideGetLanguage(cb func(*Fontset) *Language) {
 	if cb == nil {
 		x.xGetLanguage = 0
 	} else {
@@ -111,8 +111,8 @@ 		})
 	}
 }
 
-// GetCallbackGetLanguage gets the callback function.
-func (x *FontsetClass) GetCallbackGetLanguage() func(*Fontset) *Language {
+// GetGetLanguage gets the callback function.
+func (x *FontsetClass) GetGetLanguage() func(*Fontset) *Language {
 	if x.xGetLanguage == 0 {
 		return nil
 	}
@@ -123,10 +123,10 @@ 		return rawCallback(FontsetVar.GoPointer())
 	}
 }
 
-// SetCallbackForeach sets the callback function.
+// OverrideForeach sets the callback function.
 // Callback used by pango_fontset_foreach() when enumerating
 // fonts in a fontset.
-func (x *FontsetClass) SetCallbackForeach(cb func(*Fontset, *FontsetForeachFunc, uintptr)) {
+func (x *FontsetClass) OverrideForeach(cb func(*Fontset, *FontsetForeachFunc, uintptr)) {
 	if cb == nil {
 		x.xForeach = 0
 	} else {
@@ -136,10 +136,10 @@ 		})
 	}
 }
 
-// GetCallbackForeach gets the callback function.
+// GetForeach gets the callback function.
 // Callback used by pango_fontset_foreach() when enumerating
 // fonts in a fontset.
-func (x *FontsetClass) GetCallbackForeach() func(*Fontset, *FontsetForeachFunc, uintptr) {
+func (x *FontsetClass) GetForeach() func(*Fontset, *FontsetForeachFunc, uintptr) {
 	if x.xForeach == 0 {
 		return nil
 	}
@@ -150,8 +150,8 @@ 		rawCallback(FontsetVar.GoPointer(), glib.NewCallback(FuncVar), DataVar)
 	}
 }
 
-// SetCallbackPangoReserved1 sets the callback function.
-func (x *FontsetClass) SetCallbackPangoReserved1(cb func()) {
+// OverridePangoReserved1 sets the callback function.
+func (x *FontsetClass) OverridePangoReserved1(cb func()) {
 	if cb == nil {
 		x.xPangoReserved1 = 0
 	} else {
@@ -161,8 +161,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved1 gets the callback function.
-func (x *FontsetClass) GetCallbackPangoReserved1() func() {
+// GetPangoReserved1 gets the callback function.
+func (x *FontsetClass) GetPangoReserved1() func() {
 	if x.xPangoReserved1 == 0 {
 		return nil
 	}
@@ -173,8 +173,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackPangoReserved2 sets the callback function.
-func (x *FontsetClass) SetCallbackPangoReserved2(cb func()) {
+// OverridePangoReserved2 sets the callback function.
+func (x *FontsetClass) OverridePangoReserved2(cb func()) {
 	if cb == nil {
 		x.xPangoReserved2 = 0
 	} else {
@@ -184,8 +184,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved2 gets the callback function.
-func (x *FontsetClass) GetCallbackPangoReserved2() func() {
+// GetPangoReserved2 gets the callback function.
+func (x *FontsetClass) GetPangoReserved2() func() {
 	if x.xPangoReserved2 == 0 {
 		return nil
 	}
@@ -196,8 +196,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackPangoReserved3 sets the callback function.
-func (x *FontsetClass) SetCallbackPangoReserved3(cb func()) {
+// OverridePangoReserved3 sets the callback function.
+func (x *FontsetClass) OverridePangoReserved3(cb func()) {
 	if cb == nil {
 		x.xPangoReserved3 = 0
 	} else {
@@ -207,8 +207,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved3 gets the callback function.
-func (x *FontsetClass) GetCallbackPangoReserved3() func() {
+// GetPangoReserved3 gets the callback function.
+func (x *FontsetClass) GetPangoReserved3() func() {
 	if x.xPangoReserved3 == 0 {
 		return nil
 	}
@@ -219,8 +219,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackPangoReserved4 sets the callback function.
-func (x *FontsetClass) SetCallbackPangoReserved4(cb func()) {
+// OverridePangoReserved4 sets the callback function.
+func (x *FontsetClass) OverridePangoReserved4(cb func()) {
 	if cb == nil {
 		x.xPangoReserved4 = 0
 	} else {
@@ -230,8 +230,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved4 gets the callback function.
-func (x *FontsetClass) GetCallbackPangoReserved4() func() {
+// GetPangoReserved4 gets the callback function.
+func (x *FontsetClass) GetPangoReserved4() func() {
 	if x.xPangoReserved4 == 0 {
 		return nil
 	}
diff --git a/v4/pango/pango-renderer.go b/v4/pango/pango-renderer.go
index a9c7d05f491ef034cdc53b98f925e7d44c25b296..ea64aaf46c2353c55993b5c04b0b9f4a3d993c93 100644
--- a/v4/pango/pango-renderer.go
+++ b/v4/pango/pango-renderer.go
@@ -65,8 +65,8 @@ func (x *RendererClass) GoPointer() uintptr {
 	return uintptr(unsafe.Pointer(x))
 }
 
-// SetCallbackDrawGlyphs sets the callback function.
-func (x *RendererClass) SetCallbackDrawGlyphs(cb func(*Renderer, *Font, *GlyphString, int, int)) {
+// OverrideDrawGlyphs sets the callback function.
+func (x *RendererClass) OverrideDrawGlyphs(cb func(*Renderer, *Font, *GlyphString, int, int)) {
 	if cb == nil {
 		x.xDrawGlyphs = 0
 	} else {
@@ -76,8 +76,8 @@ 		})
 	}
 }
 
-// GetCallbackDrawGlyphs gets the callback function.
-func (x *RendererClass) GetCallbackDrawGlyphs() func(*Renderer, *Font, *GlyphString, int, int) {
+// GetDrawGlyphs gets the callback function.
+func (x *RendererClass) GetDrawGlyphs() func(*Renderer, *Font, *GlyphString, int, int) {
 	if x.xDrawGlyphs == 0 {
 		return nil
 	}
@@ -88,8 +88,8 @@ 		rawCallback(RendererVar.GoPointer(), FontVar.GoPointer(), GlyphsVar, XVar, YVar)
 	}
 }
 
-// SetCallbackDrawRectangle sets the callback function.
-func (x *RendererClass) SetCallbackDrawRectangle(cb func(*Renderer, RenderPart, int, int, int, int)) {
+// OverrideDrawRectangle sets the callback function.
+func (x *RendererClass) OverrideDrawRectangle(cb func(*Renderer, RenderPart, int, int, int, int)) {
 	if cb == nil {
 		x.xDrawRectangle = 0
 	} else {
@@ -99,8 +99,8 @@ 		})
 	}
 }
 
-// GetCallbackDrawRectangle gets the callback function.
-func (x *RendererClass) GetCallbackDrawRectangle() func(*Renderer, RenderPart, int, int, int, int) {
+// GetDrawRectangle gets the callback function.
+func (x *RendererClass) GetDrawRectangle() func(*Renderer, RenderPart, int, int, int, int) {
 	if x.xDrawRectangle == 0 {
 		return nil
 	}
@@ -111,8 +111,8 @@ 		rawCallback(RendererVar.GoPointer(), PartVar, XVar, YVar, WidthVar, HeightVar)
 	}
 }
 
-// SetCallbackDrawErrorUnderline sets the callback function.
-func (x *RendererClass) SetCallbackDrawErrorUnderline(cb func(*Renderer, int, int, int, int)) {
+// OverrideDrawErrorUnderline sets the callback function.
+func (x *RendererClass) OverrideDrawErrorUnderline(cb func(*Renderer, int, int, int, int)) {
 	if cb == nil {
 		x.xDrawErrorUnderline = 0
 	} else {
@@ -122,8 +122,8 @@ 		})
 	}
 }
 
-// GetCallbackDrawErrorUnderline gets the callback function.
-func (x *RendererClass) GetCallbackDrawErrorUnderline() func(*Renderer, int, int, int, int) {
+// GetDrawErrorUnderline gets the callback function.
+func (x *RendererClass) GetDrawErrorUnderline() func(*Renderer, int, int, int, int) {
 	if x.xDrawErrorUnderline == 0 {
 		return nil
 	}
@@ -134,8 +134,8 @@ 		rawCallback(RendererVar.GoPointer(), XVar, YVar, WidthVar, HeightVar)
 	}
 }
 
-// SetCallbackDrawShape sets the callback function.
-func (x *RendererClass) SetCallbackDrawShape(cb func(*Renderer, *AttrShape, int, int)) {
+// OverrideDrawShape sets the callback function.
+func (x *RendererClass) OverrideDrawShape(cb func(*Renderer, *AttrShape, int, int)) {
 	if cb == nil {
 		x.xDrawShape = 0
 	} else {
@@ -145,8 +145,8 @@ 		})
 	}
 }
 
-// GetCallbackDrawShape gets the callback function.
-func (x *RendererClass) GetCallbackDrawShape() func(*Renderer, *AttrShape, int, int) {
+// GetDrawShape gets the callback function.
+func (x *RendererClass) GetDrawShape() func(*Renderer, *AttrShape, int, int) {
 	if x.xDrawShape == 0 {
 		return nil
 	}
@@ -157,8 +157,8 @@ 		rawCallback(RendererVar.GoPointer(), AttrVar, XVar, YVar)
 	}
 }
 
-// SetCallbackDrawTrapezoid sets the callback function.
-func (x *RendererClass) SetCallbackDrawTrapezoid(cb func(*Renderer, RenderPart, float64, float64, float64, float64, float64, float64)) {
+// OverrideDrawTrapezoid sets the callback function.
+func (x *RendererClass) OverrideDrawTrapezoid(cb func(*Renderer, RenderPart, float64, float64, float64, float64, float64, float64)) {
 	if cb == nil {
 		x.xDrawTrapezoid = 0
 	} else {
@@ -168,8 +168,8 @@ 		})
 	}
 }
 
-// GetCallbackDrawTrapezoid gets the callback function.
-func (x *RendererClass) GetCallbackDrawTrapezoid() func(*Renderer, RenderPart, float64, float64, float64, float64, float64, float64) {
+// GetDrawTrapezoid gets the callback function.
+func (x *RendererClass) GetDrawTrapezoid() func(*Renderer, RenderPart, float64, float64, float64, float64, float64, float64) {
 	if x.xDrawTrapezoid == 0 {
 		return nil
 	}
@@ -180,8 +180,8 @@ 		rawCallback(RendererVar.GoPointer(), PartVar, Y1Var, X11Var, X21Var, Y2Var, X12Var, X22Var)
 	}
 }
 
-// SetCallbackDrawGlyph sets the callback function.
-func (x *RendererClass) SetCallbackDrawGlyph(cb func(*Renderer, *Font, Glyph, float64, float64)) {
+// OverrideDrawGlyph sets the callback function.
+func (x *RendererClass) OverrideDrawGlyph(cb func(*Renderer, *Font, Glyph, float64, float64)) {
 	if cb == nil {
 		x.xDrawGlyph = 0
 	} else {
@@ -191,8 +191,8 @@ 		})
 	}
 }
 
-// GetCallbackDrawGlyph gets the callback function.
-func (x *RendererClass) GetCallbackDrawGlyph() func(*Renderer, *Font, Glyph, float64, float64) {
+// GetDrawGlyph gets the callback function.
+func (x *RendererClass) GetDrawGlyph() func(*Renderer, *Font, Glyph, float64, float64) {
 	if x.xDrawGlyph == 0 {
 		return nil
 	}
@@ -203,8 +203,8 @@ 		rawCallback(RendererVar.GoPointer(), FontVar.GoPointer(), GlyphVar, XVar, YVar)
 	}
 }
 
-// SetCallbackPartChanged sets the callback function.
-func (x *RendererClass) SetCallbackPartChanged(cb func(*Renderer, RenderPart)) {
+// OverridePartChanged sets the callback function.
+func (x *RendererClass) OverridePartChanged(cb func(*Renderer, RenderPart)) {
 	if cb == nil {
 		x.xPartChanged = 0
 	} else {
@@ -214,8 +214,8 @@ 		})
 	}
 }
 
-// GetCallbackPartChanged gets the callback function.
-func (x *RendererClass) GetCallbackPartChanged() func(*Renderer, RenderPart) {
+// GetPartChanged gets the callback function.
+func (x *RendererClass) GetPartChanged() func(*Renderer, RenderPart) {
 	if x.xPartChanged == 0 {
 		return nil
 	}
@@ -226,8 +226,8 @@ 		rawCallback(RendererVar.GoPointer(), PartVar)
 	}
 }
 
-// SetCallbackBegin sets the callback function.
-func (x *RendererClass) SetCallbackBegin(cb func(*Renderer)) {
+// OverrideBegin sets the callback function.
+func (x *RendererClass) OverrideBegin(cb func(*Renderer)) {
 	if cb == nil {
 		x.xBegin = 0
 	} else {
@@ -237,8 +237,8 @@ 		})
 	}
 }
 
-// GetCallbackBegin gets the callback function.
-func (x *RendererClass) GetCallbackBegin() func(*Renderer) {
+// GetBegin gets the callback function.
+func (x *RendererClass) GetBegin() func(*Renderer) {
 	if x.xBegin == 0 {
 		return nil
 	}
@@ -249,8 +249,8 @@ 		rawCallback(RendererVar.GoPointer())
 	}
 }
 
-// SetCallbackEnd sets the callback function.
-func (x *RendererClass) SetCallbackEnd(cb func(*Renderer)) {
+// OverrideEnd sets the callback function.
+func (x *RendererClass) OverrideEnd(cb func(*Renderer)) {
 	if cb == nil {
 		x.xEnd = 0
 	} else {
@@ -260,8 +260,8 @@ 		})
 	}
 }
 
-// GetCallbackEnd gets the callback function.
-func (x *RendererClass) GetCallbackEnd() func(*Renderer) {
+// GetEnd gets the callback function.
+func (x *RendererClass) GetEnd() func(*Renderer) {
 	if x.xEnd == 0 {
 		return nil
 	}
@@ -272,8 +272,8 @@ 		rawCallback(RendererVar.GoPointer())
 	}
 }
 
-// SetCallbackPrepareRun sets the callback function.
-func (x *RendererClass) SetCallbackPrepareRun(cb func(*Renderer, *LayoutRun)) {
+// OverridePrepareRun sets the callback function.
+func (x *RendererClass) OverridePrepareRun(cb func(*Renderer, *LayoutRun)) {
 	if cb == nil {
 		x.xPrepareRun = 0
 	} else {
@@ -283,8 +283,8 @@ 		})
 	}
 }
 
-// GetCallbackPrepareRun gets the callback function.
-func (x *RendererClass) GetCallbackPrepareRun() func(*Renderer, *LayoutRun) {
+// GetPrepareRun gets the callback function.
+func (x *RendererClass) GetPrepareRun() func(*Renderer, *LayoutRun) {
 	if x.xPrepareRun == 0 {
 		return nil
 	}
@@ -295,8 +295,8 @@ 		rawCallback(RendererVar.GoPointer(), RunVar)
 	}
 }
 
-// SetCallbackDrawGlyphItem sets the callback function.
-func (x *RendererClass) SetCallbackDrawGlyphItem(cb func(*Renderer, string, *GlyphItem, int, int)) {
+// OverrideDrawGlyphItem sets the callback function.
+func (x *RendererClass) OverrideDrawGlyphItem(cb func(*Renderer, string, *GlyphItem, int, int)) {
 	if cb == nil {
 		x.xDrawGlyphItem = 0
 	} else {
@@ -306,8 +306,8 @@ 		})
 	}
 }
 
-// GetCallbackDrawGlyphItem gets the callback function.
-func (x *RendererClass) GetCallbackDrawGlyphItem() func(*Renderer, string, *GlyphItem, int, int) {
+// GetDrawGlyphItem gets the callback function.
+func (x *RendererClass) GetDrawGlyphItem() func(*Renderer, string, *GlyphItem, int, int) {
 	if x.xDrawGlyphItem == 0 {
 		return nil
 	}
@@ -318,8 +318,8 @@ 		rawCallback(RendererVar.GoPointer(), TextVar, GlyphItemVar, XVar, YVar)
 	}
 }
 
-// SetCallbackPangoReserved2 sets the callback function.
-func (x *RendererClass) SetCallbackPangoReserved2(cb func()) {
+// OverridePangoReserved2 sets the callback function.
+func (x *RendererClass) OverridePangoReserved2(cb func()) {
 	if cb == nil {
 		x.xPangoReserved2 = 0
 	} else {
@@ -329,8 +329,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved2 gets the callback function.
-func (x *RendererClass) GetCallbackPangoReserved2() func() {
+// GetPangoReserved2 gets the callback function.
+func (x *RendererClass) GetPangoReserved2() func() {
 	if x.xPangoReserved2 == 0 {
 		return nil
 	}
@@ -341,8 +341,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackPangoReserved3 sets the callback function.
-func (x *RendererClass) SetCallbackPangoReserved3(cb func()) {
+// OverridePangoReserved3 sets the callback function.
+func (x *RendererClass) OverridePangoReserved3(cb func()) {
 	if cb == nil {
 		x.xPangoReserved3 = 0
 	} else {
@@ -352,8 +352,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved3 gets the callback function.
-func (x *RendererClass) GetCallbackPangoReserved3() func() {
+// GetPangoReserved3 gets the callback function.
+func (x *RendererClass) GetPangoReserved3() func() {
 	if x.xPangoReserved3 == 0 {
 		return nil
 	}
@@ -364,8 +364,8 @@ 		rawCallback()
 	}
 }
 
-// SetCallbackPangoReserved4 sets the callback function.
-func (x *RendererClass) SetCallbackPangoReserved4(cb func()) {
+// OverridePangoReserved4 sets the callback function.
+func (x *RendererClass) OverridePangoReserved4(cb func()) {
 	if cb == nil {
 		x.xPangoReserved4 = 0
 	} else {
@@ -375,8 +375,8 @@ 		})
 	}
 }
 
-// GetCallbackPangoReserved4 gets the callback function.
-func (x *RendererClass) GetCallbackPangoReserved4() func() {
+// GetPangoReserved4 gets the callback function.
+func (x *RendererClass) GetPangoReserved4() func() {
 	if x.xPangoReserved4 == 0 {
 		return nil
 	}

