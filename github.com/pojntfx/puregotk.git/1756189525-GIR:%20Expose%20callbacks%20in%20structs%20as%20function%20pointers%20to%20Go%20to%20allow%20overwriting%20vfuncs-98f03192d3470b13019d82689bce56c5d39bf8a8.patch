From 98f03192d3470b13019d82689bce56c5d39bf8a8 Mon Sep 17 00:00:00 2001
From: Felicitas Pojtinger <felicitas@pojtinger.com>
Date: Mon, 25 Aug 2025 23:25:25 -0700
Subject: [PATCH] GIR: Expose callbacks in structs as function pointers to Go to allow overwriting vfuncs

Signed-off-by: Felicitas Pojtinger <felicitas@pojtinger.com>
---
diff --git a/internal/gir/pass/pass.go b/internal/gir/pass/pass.go
index 31549f40c571c4dcc3433163abfad551a7c023a9..bdbedb2a28c22b09be5e906042da308e2d796029 100644
--- a/internal/gir/pass/pass.go
+++ b/internal/gir/pass/pass.go
@@ -118,21 +118,30 @@ 				Ret:   c.ReturnValue.Template(ns.Name, "", p.Types, c.Throws),
 			}
 		}
 		for _, f := range rec.Fields {
-			_type := f.Translate(ns.Name, p.Types)
-			if _type == "" {
-				continue
-			}
-			// HACK: Handle the specific case where a gint is converted to an int
-			// But for structs this needs to be an int32 as purego just gets the pointer to the struct
-			// Instead of converting each field separately
-			if f.AnyType.Type != nil && f.AnyType.Type.CType == "gint" {
-				_type = "int32"
-			}
+			var _type string
+			
+			// Check if this field is a callback
+			if f.Callback != nil {
+				// Callbacks in structs are function pointers, represented as uintptr
+				_type = "uintptr"
+			} else {
+				_type = f.Translate(ns.Name, p.Types)
+				if _type == "" {
+					continue
+				}
+				// HACK: Handle the specific case where a gint is converted to an int
+				// But for structs this needs to be an int32 as purego just gets the pointer to the struct
+				// Instead of converting each field separately
+				if f.AnyType.Type != nil && f.AnyType.Type.CType == "gint" {
+					_type = "int32"
+				}
 
-			// HACK: in structs the strings should be uintptr as we convert it ourselves
-			if _type == "string" {
-				_type = "uintptr"
+				// HACK: in structs the strings should be uintptr as we convert it ourselves
+				if _type == "string" {
+					_type = "uintptr"
+				}
 			}
+			
 			fields = append(fields, types.RecordField{
 				Name: util.SnakeToCamel(f.Name),
 				Type: _type,
diff --git a/templates/go b/templates/go
index 9a6c8b80a54cc01f5a928e7d27c3e4acfcafa3a0..3bc6fa583d766515fd22da01f41ee4fa46e6228c 100644
--- a/templates/go
+++ b/templates/go
@@ -3,14 +3,30 @@ package {{.PkgName}}
 
 {{ $NotGObject := ne .PkgName "gobject" }}
 {{ $NotGLib := ne .PkgName "glib" }}
+{{ $HasSignals := false }}
+{{range .Classes -}}
+  {{if .Signals}}
+    {{ $HasSignals = true }}
+  {{end}}
+{{end}}
+{{ $NeedsUnsafe := or .Records $HasSignals }}
+{{ $NeedsPurego := or .NeedsInit $HasSignals }}
+{{ $AnyImports := or .NeedsInit .Records $HasSignals }}
 
-{{if .NeedsInit}}
+{{if $AnyImports}}
 import (
-       {{if .Records}}
-       "structs"
-       {{end}}
-       "github.com/jwijenbergh/purego"
-       "github.com/jwijenbergh/puregotk/internal/core"
+{{- if $NeedsUnsafe}}
+	"unsafe"
+{{- end}}
+{{- if .Records}}
+	"structs"
+{{- end}}
+{{- if $NeedsPurego}}
+	"github.com/jwijenbergh/purego"
+{{- end}}
+{{- if .NeedsInit}}
+	"github.com/jwijenbergh/puregotk/internal/core"
+{{- end}}
 )
 {{end}}
 

